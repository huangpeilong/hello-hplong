diff -uNr ats_etc_init/cache.config ats1_etc_dest/cache.config
--- ats_etc_init/cache.config	2017-06-28 03:07:12.913572959 +0000
+++ ats1_etc_dest/cache.config	2017-06-28 03:07:04.330572092 +0000
@@ -52,3 +52,8 @@
 #
 #  Revalidate all http objects from www.example.com after 2 hours 
 #    dest_domain=www.example.com   scheme=http  revalidate=2h
+     dest_domain=source.hntvvideo.isurecloud.com scheme=http ttl-in-cache=3650d
+     dest_domain=source.hntvdown.cloudquic.com scheme=http ttl-in-cache=3650d
+#     dest_domain=source.hntvdown.cloudquic.com scheme=http method=HEAD action=never-cache
+#     dest_domain=soure.hntvdown.isurecloud.com method=head action=never-cache
+
diff -uNr ats_etc_init/cache.config_1 ats1_etc_dest/cache.config_1
--- ats_etc_init/cache.config_1	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/cache.config_1	2017-06-28 03:07:04.250565218 +0000
@@ -0,0 +1,59 @@
+#
+# cache.config
+#
+# The purpose of this file is to alter caching parameters of
+#   specific objects or sets of objects
+#
+# Each line consists of a set of tag value pairs.  The pairs
+#   are in the format  <tag>=<value>
+# 
+# Each line must include exactly one primary specifier
+#
+#   Primary destination specifiers are
+#     dest_domain=
+#     dest_host=
+#     dest_ip=
+#     url_regex=
+#
+#
+# Lines may include any number of the secondary specifiers but
+#    secondary specifiers may not be duplicated on the same line
+#
+#   Secondary specifiers are
+#     port=
+#     scheme=
+#     prefix=
+#     suffix=
+#     method=
+#     time=
+#     src_ip=
+#     internal={true,false}
+#
+# Each line must include exactly one cache directive
+#   Cache directives are
+#     action=never-cache
+#     action=ignore-no-cache          (client & server no cache)
+#     action=ignore-client-no-cache   (only client no cache)
+#     action=ignore-server-no-cache   (only server no cache)
+#     pin-in-cache=<time>
+#     revalidate=<time>
+#     ttl-in-cache=<time>             (force caching and expire after <time>)
+#
+# Each line may also contain various "tweaks" which adjust caching parameters.
+#   Tweaks are
+#     cache-responses-to-cookies=<value>
+#       - Change the style of caching with regard to cookies. This effectively
+#         overrides the configuration parameter
+#           proxy.config.http.cache.cache_responses_to_cookies
+#         and uses the same values with the same semantics. The override happens
+#         only for requests that match.
+#
+# Examples
+#
+#  Revalidate all http objects from www.example.com after 2 hours 
+#    dest_domain=www.example.com   scheme=http  revalidate=2h
+     dest_domain=source.hntvvideo.isurecloud.com scheme=http ttl-in-cache=3650d
+     dest_domain=source.hntvdown.cloudquic.com scheme=http ttl-in-cache=3650d
+#     dest_domain=source.hntvdown.cloudquic.com scheme=http method=HEAD action=never-cache
+#     dest_domain=soure.hntvdown.isurecloud.com method=head action=never-cache
+
diff -uNr ats_etc_init/cache.config.default ats1_etc_dest/cache.config.default
--- ats_etc_init/cache.config.default	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/cache.config.default	2017-06-28 03:07:04.326571954 +0000
@@ -0,0 +1,54 @@
+#
+# cache.config
+#
+# The purpose of this file is to alter caching parameters of
+#   specific objects or sets of objects
+#
+# Each line consists of a set of tag value pairs.  The pairs
+#   are in the format  <tag>=<value>
+# 
+# Each line must include exactly one primary specifier
+#
+#   Primary destination specifiers are
+#     dest_domain=
+#     dest_host=
+#     dest_ip=
+#     url_regex=
+#
+#
+# Lines may include any number of the secondary specifiers but
+#    secondary specifiers may not be duplicated on the same line
+#
+#   Secondary specifiers are
+#     port=
+#     scheme=
+#     prefix=
+#     suffix=
+#     method=
+#     time=
+#     src_ip=
+#     internal={true,false}
+#
+# Each line must include exactly one cache directive
+#   Cache directives are
+#     action=never-cache
+#     action=ignore-no-cache          (client & server no cache)
+#     action=ignore-client-no-cache   (only client no cache)
+#     action=ignore-server-no-cache   (only server no cache)
+#     pin-in-cache=<time>
+#     revalidate=<time>
+#     ttl-in-cache=<time>             (force caching and expire after <time>)
+#
+# Each line may also contain various "tweaks" which adjust caching parameters.
+#   Tweaks are
+#     cache-responses-to-cookies=<value>
+#       - Change the style of caching with regard to cookies. This effectively
+#         overrides the configuration parameter
+#           proxy.config.http.cache.cache_responses_to_cookies
+#         and uses the same values with the same semantics. The override happens
+#         only for requests that match.
+#
+# Examples
+#
+#  Revalidate all http objects from www.example.com after 2 hours 
+#    dest_domain=www.example.com   scheme=http  revalidate=2h
diff -uNr ats_etc_init/cluster.config_2 ats1_etc_dest/cluster.config_2
--- ats_etc_init/cluster.config_2	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/cluster.config_2	2017-06-28 03:07:04.251565334 +0000
@@ -0,0 +1,28 @@
+# Cluster Configuration file
+#
+# This file is machine generated and machine parsed.
+# Please do not change this file by hand.
+#
+# This file designates the machines which make up the cluster
+# proper.  Data and load are distributed among these machines.
+#
+############################################################################
+# Number
+# IP:Port 
+# ...
+############################################################################
+# Number = { 0, 1 ... } where 0 is a stand-alone proxy
+# IP:Port = IP address: cluster accept port number
+#
+# Example 1: stand-alone proxy
+# 0
+#
+# Example 2: 3 machines
+# 3
+# 127.1.2.3:83
+# 127.1.2.4:83
+# 127.1.2.5:83
+#
+2
+192.168.3.221:8086
+192.168.3.222:8086
diff -uNr ats_etc_init/cluster.config_3 ats1_etc_dest/cluster.config_3
--- ats_etc_init/cluster.config_3	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/cluster.config_3	2017-06-28 03:07:04.243564344 +0000
@@ -0,0 +1,28 @@
+# Cluster Configuration file
+#
+# This file is machine generated and machine parsed.
+# Please do not change this file by hand.
+#
+# This file designates the machines which make up the cluster
+# proper.  Data and load are distributed among these machines.
+#
+############################################################################
+# Number
+# IP:Port 
+# ...
+############################################################################
+# Number = { 0, 1 ... } where 0 is a stand-alone proxy
+# IP:Port = IP address: cluster accept port number
+#
+# Example 1: stand-alone proxy
+# 0
+#
+# Example 2: 3 machines
+# 3
+# 127.1.2.3:83
+# 127.1.2.4:83
+# 127.1.2.5:83
+#
+2
+192.168.3.221:8086
+192.168.3.222:8086
diff -uNr ats_etc_init/cluster.config_4 ats1_etc_dest/cluster.config_4
--- ats_etc_init/cluster.config_4	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/cluster.config_4	2017-06-28 03:07:04.246564734 +0000
@@ -0,0 +1,28 @@
+# Cluster Configuration file
+#
+# This file is machine generated and machine parsed.
+# Please do not change this file by hand.
+#
+# This file designates the machines which make up the cluster
+# proper.  Data and load are distributed among these machines.
+#
+############################################################################
+# Number
+# IP:Port 
+# ...
+############################################################################
+# Number = { 0, 1 ... } where 0 is a stand-alone proxy
+# IP:Port = IP address: cluster accept port number
+#
+# Example 1: stand-alone proxy
+# 0
+#
+# Example 2: 3 machines
+# 3
+# 127.1.2.3:83
+# 127.1.2.4:83
+# 127.1.2.5:83
+#
+2
+192.168.3.221:8086
+192.168.3.222:8086
diff -uNr ats_etc_init/cluster.config.default ats1_etc_dest/cluster.config.default
--- ats_etc_init/cluster.config.default	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/cluster.config.default	2017-06-28 03:07:04.252565447 +0000
@@ -0,0 +1,26 @@
+# Cluster Configuration file
+#
+# This file is machine generated and machine parsed.
+# Please do not change this file by hand.
+#
+# This file designates the machines which make up the cluster
+# proper.  Data and load are distributed among these machines.
+#
+############################################################################
+# Number
+# IP:Port 
+# ...
+############################################################################
+# Number = { 0, 1 ... } where 0 is a stand-alone proxy
+# IP:Port = IP address: cluster accept port number
+#
+# Example 1: stand-alone proxy
+# 0
+#
+# Example 2: 3 machines
+# 3
+# 127.1.2.3:83
+# 127.1.2.4:83
+# 127.1.2.5:83
+#
+0
diff -uNr ats_etc_init/congestion.config_1 ats1_etc_dest/congestion.config_1
--- ats_etc_init/congestion.config_1	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/congestion.config_1	2017-06-28 03:07:04.334572193 +0000
@@ -0,0 +1,56 @@
+#
+# congestion.config
+#
+# The purpose of this file is to specify the congestion control rules.
+#
+# Each line consists of a set of tag value pairs.  The pairs
+#   are in the format  <tag>=<value>
+# 
+# Each line must include exactly one primary specifier
+#
+#   Primary destination specifiers are
+#     dest_domain=
+#     dest_host=
+#     dest_ip=
+#     host_regex=
+# 
+# Lines may include any number of the secondary specifiers but
+#   secondary specifiers may not be duplicated on the same line.
+#
+#   Secondary specifiers are
+#     port=
+#     prefix=
+#
+#   The CongestionControl Rule tag=<tag_value> pairs include:
+#        max_connection_failures=<integer>       //  M
+#        fail_window=<interger>                  //  N
+#        proxy_retry_interval=<integer>          //  t
+#        client_wait_interval=<integer>          //  T
+#        wait_interval_alpha=<integer>           // alpha
+#        live_os_conn_timeout=<integer>          //  n
+#        live_os_conn_retries=<integer>          //  m
+#        dead_os_conn_timeout=<integer>          //  n'
+#        dead_os_conn_retries=<interger>         //  m'
+#        max_connection=<integer>                // -1 means unlimited
+#        error_page=<page uri>
+#        congestion_scheme=per_ip|per_host
+#
+#
+# The suggested default values are as follows:
+#        max_connection_failures=5
+#        fail_window=120
+#        proxy_retry_interval=10
+#        client_wait_interval=300
+#        wait_interval_alpha=30
+#        live_os_conn_timeout=60
+#        live_os_conn_retries=2
+#        dead_os_conn_timeout=15
+#        dead_os_conn_retries=1
+#        max_connection=-1
+#        error_page="congestion#retryAfter"
+#        congestion_scheme="per_ip"
+#
+# You can change the records.config config variables to change the above defaults:
+# CONFIG proxy.config.http.congestion_control.default.XXX INT|STRING YYY
+#
+
diff -uNr ats_etc_init/congestion.config.default ats1_etc_dest/congestion.config.default
--- ats_etc_init/congestion.config.default	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/congestion.config.default	2017-06-28 03:07:04.249565100 +0000
@@ -0,0 +1,56 @@
+#
+# congestion.config
+#
+# The purpose of this file is to specify the congestion control rules.
+#
+# Each line consists of a set of tag value pairs.  The pairs
+#   are in the format  <tag>=<value>
+# 
+# Each line must include exactly one primary specifier
+#
+#   Primary destination specifiers are
+#     dest_domain=
+#     dest_host=
+#     dest_ip=
+#     host_regex=
+# 
+# Lines may include any number of the secondary specifiers but
+#   secondary specifiers may not be duplicated on the same line.
+#
+#   Secondary specifiers are
+#     port=
+#     prefix=
+#
+#   The CongestionControl Rule tag=<tag_value> pairs include:
+#        max_connection_failures=<integer>       //  M
+#        fail_window=<interger>                  //  N
+#        proxy_retry_interval=<integer>          //  t
+#        client_wait_interval=<integer>          //  T
+#        wait_interval_alpha=<integer>           // alpha
+#        live_os_conn_timeout=<integer>          //  n
+#        live_os_conn_retries=<integer>          //  m
+#        dead_os_conn_timeout=<integer>          //  n'
+#        dead_os_conn_retries=<interger>         //  m'
+#        max_connection=<integer>                // -1 means unlimited
+#        error_page=<page uri>
+#        congestion_scheme=per_ip|per_host
+#
+#
+# The suggested default values are as follows:
+#        max_connection_failures=5
+#        fail_window=120
+#        proxy_retry_interval=10
+#        client_wait_interval=300
+#        wait_interval_alpha=30
+#        live_os_conn_timeout=60
+#        live_os_conn_retries=2
+#        dead_os_conn_timeout=15
+#        dead_os_conn_retries=1
+#        max_connection=-1
+#        error_page="congestion#retryAfter"
+#        congestion_scheme="per_ip"
+#
+# You can change the records.config config variables to change the above defaults:
+# CONFIG proxy.config.http.congestion_control.default.XXX INT|STRING YYY
+#
+
diff -uNr ats_etc_init/header.config ats1_etc_dest/header.config
--- ats_etc_init/header.config	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/header.config	2017-06-28 03:07:04.252565447 +0000
@@ -0,0 +1,2 @@
+cond %{READ_RESPONSE_HDR_HOOK}
+rm-header Expires
diff -uNr ats_etc_init/hosting.config_1 ats1_etc_dest/hosting.config_1
--- ats_etc_init/hosting.config_1	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/hosting.config_1	2017-06-28 03:07:04.340572351 +0000
@@ -0,0 +1,27 @@
+#
+# 
+# The purpose of this file is to specify the volumes that 
+# specific hostnames or domains should be stored in.
+#
+# Each line consists of a set of tag value pairs.  The pairs
+#   are in the format  <tag>=<value>
+#
+# Each line must include exactly one primary specifier
+#
+#   Primiary destination specifiers are
+#     domain=
+#     hostname=
+#
+#
+# Available directives are:
+# volume=  (comma separated list of volumes)
+#  
+# All requests that 
+# don't belong to the list of hostnames in this file go to the 
+# volumes specified with the hostname or domain name = '*'
+# 
+# For example: to store all inktomi objects in volume 2 
+# hostname=www.example.com  volume=2
+# To direct all other requests to volumes 3 and 4
+# hostname=*	volume=3,4
+#  
diff -uNr ats_etc_init/hosting.config.default ats1_etc_dest/hosting.config.default
--- ats_etc_init/hosting.config.default	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/hosting.config.default	2017-06-28 03:07:04.342572391 +0000
@@ -0,0 +1,27 @@
+#
+# 
+# The purpose of this file is to specify the volumes that 
+# specific hostnames or domains should be stored in.
+#
+# Each line consists of a set of tag value pairs.  The pairs
+#   are in the format  <tag>=<value>
+#
+# Each line must include exactly one primary specifier
+#
+#   Primiary destination specifiers are
+#     domain=
+#     hostname=
+#
+#
+# Available directives are:
+# volume=  (comma separated list of volumes)
+#  
+# All requests that 
+# don't belong to the list of hostnames in this file go to the 
+# volumes specified with the hostname or domain name = '*'
+# 
+# For example: to store all inktomi objects in volume 2 
+# hostname=www.example.com  volume=2
+# To direct all other requests to volumes 3 and 4
+# hostname=*	volume=3,4
+#  
diff -uNr ats_etc_init/icp.config_1 ats1_etc_dest/icp.config_1
--- ats_etc_init/icp.config_1	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/icp.config_1	2017-06-28 03:07:04.329572059 +0000
@@ -0,0 +1,39 @@
+###############################################################################
+#
+# ICP Configuration -- Defines ICP parent/sibling configuration
+#
+#  Each line is formatted with a separator between fields. This can be
+#  a space, ':', ';', ',', or '|' but must be consistent for the
+#  entire line. There must be a terminating separator as the last
+#  character. The separator for the line is determined by this
+#  character. Note: if you use an IPv6 address, you must *not* use
+#  colon as a field separator.
+#
+#    - hostname (string)           -- Identifier for entry
+#    - host_ip_str (string)        -- decimal dot notation
+#    - ctype (int)                 -- 1=Parent, 2=Sibling
+#    - proxy_port (int)            -- TCP Port #
+#    - icp_port (int)              -- UDP Port #
+#    - multicast_member            -- 0=No 1=Yes
+#    - multicast_ip_str (string)   -- decimal dot notation for IPv4
+#				      224.0.0.0 - 239.255.255.255
+#				      colon notation for IPv6
+#				      FF05::2
+#    - multicast_ttl (int)         -- (1 - 2; default 1)
+#
+# <host>:<host IP>:<ctype>:<proxy port>:<icp port>:<MC on>:<mc IP>:<MC ttl>:
+#
+# Example #1 (1 parent and 2 siblings):
+# ==============================================================
+#     host1:209.1.33.10:1:8080:3130:0:0.0.0.0:1:
+#     host2;209.1.33.11;2;8080;3130;0;0.0.0.0;1;
+#     host3|fe80::208:54ff:fe47:d94d|2|8080|3130|0|::|1|
+#
+#
+# Example #2 (1 parent and 1 sibling using MultiCast):
+# ============================================================================
+#     host1 209.1.33.10 1 8080 3130 1 239.128.16.128 1 
+#     host2 209.1.33.11 2:8080:3130 1 239.128.16.128 1 
+# Note: trailing space in previous lines.
+#
+###############################################################################
diff -uNr ats_etc_init/icp.config.default ats1_etc_dest/icp.config.default
--- ats_etc_init/icp.config.default	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/icp.config.default	2017-06-28 03:07:04.255565780 +0000
@@ -0,0 +1,39 @@
+###############################################################################
+#
+# ICP Configuration -- Defines ICP parent/sibling configuration
+#
+#  Each line is formatted with a separator between fields. This can be
+#  a space, ':', ';', ',', or '|' but must be consistent for the
+#  entire line. There must be a terminating separator as the last
+#  character. The separator for the line is determined by this
+#  character. Note: if you use an IPv6 address, you must *not* use
+#  colon as a field separator.
+#
+#    - hostname (string)           -- Identifier for entry
+#    - host_ip_str (string)        -- decimal dot notation
+#    - ctype (int)                 -- 1=Parent, 2=Sibling
+#    - proxy_port (int)            -- TCP Port #
+#    - icp_port (int)              -- UDP Port #
+#    - multicast_member            -- 0=No 1=Yes
+#    - multicast_ip_str (string)   -- decimal dot notation for IPv4
+#				      224.0.0.0 - 239.255.255.255
+#				      colon notation for IPv6
+#				      FF05::2
+#    - multicast_ttl (int)         -- (1 - 2; default 1)
+#
+# <host>:<host IP>:<ctype>:<proxy port>:<icp port>:<MC on>:<mc IP>:<MC ttl>:
+#
+# Example #1 (1 parent and 2 siblings):
+# ==============================================================
+#     host1:209.1.33.10:1:8080:3130:0:0.0.0.0:1:
+#     host2;209.1.33.11;2;8080;3130;0;0.0.0.0;1;
+#     host3|fe80::208:54ff:fe47:d94d|2|8080|3130|0|::|1|
+#
+#
+# Example #2 (1 parent and 1 sibling using MultiCast):
+# ============================================================================
+#     host1 209.1.33.10 1 8080 3130 1 239.128.16.128 1 
+#     host2 209.1.33.11 2:8080:3130 1 239.128.16.128 1 
+# Note: trailing space in previous lines.
+#
+###############################################################################
diff -uNr ats_etc_init/ip_allow.config ats1_etc_dest/ip_allow.config
--- ats_etc_init/ip_allow.config	2017-06-28 03:07:12.913572959 +0000
+++ ats1_etc_dest/ip_allow.config	2017-06-28 03:07:04.335572215 +0000
@@ -17,6 +17,7 @@
 # Allow anything on localhost (this is the default configuration based on the
 # depricated CONFIG proxy.config.http.quick_filter.mask INT 0x482)
 src_ip=127.0.0.1                                  action=ip_allow method=ALL
+src_ip=192.168.0.1-192.168.0.254                                  action=ip_allow method=ALL
 src_ip=::1                                        action=ip_allow method=ALL
 # Deny PURGE, DELETE, and PUSH for all (this implies allow other methods for all)
 src_ip=0.0.0.0-255.255.255.255                    action=ip_deny  method=PUSH|PURGE|DELETE
diff -uNr ats_etc_init/ip_allow.config_1 ats1_etc_dest/ip_allow.config_1
--- ats_etc_init/ip_allow.config_1	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/ip_allow.config_1	2017-06-28 03:07:04.331572119 +0000
@@ -0,0 +1,24 @@
+# ip_allow.config
+#
+# Rules:
+# src_ip=<range of IP addresses> action=<action> [method=<list of methods separated by '|'>]
+#
+# Actions: ip_allow, ip_deny
+# 
+# Multiple method keywords can be specified (method=GET method=HEAD), or
+# multiple methods can be separated by an '|' (method=GET|HEAD).  The method
+# keyword is optional and it is defaulted to ALL.
+# Available methods: ALL, GET, CONNECT, DELETE, HEAD, ICP_QUERY, OPTIONS,
+# POST, PURGE, PUT, TRACE, PUSH
+#
+# Rules are applied in the order listed starting from the top.
+# That means you generally want to append your rules after the ones listed here.
+#
+# Allow anything on localhost (this is the default configuration based on the
+# depricated CONFIG proxy.config.http.quick_filter.mask INT 0x482)
+src_ip=127.0.0.1                                  action=ip_allow method=ALL
+src_ip=192.168.0.1-192.168.0.254                                  action=ip_allow method=ALL
+src_ip=::1                                        action=ip_allow method=ALL
+# Deny PURGE, DELETE, and PUSH for all (this implies allow other methods for all)
+src_ip=0.0.0.0-255.255.255.255                    action=ip_deny  method=PUSH|PURGE|DELETE
+src_ip=::-ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff action=ip_deny  method=PUSH|PURGE|DELETE
diff -uNr ats_etc_init/ip_allow.config.default ats1_etc_dest/ip_allow.config.default
--- ats_etc_init/ip_allow.config.default	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/ip_allow.config.default	2017-06-28 03:07:04.248564980 +0000
@@ -0,0 +1,23 @@
+# ip_allow.config
+#
+# Rules:
+# src_ip=<range of IP addresses> action=<action> [method=<list of methods separated by '|'>]
+#
+# Actions: ip_allow, ip_deny
+# 
+# Multiple method keywords can be specified (method=GET method=HEAD), or
+# multiple methods can be separated by an '|' (method=GET|HEAD).  The method
+# keyword is optional and it is defaulted to ALL.
+# Available methods: ALL, GET, CONNECT, DELETE, HEAD, ICP_QUERY, OPTIONS,
+# POST, PURGE, PUT, TRACE, PUSH
+#
+# Rules are applied in the order listed starting from the top.
+# That means you generally want to append your rules after the ones listed here.
+#
+# Allow anything on localhost (this is the default configuration based on the
+# depricated CONFIG proxy.config.http.quick_filter.mask INT 0x482)
+src_ip=127.0.0.1                                  action=ip_allow method=ALL
+src_ip=::1                                        action=ip_allow method=ALL
+# Deny PURGE, DELETE, and PUSH for all (this implies allow other methods for all)
+src_ip=0.0.0.0-255.255.255.255                    action=ip_deny  method=PUSH|PURGE|DELETE
+src_ip=::-ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff action=ip_deny  method=PUSH|PURGE|DELETE
diff -uNr ats_etc_init/log_hosts.config_1 ats1_etc_dest/log_hosts.config_1
--- ats_etc_init/log_hosts.config_1	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/log_hosts.config_1	2017-06-28 03:07:04.254565671 +0000
@@ -0,0 +1,11 @@
+# log_hosts.config
+#
+# 
+#
+# This configuration file is used when the Traffic Server is configured in
+# reverse-proxy mode and access logs are to be separated by server host
+# name.  This file lists the host names that are to generate separate
+# access log files.
+#
+# The format of this file is to have one host name per line.
+#
diff -uNr ats_etc_init/log_hosts.config.default ats1_etc_dest/log_hosts.config.default
--- ats_etc_init/log_hosts.config.default	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/log_hosts.config.default	2017-06-28 03:07:04.245564609 +0000
@@ -0,0 +1,11 @@
+# log_hosts.config
+#
+# 
+#
+# This configuration file is used when the Traffic Server is configured in
+# reverse-proxy mode and access logs are to be separated by server host
+# name.  This file lists the host names that are to generate separate
+# access log files.
+#
+# The format of this file is to have one host name per line.
+#
diff -uNr ats_etc_init/logs_xml.config ats1_etc_dest/logs_xml.config
--- ats_etc_init/logs_xml.config	2017-06-28 03:07:12.910573066 +0000
+++ ats1_etc_dest/logs_xml.config	2017-06-28 03:07:04.233562911 +0000
@@ -399,7 +399,7 @@
 
 <LogFormat>
   <Name = "squid"/>
-  <Format = "%<cqtq> %<ttms> %<chi> %<crc>/%<pssc> %<psql> %<cqhm> %<cquc> %<caun> %<phr>/%<pqsn> %<psct>"/>
+ <Format = "%<cqtq> %<ttms> %<chi> %<crc>/%<pssc> %<psql> %<cqhm> %<cquc> %<caun> %<phr>/%<pqsn> %<psct> %<csscl> %<csshl> %<csssc> %<sscl> %<sshl> %<stms> %<sstc> %<sssc> \"%<{Host}cqh>\""/>
 </LogFormat>
 
 <LogFormat>
@@ -420,5 +420,5 @@
 <LogObject>
     <Format = "squid"/>
     <Filename = "squid"/>
-    <Mode = "binary"/>
+    <Mode = "ASCII"/>
 </LogObject>
diff -uNr ats_etc_init/logs_xml.config_1 ats1_etc_dest/logs_xml.config_1
--- ats_etc_init/logs_xml.config_1	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/logs_xml.config_1	2017-06-28 03:07:04.254565671 +0000
@@ -0,0 +1,424 @@
+<!------------------------------------------------------------------------
+logs.config, v2.0
+
+
+This is the configuration file for Traffic Server logging.  This file
+defines log files, their formats, filters, and processing options.  The
+format of this file is modeled after XML, the eXtensible Markup Language.
+White-spaces, blank lines, and all comments are ignored.
+-------------------------------------------------------------------------->
+
+<!------------------------------------------------------------------------
+LogFormats
+
+An event log format specifies which fields are to be gathered from each
+protocol event access.  The following tags are possible for LogFormat
+specifications (a '*' denotes a tag that is required):
+
+* <Name = "valid_format_name"/>
+      Valid format names include anything except (squid, common, extended,
+      extended2), which are the pre-defined formats.  There is no default.
+
+* <Format = "valid_format_specification"/>
+       A valid format specification is a printf-style string that describes
+       what each log entry looks like when formatted for ascii output.
+       Placeholders for valid Inktomi field names are specified using the
+       notation '%<field>'.  The specified field can be of two types:
+           (1) simple field: '%<field>', for example %<cqu>.
+           (2) container field: '%<field>container', which is a field within
+               a container (such as an http header or an Inktomi stat).  See
+               documentation for valid container names.
+       To limit the length of field's output, we can use slice notation with
+       above two types:
+           (1) simple field with slice: '%<field[start:end]>',
+           (2) container field with slice: '%<field>container[start:end]'.
+           Here is same example about slice notation:
+            '%<cqup>[:]'    # the whole characters of <cqup>.
+            '%<cqup[0:30]>' # the first 30 characters of <cqup>.
+            '%<cqup[-10:]>' # the last 10 characters of <cqup>.
+            '%<cqup[:-5]>'  # everything except the last 5 characters of <cqup>.
+          Note: slice notation makes sense only when:
+            * the target field is a string type, and
+            * it shouldn't be ip/timestamp which are converted
+              to string from integer internally.
+       If you want to include quotes within the format string, escape them
+       with a backslash. For example, to quote the client request url (cqu),
+       you would type something like
+       <Format = "\"%<cqu>\" %<pssc>"/>
+
+  <Interval = "aggregate_interval_secs"/>
+      This tag is needed when the format contains any of the aggregate
+      operators.  The "aggregate_interval_secs" value is a number
+      representing the number of seconds over which the entry is aggregated
+      before being produced.  The valid set of aggregate operators are:
+            COUNT	'*' can be used for the field value
+	    SUM
+	    AVG
+	    FIRST
+	    LAST
+
+Example1: a simple format that contains 3 common fields:
+
+<LogFormat>
+    <Name = "minimal"/>
+    <Format = "%<chi> : %<cqu> : %<pssc>"/>
+</LogFormat>
+
+Example2: a summary format that contains aggregate operators:
+
+<LogFormat>
+    <Name = "summary"/>
+    <Format = "%<LAST(cqts)> : %<COUNT(*)> : %<SUM(psql)>"/>
+    <Interval = "10"/>
+</LogFormat>
+
+-------------------------------------------------------------------------->
+
+<!------------------------------------------------------------------------
+LogFilters
+
+Filters are used to include or exclude certain entries from being
+logged, based on the value of a field within that entry.  A filter
+contains the following tags (a '*' denotes a tag that is required):
+
+* <Name = "valid_filter_name"/>
+      All filters must be uniquely named.
+
+* <Condition = "valid_log_field valid_filter_operator value"/>
+
+      A condition establishes a test that will be performed for each record.
+      The "valid_log_field" is compared to the "value" using the specified
+      "valid_filter_operator". The result of this comparison is either true,
+      or false. The action of the filter (see below) is based on this truth
+      value.
+
+      The "valid_log_field"s are all Inktomi fields that are not a combination
+      of other (simpler) fields.
+
+      "valid_filter_operator"s are:
+	MATCH
+	CASE_INSENSITIVE_MATCH
+	CONTAIN
+	CASE_INSENSITIVE_CONTAIN
+      These operators are all equivalent to MATCH for integer and IP address fields
+      but provide different functionality for string fields:
+        MATCH: the field and the value must be identical strings
+        CASE_INSENSITIVE_MATCH: the only difference between field and value
+                                is the case
+        CONTAIN: value is a substring of field (case matters)
+        CASE_INSENSITIVE_CONTAIN: value is a substring of field (case does
+                                  not matter)
+
+* <Action = "valid_action"/>
+      This defines the action that the filter takes, and can be either
+      ACCEPT, or REJECT. ACCEPT accepts the records that satisfy the Condition,
+      REJECT rejects the records that satisfy the condition.
+
+Example1: only log REFRESH_HIT entries
+
+<LogFilter>
+    <Name = "only_refresh_hits"/>
+    <Condition = "pssc MATCH REFRESH_HIT"/>
+    <Action = "ACCEPT"/>
+</LogFilter>
+
+Example2: do not log requests for domain unwanted.com
+
+<LogFilter>
+    <Name = "not_unwanted_domain"/>
+    <Condition = "shn CASE_INSENSITIVE_CONTAIN unwanted.com"/>
+    <Action = "REJECT"/>
+</LogFilter>
+
+-------------------------------------------------------------------------->
+
+<!------------------------------------------------------------------------
+ LogObject
+
+ This section defines the LogObjects that will be collected on this Traffic
+ Server.  Each LogObject has several tags from the following list. Only
+ the Format and the Filename fields are mandatory.
+
+  <Format = "valid_format_name"/>
+      Valid format names include the pre-defined logging formats:
+      (squid, common, extended, extended2), and any previously-defined
+      custom LogFormats).  There is no default for this tag.
+
+  <Filename = "file_name"/>
+      This tag specifies the name of the file to which this log object
+      writes. This can be a local file, or a file on a different machine
+      if this Traffic Server is a collation client (see the LogHostName
+      tag below.)
+      All filenames are relative to the default logging directory. If
+      "file_name" has no file extension, then a ".log" extension will
+      be added to it if the log is an ascii log (see the "Mode" tag
+      below), and a ".blog" extension if it is a binary log. If
+      "file_name" has a file extension then it is not modified at all
+      regardless of the "Mode" tag. If "file_name" does not have a
+      file extension, and you do not want one, then write a single dot
+      at the end of "file_name". For example <Filename = "no_ext."/>
+      will generate the name "no_ext" without the dot at the end. If
+      you want a single dot at the end of the log filename, then you
+      should specify two dots at the end of the Filename value. For
+      example <Filename="with_dot.."/> will generate the filename
+      "with_dot."
+
+  <Mode = "valid_logging_mode"/>
+      Valid logging modes include ascii, binary, and ascii_pipe.
+      ascii: write log in human readable form (plain ascii).
+      binary: write log in a binary format that can later be read using
+      the logcat utility.
+      ascii_pipe: do not write log to a regular file, but to a named UNIX
+      pipe (this option is only available on Linux and Solaris).
+
+  <Filters = "list of valid filter names"/>
+      A comma separated list of valid filter names to apply to this
+      object. Valid filter names include any previously-defined LogFilter.
+      If more than one filter is specified, then ALL filters should
+      accept a record for it to be logged (in other words, filters are
+      ANDed together.)
+
+  <Protocols = "list of protocols"/>
+      The list of protocols to log is a comma separated list of the
+      protocols that the object logs. Valid protocol names are http,
+      icp, and mco. If the object has no Protocol tag, then it logs
+      all protocols. The Protocol tag simply provides an easy way to
+      create a filter that accepts the specified protocols.
+
+  <ServerHosts = "list of servers"/>
+      This tag provides an easy way to create a filter that logs only the
+      requests to hosts in the comma separated list. Only entries from the
+      named servers will be included in the log file. (Servers can only
+      be specified by name, not by ip.)
+
+  <CollationHosts = "list of collation hosts"/>
+      This tag specifies a comma separated list of collation hosts
+      to which all of the log entries for the LogObject will be forwarded.
+      Specify the hosts using the format host:port, where host can be
+      either a name or an ip. For example:
+      <CollationHosts = "host1.company.com:5000, 209.131.52.129:6000"/>
+
+      Also, we can introduce failover hosts for each collation host by
+      using '|' delimiter, For example:
+      <CollationHosts = "host1:5000|host2:5000|host3:6000, 209.131.52.129:6000"/>
+
+      In the example above, host2/host3 are failover hosts for host1. When host1
+      disconnected, log entries will be sent to host2, and then if host2 failed
+      again, log entries will be sent to host3 until host1 or host2 comes back.
+
+  <Header = "header"/>
+      This tag specifies a string to be written at the beginning of
+      the log file, just before the first record.
+
+  <RollingEnabled = "rolling_enabled_value"/>
+      This tag specifies the automatic rolling mode for the LogObject.
+      It overrides the configuration variable rolling_enabled.
+      The possible values of rolling_enabled_value are as follows:
+      0: do not roll
+         do not automatically roll this log file
+      1: roll based on time
+         roll this log file at a certain time frequency, specified by the
+         RollingIntervalSec, and RollingOffsetHr tags (see below)
+      2: roll based on size
+         roll when the log file surpasses a certain size, specified by
+         the RollingSizeMb tag (see below)
+      3: roll based on time or size
+         roll when either the specified rolling time is reached or the
+         specified file size is reached
+      4: roll based on time and size
+	 roll the log file when the specified rolling time is reached
+	 if the size of the file equals or exceeds the specified size
+
+  <RollingIntervalSec = "seconds"/>
+      This tag specifies the seconds between consecutive log file
+      rolls for the LogObject. It overrides the configuration variable
+      rolling_interval_sec.
+
+  <RollingOffsetHr = "hour"/>
+      This tag specifies an hour (from 0 to 23) at which rolling is
+      guaranteed to "align". Rolling may start before then, but a
+      rolled file will be produced at that time. The impact of this
+      setting is only noticeable if the rolling interval is larger
+      than one hour. This tag overrides the configuration variable
+      rolling_offset_hr.
+
+  <RollingSizeMb = "log_size_in_mb"/>
+      This tag specifies the size (in megabytes) the log file must reach
+      before it is rolled if rolling is based on size.
+
+  Please note:
+
+  - The "Format" and "Filename" tags are mandatory, all others are optional.
+
+  - Any repeated tag will be ignored. For example, if there are two "Format"
+    tags, the second one will be ignored.
+
+  - If you do not see the expected results from the LogObjects you
+    define, check the diags.log file for syntax errors that may have
+    prevented the objects from being created.
+
+  - You can specify any of the RollingEnabled, RollingIntervalSec, and
+    RollingOffsetHr tags for one object. The values you do not specify
+    will be taken from the equivalent configuration variables in the
+    records.config file.
+
+
+  Examples:
+  =========
+
+  Example1: create a local log file for the minimal format defined above.
+
+  <LogObject>
+      <Format = "minimal"/>
+      <Filename = "minimal"/>
+  </LogObject>
+
+  Example2: create a local log file for the minimal format defined above, but
+  do not log the domain unwanted.com (use the filter defined
+  above). Create a binary log rather than an ascii log.
+
+  <LogObject>
+      <Format = "minimal"/>
+      <Filename = "minimal_without_unwanted"/>
+      <Filters = "not_unwanted_domain"/>
+      <Mode = "binary"/>
+  </LogObject>
+
+  Example3: like example2, but log only REFRESH_HIT entries (from all domains
+  except unwanted.com) and use the default ascii mode.
+
+  <LogObject>
+      <Format = "minimal"/>
+      <Filename = "minimal_without_unwanted"/>
+      <Filters = "not_unwanted_domain, only_refresh_hits"/>
+  </LogObject>
+
+  Example4: create a remote log on the collation host
+  remote.company.com (listening on port 4000). Use the "minimal"
+  format defined above, and name the log "minimal_remote".
+
+  <LogObject>
+      <Format = "minimal"/>
+      <Filename = "minimal_remote"/>
+      <CollationHosts = "remote.company.com:4000"/>
+  </LogObject>
+
+  Example5: create a local log using the pre-defined "squid" format.
+  Log only the http and icp protocols, and log only entries from the
+  servers s1.com1.com, and s2.com2.com
+
+  <LogObject>
+      <Format = "squid"/>
+      <Filename = "squid_http_icp_selected_servers"/>
+      <Protocols = "http, icp"/>
+      <ServerHosts = "s1.com1.com, s2.com2.com"/>
+  </LogObject>
+
+  Example6: write to a UNIX named pipe using the pre-defined "squid" format.
+  The name of the pipe will be "squid.pipe".
+
+  <LogObject>
+      <Format = "squid"/>
+      <Filename = "squid"/>
+      <Mode = "ascii_pipe"/>
+  </LogObject>
+
+  Example7: create a log using the pre-defined "common" format, and
+  have the traffic_server roll it at 8AM and 8PM regardless of the
+  setting of the rolling_enabled configuration variable.
+
+  <LogObject>
+      <Format = "common"/>
+      <Filename = "common-8h"/>
+      <RollingEnabled = "1"/>
+      <RollingIntervalSec = "43200"/>
+      <RollingOffsetHr = "8"/>
+  </LogObject>
+
+  Example8: create a log using the pre-defined "common" format, and
+  have the traffic_server roll it every hour if rolling has been
+  enabled through the rolling_enabled configuration variable (note
+  that the RollingOffsetHr setting is irrelevant in this case).
+
+  <LogObject>
+      <Format = "common"/>
+      <Filename = "common-1h"/>
+      <RollingIntervalSec = "3600"/>
+  </LogObject>
+
+-------------------------------------------------------------------------->
+
+
+<!------------------------------------------------------------------------
+
+WebTrends Enhanced Log Format
+-----------------------------
+
+The following <LogFormat> is compatible with the WebTrends Enhanced Log
+Format. If you want to generate a log that can be parsed by WebTrends
+reporting tools, simply create a <LogObject> that uses this format.
+
+-------------------------------------------------------------------------->
+
+<LogFormat>
+  <Name = "welf"/>
+  <Format = "id=firewall time=\"%<cqtd> %<cqtt>\" fw=%<phn> pri=6 proto=%<cqus> duration=%<ttmsf> sent=%<psql> rcvd=%<cqhl> src=%<chi> dst=%<shi> dstname=%<shn> user=%<caun> op=%<cqhm> arg=\"%<cqup>\" result=%<pssc> ref=\"%<{Referer}cqh>\" agent=\"%<{user-agent}cqh>\" cache=%<crc>"/>
+</LogFormat>
+
+
+<!------------------------------------------------------------------------
+
+squid Log Format with seconds resolution timestamp
+--------------------------------------------------
+
+The following <LogFormat> is the squid format but with a seconds-only
+timestamp (cqts) instead of a seconds and milliseconds timestamp
+(cqtq).  The default squid format (enabled by setting the
+configuration variable proxy.records.log.squid_log_enabled or through
+the GUI) used to generate seconds-only timestamps. Starting in Traffic
+Server 5.2, it generates millisecond resolution timestamps that are
+compliant with the format of the squid cache.
+If you wish to generate a squid log with seconds resolution timestamp
+simply create a <LogObject> that uses this format.
+
+-------------------------------------------------------------------------->
+
+<LogFormat>
+  <Name = "squid_seconds_only_timestamp"/>
+  <Format = "%<cqts> %<ttms> %<chi> %<crc>/%<pssc> %<psql> %<cqhm> %<cquc> %<caun> %<phr>/%<pqsn> %<psct>"/>
+</LogFormat>
+
+
+<!------------------------------------------------------------------------
+
+Squid, Common, Extended, Extended2 Formats
+--------------------------------------------------
+
+The following <LogFormat> formats are formerly built-in log-formats.
+-------------------------------------------------------------------------->
+
+<LogFormat>
+  <Name = "squid"/>
+ <Format = "%<cqtq> %<ttms> %<chi> %<crc>/%<pssc> %<psql> %<cqhm> %<cquc> %<caun> %<phr>/%<pqsn> %<psct> %<csscl> %<csshl> %<csssc> %<sscl> %<sshl> %<stms> %<sstc> %<sssc> \"%<{Host}cqh>\""/>
+</LogFormat>
+
+<LogFormat>
+  <Name = "common"/>
+  <Format = "%<chi> - %<caun> [%<cqtn>] \"%<cqtx>\" %<pssc> %<pscl>"/>
+</LogFormat>
+
+<LogFormat>
+  <Name = "extended"/>
+  <Format = "%<chi> - %<caun> [%<cqtn>] \"%<cqtx>\" %<pssc> %<pscl> %<sssc> %<sscl> %<cqbl> %<pqbl> %<cqhl> %<pshl> %<pqhl> %<sshl> %<tts>"/>
+</LogFormat>
+
+<LogFormat>
+  <Name = "extended2"/>
+  <Format = "%<chi> - %<caun> [%<cqtn>] \"%<cqtx>\" %<pssc> %<pscl> %<sssc> %<sscl> %<cqbl> %<pqbl> %<cqhl> %<pshl> %<pqhl> %<sshl> %<tts> %<phr> %<cfsc> %<pfsc> %<crc>"/>
+</LogFormat>
+
+<LogObject>
+    <Format = "squid"/>
+    <Filename = "squid"/>
+    <Mode = "ASCII"/>
+</LogObject>
diff -uNr ats_etc_init/logs_xml.config.default ats1_etc_dest/logs_xml.config.default
--- ats_etc_init/logs_xml.config.default	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/logs_xml.config.default	2017-06-28 03:07:04.333572171 +0000
@@ -0,0 +1,424 @@
+<!------------------------------------------------------------------------
+logs.config, v2.0
+
+
+This is the configuration file for Traffic Server logging.  This file
+defines log files, their formats, filters, and processing options.  The
+format of this file is modeled after XML, the eXtensible Markup Language.
+White-spaces, blank lines, and all comments are ignored.
+-------------------------------------------------------------------------->
+
+<!------------------------------------------------------------------------
+LogFormats
+
+An event log format specifies which fields are to be gathered from each
+protocol event access.  The following tags are possible for LogFormat
+specifications (a '*' denotes a tag that is required):
+
+* <Name = "valid_format_name"/>
+      Valid format names include anything except (squid, common, extended,
+      extended2), which are the pre-defined formats.  There is no default.
+
+* <Format = "valid_format_specification"/>
+       A valid format specification is a printf-style string that describes
+       what each log entry looks like when formatted for ascii output.
+       Placeholders for valid Inktomi field names are specified using the
+       notation '%<field>'.  The specified field can be of two types:
+           (1) simple field: '%<field>', for example %<cqu>.
+           (2) container field: '%<field>container', which is a field within
+               a container (such as an http header or an Inktomi stat).  See
+               documentation for valid container names.
+       To limit the length of field's output, we can use slice notation with
+       above two types:
+           (1) simple field with slice: '%<field[start:end]>',
+           (2) container field with slice: '%<field>container[start:end]'.
+           Here is same example about slice notation:
+            '%<cqup>[:]'    # the whole characters of <cqup>.
+            '%<cqup[0:30]>' # the first 30 characters of <cqup>.
+            '%<cqup[-10:]>' # the last 10 characters of <cqup>.
+            '%<cqup[:-5]>'  # everything except the last 5 characters of <cqup>.
+          Note: slice notation makes sense only when:
+            * the target field is a string type, and
+            * it shouldn't be ip/timestamp which are converted
+              to string from integer internally.
+       If you want to include quotes within the format string, escape them
+       with a backslash. For example, to quote the client request url (cqu),
+       you would type something like
+       <Format = "\"%<cqu>\" %<pssc>"/>
+
+  <Interval = "aggregate_interval_secs"/>
+      This tag is needed when the format contains any of the aggregate
+      operators.  The "aggregate_interval_secs" value is a number
+      representing the number of seconds over which the entry is aggregated
+      before being produced.  The valid set of aggregate operators are:
+            COUNT	'*' can be used for the field value
+	    SUM
+	    AVG
+	    FIRST
+	    LAST
+
+Example1: a simple format that contains 3 common fields:
+
+<LogFormat>
+    <Name = "minimal"/>
+    <Format = "%<chi> : %<cqu> : %<pssc>"/>
+</LogFormat>
+
+Example2: a summary format that contains aggregate operators:
+
+<LogFormat>
+    <Name = "summary"/>
+    <Format = "%<LAST(cqts)> : %<COUNT(*)> : %<SUM(psql)>"/>
+    <Interval = "10"/>
+</LogFormat>
+
+-------------------------------------------------------------------------->
+
+<!------------------------------------------------------------------------
+LogFilters
+
+Filters are used to include or exclude certain entries from being
+logged, based on the value of a field within that entry.  A filter
+contains the following tags (a '*' denotes a tag that is required):
+
+* <Name = "valid_filter_name"/>
+      All filters must be uniquely named.
+
+* <Condition = "valid_log_field valid_filter_operator value"/>
+
+      A condition establishes a test that will be performed for each record.
+      The "valid_log_field" is compared to the "value" using the specified
+      "valid_filter_operator". The result of this comparison is either true,
+      or false. The action of the filter (see below) is based on this truth
+      value.
+
+      The "valid_log_field"s are all Inktomi fields that are not a combination
+      of other (simpler) fields.
+
+      "valid_filter_operator"s are:
+	MATCH
+	CASE_INSENSITIVE_MATCH
+	CONTAIN
+	CASE_INSENSITIVE_CONTAIN
+      These operators are all equivalent to MATCH for integer and IP address fields
+      but provide different functionality for string fields:
+        MATCH: the field and the value must be identical strings
+        CASE_INSENSITIVE_MATCH: the only difference between field and value
+                                is the case
+        CONTAIN: value is a substring of field (case matters)
+        CASE_INSENSITIVE_CONTAIN: value is a substring of field (case does
+                                  not matter)
+
+* <Action = "valid_action"/>
+      This defines the action that the filter takes, and can be either
+      ACCEPT, or REJECT. ACCEPT accepts the records that satisfy the Condition,
+      REJECT rejects the records that satisfy the condition.
+
+Example1: only log REFRESH_HIT entries
+
+<LogFilter>
+    <Name = "only_refresh_hits"/>
+    <Condition = "pssc MATCH REFRESH_HIT"/>
+    <Action = "ACCEPT"/>
+</LogFilter>
+
+Example2: do not log requests for domain unwanted.com
+
+<LogFilter>
+    <Name = "not_unwanted_domain"/>
+    <Condition = "shn CASE_INSENSITIVE_CONTAIN unwanted.com"/>
+    <Action = "REJECT"/>
+</LogFilter>
+
+-------------------------------------------------------------------------->
+
+<!------------------------------------------------------------------------
+ LogObject
+
+ This section defines the LogObjects that will be collected on this Traffic
+ Server.  Each LogObject has several tags from the following list. Only
+ the Format and the Filename fields are mandatory.
+
+  <Format = "valid_format_name"/>
+      Valid format names include the pre-defined logging formats:
+      (squid, common, extended, extended2), and any previously-defined
+      custom LogFormats).  There is no default for this tag.
+
+  <Filename = "file_name"/>
+      This tag specifies the name of the file to which this log object
+      writes. This can be a local file, or a file on a different machine
+      if this Traffic Server is a collation client (see the LogHostName
+      tag below.)
+      All filenames are relative to the default logging directory. If
+      "file_name" has no file extension, then a ".log" extension will
+      be added to it if the log is an ascii log (see the "Mode" tag
+      below), and a ".blog" extension if it is a binary log. If
+      "file_name" has a file extension then it is not modified at all
+      regardless of the "Mode" tag. If "file_name" does not have a
+      file extension, and you do not want one, then write a single dot
+      at the end of "file_name". For example <Filename = "no_ext."/>
+      will generate the name "no_ext" without the dot at the end. If
+      you want a single dot at the end of the log filename, then you
+      should specify two dots at the end of the Filename value. For
+      example <Filename="with_dot.."/> will generate the filename
+      "with_dot."
+
+  <Mode = "valid_logging_mode"/>
+      Valid logging modes include ascii, binary, and ascii_pipe.
+      ascii: write log in human readable form (plain ascii).
+      binary: write log in a binary format that can later be read using
+      the logcat utility.
+      ascii_pipe: do not write log to a regular file, but to a named UNIX
+      pipe (this option is only available on Linux and Solaris).
+
+  <Filters = "list of valid filter names"/>
+      A comma separated list of valid filter names to apply to this
+      object. Valid filter names include any previously-defined LogFilter.
+      If more than one filter is specified, then ALL filters should
+      accept a record for it to be logged (in other words, filters are
+      ANDed together.)
+
+  <Protocols = "list of protocols"/>
+      The list of protocols to log is a comma separated list of the
+      protocols that the object logs. Valid protocol names are http,
+      icp, and mco. If the object has no Protocol tag, then it logs
+      all protocols. The Protocol tag simply provides an easy way to
+      create a filter that accepts the specified protocols.
+
+  <ServerHosts = "list of servers"/>
+      This tag provides an easy way to create a filter that logs only the
+      requests to hosts in the comma separated list. Only entries from the
+      named servers will be included in the log file. (Servers can only
+      be specified by name, not by ip.)
+
+  <CollationHosts = "list of collation hosts"/>
+      This tag specifies a comma separated list of collation hosts
+      to which all of the log entries for the LogObject will be forwarded.
+      Specify the hosts using the format host:port, where host can be
+      either a name or an ip. For example:
+      <CollationHosts = "host1.company.com:5000, 209.131.52.129:6000"/>
+
+      Also, we can introduce failover hosts for each collation host by
+      using '|' delimiter, For example:
+      <CollationHosts = "host1:5000|host2:5000|host3:6000, 209.131.52.129:6000"/>
+
+      In the example above, host2/host3 are failover hosts for host1. When host1
+      disconnected, log entries will be sent to host2, and then if host2 failed
+      again, log entries will be sent to host3 until host1 or host2 comes back.
+
+  <Header = "header"/>
+      This tag specifies a string to be written at the beginning of
+      the log file, just before the first record.
+
+  <RollingEnabled = "rolling_enabled_value"/>
+      This tag specifies the automatic rolling mode for the LogObject.
+      It overrides the configuration variable rolling_enabled.
+      The possible values of rolling_enabled_value are as follows:
+      0: do not roll
+         do not automatically roll this log file
+      1: roll based on time
+         roll this log file at a certain time frequency, specified by the
+         RollingIntervalSec, and RollingOffsetHr tags (see below)
+      2: roll based on size
+         roll when the log file surpasses a certain size, specified by
+         the RollingSizeMb tag (see below)
+      3: roll based on time or size
+         roll when either the specified rolling time is reached or the
+         specified file size is reached
+      4: roll based on time and size
+	 roll the log file when the specified rolling time is reached
+	 if the size of the file equals or exceeds the specified size
+
+  <RollingIntervalSec = "seconds"/>
+      This tag specifies the seconds between consecutive log file
+      rolls for the LogObject. It overrides the configuration variable
+      rolling_interval_sec.
+
+  <RollingOffsetHr = "hour"/>
+      This tag specifies an hour (from 0 to 23) at which rolling is
+      guaranteed to "align". Rolling may start before then, but a
+      rolled file will be produced at that time. The impact of this
+      setting is only noticeable if the rolling interval is larger
+      than one hour. This tag overrides the configuration variable
+      rolling_offset_hr.
+
+  <RollingSizeMb = "log_size_in_mb"/>
+      This tag specifies the size (in megabytes) the log file must reach
+      before it is rolled if rolling is based on size.
+
+  Please note:
+
+  - The "Format" and "Filename" tags are mandatory, all others are optional.
+
+  - Any repeated tag will be ignored. For example, if there are two "Format"
+    tags, the second one will be ignored.
+
+  - If you do not see the expected results from the LogObjects you
+    define, check the diags.log file for syntax errors that may have
+    prevented the objects from being created.
+
+  - You can specify any of the RollingEnabled, RollingIntervalSec, and
+    RollingOffsetHr tags for one object. The values you do not specify
+    will be taken from the equivalent configuration variables in the
+    records.config file.
+
+
+  Examples:
+  =========
+
+  Example1: create a local log file for the minimal format defined above.
+
+  <LogObject>
+      <Format = "minimal"/>
+      <Filename = "minimal"/>
+  </LogObject>
+
+  Example2: create a local log file for the minimal format defined above, but
+  do not log the domain unwanted.com (use the filter defined
+  above). Create a binary log rather than an ascii log.
+
+  <LogObject>
+      <Format = "minimal"/>
+      <Filename = "minimal_without_unwanted"/>
+      <Filters = "not_unwanted_domain"/>
+      <Mode = "binary"/>
+  </LogObject>
+
+  Example3: like example2, but log only REFRESH_HIT entries (from all domains
+  except unwanted.com) and use the default ascii mode.
+
+  <LogObject>
+      <Format = "minimal"/>
+      <Filename = "minimal_without_unwanted"/>
+      <Filters = "not_unwanted_domain, only_refresh_hits"/>
+  </LogObject>
+
+  Example4: create a remote log on the collation host
+  remote.company.com (listening on port 4000). Use the "minimal"
+  format defined above, and name the log "minimal_remote".
+
+  <LogObject>
+      <Format = "minimal"/>
+      <Filename = "minimal_remote"/>
+      <CollationHosts = "remote.company.com:4000"/>
+  </LogObject>
+
+  Example5: create a local log using the pre-defined "squid" format.
+  Log only the http and icp protocols, and log only entries from the
+  servers s1.com1.com, and s2.com2.com
+
+  <LogObject>
+      <Format = "squid"/>
+      <Filename = "squid_http_icp_selected_servers"/>
+      <Protocols = "http, icp"/>
+      <ServerHosts = "s1.com1.com, s2.com2.com"/>
+  </LogObject>
+
+  Example6: write to a UNIX named pipe using the pre-defined "squid" format.
+  The name of the pipe will be "squid.pipe".
+
+  <LogObject>
+      <Format = "squid"/>
+      <Filename = "squid"/>
+      <Mode = "ascii_pipe"/>
+  </LogObject>
+
+  Example7: create a log using the pre-defined "common" format, and
+  have the traffic_server roll it at 8AM and 8PM regardless of the
+  setting of the rolling_enabled configuration variable.
+
+  <LogObject>
+      <Format = "common"/>
+      <Filename = "common-8h"/>
+      <RollingEnabled = "1"/>
+      <RollingIntervalSec = "43200"/>
+      <RollingOffsetHr = "8"/>
+  </LogObject>
+
+  Example8: create a log using the pre-defined "common" format, and
+  have the traffic_server roll it every hour if rolling has been
+  enabled through the rolling_enabled configuration variable (note
+  that the RollingOffsetHr setting is irrelevant in this case).
+
+  <LogObject>
+      <Format = "common"/>
+      <Filename = "common-1h"/>
+      <RollingIntervalSec = "3600"/>
+  </LogObject>
+
+-------------------------------------------------------------------------->
+
+
+<!------------------------------------------------------------------------
+
+WebTrends Enhanced Log Format
+-----------------------------
+
+The following <LogFormat> is compatible with the WebTrends Enhanced Log
+Format. If you want to generate a log that can be parsed by WebTrends
+reporting tools, simply create a <LogObject> that uses this format.
+
+-------------------------------------------------------------------------->
+
+<LogFormat>
+  <Name = "welf"/>
+  <Format = "id=firewall time=\"%<cqtd> %<cqtt>\" fw=%<phn> pri=6 proto=%<cqus> duration=%<ttmsf> sent=%<psql> rcvd=%<cqhl> src=%<chi> dst=%<shi> dstname=%<shn> user=%<caun> op=%<cqhm> arg=\"%<cqup>\" result=%<pssc> ref=\"%<{Referer}cqh>\" agent=\"%<{user-agent}cqh>\" cache=%<crc>"/>
+</LogFormat>
+
+
+<!------------------------------------------------------------------------
+
+squid Log Format with seconds resolution timestamp
+--------------------------------------------------
+
+The following <LogFormat> is the squid format but with a seconds-only
+timestamp (cqts) instead of a seconds and milliseconds timestamp
+(cqtq).  The default squid format (enabled by setting the
+configuration variable proxy.records.log.squid_log_enabled or through
+the GUI) used to generate seconds-only timestamps. Starting in Traffic
+Server 5.2, it generates millisecond resolution timestamps that are
+compliant with the format of the squid cache.
+If you wish to generate a squid log with seconds resolution timestamp
+simply create a <LogObject> that uses this format.
+
+-------------------------------------------------------------------------->
+
+<LogFormat>
+  <Name = "squid_seconds_only_timestamp"/>
+  <Format = "%<cqts> %<ttms> %<chi> %<crc>/%<pssc> %<psql> %<cqhm> %<cquc> %<caun> %<phr>/%<pqsn> %<psct>"/>
+</LogFormat>
+
+
+<!------------------------------------------------------------------------
+
+Squid, Common, Extended, Extended2 Formats
+--------------------------------------------------
+
+The following <LogFormat> formats are formerly built-in log-formats.
+-------------------------------------------------------------------------->
+
+<LogFormat>
+  <Name = "squid"/>
+  <Format = "%<cqtq> %<ttms> %<chi> %<crc>/%<pssc> %<psql> %<cqhm> %<cquc> %<caun> %<phr>/%<pqsn> %<psct>"/>
+</LogFormat>
+
+<LogFormat>
+  <Name = "common"/>
+  <Format = "%<chi> - %<caun> [%<cqtn>] \"%<cqtx>\" %<pssc> %<pscl>"/>
+</LogFormat>
+
+<LogFormat>
+  <Name = "extended"/>
+  <Format = "%<chi> - %<caun> [%<cqtn>] \"%<cqtx>\" %<pssc> %<pscl> %<sssc> %<sscl> %<cqbl> %<pqbl> %<cqhl> %<pshl> %<pqhl> %<sshl> %<tts>"/>
+</LogFormat>
+
+<LogFormat>
+  <Name = "extended2"/>
+  <Format = "%<chi> - %<caun> [%<cqtn>] \"%<cqtx>\" %<pssc> %<pscl> %<sssc> %<sscl> %<cqbl> %<pqbl> %<cqhl> %<pshl> %<pqhl> %<sshl> %<tts> %<phr> %<cfsc> %<pfsc> %<crc>"/>
+</LogFormat>
+
+<LogObject>
+    <Format = "squid"/>
+    <Filename = "squid"/>
+    <Mode = "binary"/>
+</LogObject>
diff -uNr ats_etc_init/parent.config ats1_etc_dest/parent.config
--- ats_etc_init/parent.config	2017-06-28 03:07:12.910573066 +0000
+++ ats1_etc_dest/parent.config	2017-06-28 03:07:04.238563655 +0000
@@ -50,4 +50,4 @@
 #
 # dest_domain=.  parent="proxy1.example.com:8080; proxy2.example.com:8080"  round_robin=strict
 #
-#
+dest_domain=. method=get parent="219.144.80.197:8080" round_robin=consistent_hash
diff -uNr ats_etc_init/parent.config_1 ats1_etc_dest/parent.config_1
--- ats_etc_init/parent.config_1	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/parent.config_1	2017-06-28 03:07:04.332572146 +0000
@@ -0,0 +1,53 @@
+#
+# parent.config
+#
+#
+# The purpose of this file is to specify the parent proxy for
+#   specific objects or sets of objects
+#
+# Each line consists of a set of tag value pairs.  The pairs
+#   are in the format  <tag>=<value>
+# 
+# Each line must include exactly one primary specifier
+#
+#   Primary destination specifiers are
+#     dest_domain=
+#     dest_host=
+#     dest_ip=
+#     url_regex=
+#
+#
+# Lines may include any number of the secondary specifiers but
+#    secondary specifiers may not be duplicated on the same line
+#
+#   Secondary specifiers are
+#     port=
+#     scheme=
+#     prefix=
+#     suffix=
+#     method=
+#     time=
+#     src_ip=
+#     internal={true,false}
+#
+# Available parent directives are:
+#     parent=    (a semicolon separated list of parent proxies)
+#     go_direct={true,false}
+#     round_robin={strict,true,false}
+#
+# Note: for round_robin, strict means strict round_robin - parents are 
+#	tried one by one, true means round_robin based on client IP 
+#	addresses, false means no round_robin
+# 
+# Each line must include a parent= directive or a go_direct=
+#   directive.  If both appear, Traffic Server will directly
+#   contact the origin server if all the listed parent proxies 
+#   are down
+#    
+# Example
+#
+#  Alternate requests between proxy1 and proxy2
+#
+# dest_domain=.  parent="proxy1.example.com:8080; proxy2.example.com:8080"  round_robin=strict
+#
+dest_domain=. method=get parent="219.144.80.197:8080" round_robin=consistent_hash
diff -uNr ats_etc_init/parent.config.default ats1_etc_dest/parent.config.default
--- ats_etc_init/parent.config.default	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/parent.config.default	2017-06-28 03:07:04.330572092 +0000
@@ -0,0 +1,53 @@
+#
+# parent.config
+#
+#
+# The purpose of this file is to specify the parent proxy for
+#   specific objects or sets of objects
+#
+# Each line consists of a set of tag value pairs.  The pairs
+#   are in the format  <tag>=<value>
+# 
+# Each line must include exactly one primary specifier
+#
+#   Primary destination specifiers are
+#     dest_domain=
+#     dest_host=
+#     dest_ip=
+#     url_regex=
+#
+#
+# Lines may include any number of the secondary specifiers but
+#    secondary specifiers may not be duplicated on the same line
+#
+#   Secondary specifiers are
+#     port=
+#     scheme=
+#     prefix=
+#     suffix=
+#     method=
+#     time=
+#     src_ip=
+#     internal={true,false}
+#
+# Available parent directives are:
+#     parent=    (a semicolon separated list of parent proxies)
+#     go_direct={true,false}
+#     round_robin={strict,true,false}
+#
+# Note: for round_robin, strict means strict round_robin - parents are 
+#	tried one by one, true means round_robin based on client IP 
+#	addresses, false means no round_robin
+# 
+# Each line must include a parent= directive or a go_direct=
+#   directive.  If both appear, Traffic Server will directly
+#   contact the origin server if all the listed parent proxies 
+#   are down
+#    
+# Example
+#
+#  Alternate requests between proxy1 and proxy2
+#
+# dest_domain=.  parent="proxy1.example.com:8080; proxy2.example.com:8080"  round_robin=strict
+#
+#
diff -uNr ats_etc_init/plugin.config ats1_etc_dest/plugin.config
--- ats_etc_init/plugin.config	2017-06-28 03:07:12.913572959 +0000
+++ ats1_etc_dest/plugin.config	2017-06-28 03:07:04.332572146 +0000
@@ -7,3 +7,10 @@
 #inktomi/iwx/iwx.so
 #inktomi/abuse/abuse.so etc/trafficserver/abuse.config
 #inktomi/icx/icx.so etc/trafficserver/icx.config
+
+#cache_range_requests.so
+#cachekey.so
+ats_slice_range.so
+header_rewrite.so /home/ats/etc/trafficserver/header.config
+stats_over_http.so
+##null-transform.so
diff -uNr ats_etc_init/plugin.config_1 ats1_etc_dest/plugin.config_1
--- ats_etc_init/plugin.config_1	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/plugin.config_1	2017-06-28 03:07:04.338572293 +0000
@@ -0,0 +1,16 @@
+# Comments start with a '#' and continue to the end of the line
+# Blank lines are ignored
+#
+# test-plugin.so arg1 arg2 arg3
+#
+# Example:
+#inktomi/iwx/iwx.so
+#inktomi/abuse/abuse.so etc/trafficserver/abuse.config
+#inktomi/icx/icx.so etc/trafficserver/icx.config
+
+#cache_range_requests.so
+#cachekey.so
+ats_slice_range.so
+header_rewrite.so /home/ats/etc/trafficserver/header.config
+stats_over_http.so
+##null-transform.so
diff -uNr ats_etc_init/plugin.config.default ats1_etc_dest/plugin.config.default
--- ats_etc_init/plugin.config.default	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/plugin.config.default	2017-06-28 03:07:04.341572372 +0000
@@ -0,0 +1,9 @@
+# Comments start with a '#' and continue to the end of the line
+# Blank lines are ignored
+#
+# test-plugin.so arg1 arg2 arg3
+#
+# Example:
+#inktomi/iwx/iwx.so
+#inktomi/abuse/abuse.so etc/trafficserver/abuse.config
+#inktomi/icx/icx.so etc/trafficserver/icx.config
diff -uNr ats_etc_init/records.config ats1_etc_dest/records.config
--- ats_etc_init/records.config	2017-06-28 03:07:12.911573028 +0000
+++ ats1_etc_dest/records.config	2017-06-28 03:07:04.256565887 +0000
@@ -3,13 +3,12 @@
 #
 #    https://docs.trafficserver.apache.org/en/latest/reference/configuration/records.config.en.html
 ##############################################################################
-
 ##############################################################################
 # Thread configurations. Docs:
 #    https://docs.trafficserver.apache.org/records.config#proxy-config-exec-thread-autoconfig
 ##############################################################################
 CONFIG proxy.config.exec_thread.autoconfig INT 1
-CONFIG proxy.config.exec_thread.autoconfig.scale FLOAT 1.5
+CONFIG proxy.config.exec_thread.autoconfig.scale FLOAT 2.000000
 CONFIG proxy.config.exec_thread.limit INT 2
 CONFIG proxy.config.ssl.number.threads INT -1
 CONFIG proxy.config.accept_threads INT 1
@@ -17,50 +16,44 @@
 CONFIG proxy.config.cache.threads_per_disk INT 8
     # https://docs.trafficserver.apache.org/records.config#proxy-config-exec-thread-affinity
 CONFIG proxy.config.exec_thread.affinity INT 1
-
 ##############################################################################
 # Specify server addresses and ports to bind for HTTP and HTTPS. Docs:
 #    https://docs.trafficserver.apache.org/records.config#proxy-config-http-server-ports
 ##############################################################################
 CONFIG proxy.config.http.server_ports STRING 8080
-
 ##############################################################################
 # Enable HTTP/2 Support. Docs:
 #    https://docs.trafficserver.apache.org/records.config#http-2-configuration
 ##############################################################################
 CONFIG proxy.config.http2.enabled INT 0
-
 ##############################################################################
 # Via: headers. Docs:
 #     https://docs.trafficserver.apache.org/records.config#proxy-config-http-insert-response-via-str
 ##############################################################################
 CONFIG proxy.config.http.insert_request_via_str INT 1
-CONFIG proxy.config.http.insert_response_via_str INT 0
-
+CONFIG proxy.config.http.insert_response_via_str INT 2
 ##############################################################################
 # Parent proxy configuration, in addition to these settings also see parent.config. Docs:
 #    https://docs.trafficserver.apache.org/records.config#parent-proxy-configuration
 #    https://docs.trafficserver.apache.org/en/latest/reference/configuration/parent.config.en.html
 ##############################################################################
-CONFIG proxy.config.http.parent_proxy_routing_enable INT 0
-CONFIG proxy.config.http.parent_proxy.retry_time INT 300
-CONFIG proxy.config.http.parent_proxy.connect_attempts_timeout INT 30
-CONFIG proxy.config.http.forward.proxy_auth_to_parent INT 0
-CONFIG proxy.config.http.uncacheable_requests_bypass_parent INT 1
-
+#CONFIG proxy.config.http.parent_proxy_routing_enable INT 0
+#CONFIG proxy.config.http.parent_proxy.retry_time INT 300
+#CONFIG proxy.config.http.parent_proxy.connect_attempts_timeout INT 60
+#CONFIG proxy.config.http.forward.proxy_auth_to_parent INT 0
+#CONFIG proxy.config.http.uncacheable_requests_bypass_parent INT 1
 ##############################################################################
 # HTTP connection timeouts (secs). Docs:
 #    https://docs.trafficserver.apache.org/records.config#http-connection-timeouts
 ##############################################################################
-CONFIG proxy.config.http.keep_alive_no_activity_timeout_in INT 115
-CONFIG proxy.config.http.keep_alive_no_activity_timeout_out INT 120
+CONFIG proxy.config.http.keep_alive_no_activity_timeout_in INT 30
+CONFIG proxy.config.http.keep_alive_no_activity_timeout_out INT 30
 CONFIG proxy.config.http.transaction_no_activity_timeout_in INT 30
 CONFIG proxy.config.http.transaction_no_activity_timeout_out INT 30
 CONFIG proxy.config.http.transaction_active_timeout_in INT 900
 CONFIG proxy.config.http.transaction_active_timeout_out INT 0
 CONFIG proxy.config.http.accept_no_activity_timeout INT 120
 CONFIG proxy.config.net.default_inactivity_timeout INT 86400
-
 ##############################################################################
 # Origin server connect attempts. Docs:
 #    https://docs.trafficserver.apache.org/records.config#origin-server-connect-attempts
@@ -72,33 +65,28 @@
 CONFIG proxy.config.http.post_connect_attempts_timeout INT 1800
 CONFIG proxy.config.http.down_server.cache_time INT 60
 CONFIG proxy.config.http.down_server.abort_threshold INT 10
-
 ##############################################################################
 # Negative response caching, for redirects and errors. Docs:
 #    https://docs.trafficserver.apache.org/records.config#negative-response-caching
 ##############################################################################
 CONFIG proxy.config.http.negative_caching_enabled INT 0
 CONFIG proxy.config.http.negative_caching_lifetime INT 1800
-
 ##############################################################################
 # Proxy users variables. Docs:
 #    https://docs.trafficserver.apache.org/records.config#proxy-user-variables
 ##############################################################################
 CONFIG proxy.config.http.anonymize_insert_client_ip INT 1
 CONFIG proxy.config.http.insert_squid_x_forwarded_for INT 1
-
 ##############################################################################
 # Security. Docs:
 #    https://docs.trafficserver.apache.org/records.config#security
 ##############################################################################
 CONFIG proxy.config.http.push_method_enabled INT 0
-
 ##############################################################################
 # Enable / disable HTTP caching. Useful for testing, but also as an
 # overridable (per remap) config
 ##############################################################################
 CONFIG proxy.config.http.cache.http INT 1
-
 ##############################################################################
 # Cache control. Docs:
 #    https://docs.trafficserver.apache.org/records.config#cache-control
@@ -111,16 +99,14 @@
     # https://docs.trafficserver.apache.org/records.config#proxy-config-http-cache-when-to-revalidate
 CONFIG proxy.config.http.cache.when_to_revalidate INT 0
     # https://docs.trafficserver.apache.org/records.config#proxy-config-http-cache-required-headers
-CONFIG proxy.config.http.cache.required_headers INT 2
-
+CONFIG proxy.config.http.cache.required_headers INT 0
 ##############################################################################
 # Heuristic cache expiration. Docs:
 #    https://docs.trafficserver.apache.org/records.config#heuristic-expiration
 ##############################################################################
 CONFIG proxy.config.http.cache.heuristic_min_lifetime INT 3600
 CONFIG proxy.config.http.cache.heuristic_max_lifetime INT 86400
-CONFIG proxy.config.http.cache.heuristic_lm_factor FLOAT 0.10
-
+CONFIG proxy.config.http.cache.heuristic_lm_factor FLOAT 0.100000
 ##############################################################################
 # Network. Docs:
 #    https://docs.trafficserver.apache.org/records.config#network
@@ -128,34 +114,33 @@
 CONFIG proxy.config.net.connections_throttle INT 30000
 CONFIG proxy.config.net.max_connections_in INT 30000
 CONFIG proxy.config.net.max_connections_active_in INT 10000
-
 ##############################################################################
 # RAM and disk cache configurations. Docs:
 #    https://docs.trafficserver.apache.org/records.config#ram-cache
 #    https://docs.trafficserver.apache.org/en/latest/reference/configuration/storage.config.en.html
 ##############################################################################
 CONFIG proxy.config.cache.ram_cache.size INT -1
+#CONFIG proxy.config.cache.ram_cache_cutoff INT 1048576
 CONFIG proxy.config.cache.ram_cache_cutoff INT 4194304
     # https://docs.trafficserver.apache.org/records.config#proxy-config-cache-limits-http-max-alts
 CONFIG proxy.config.cache.limits.http.max_alts INT 5
     # https://docs.trafficserver.apache.org/records.config#proxy-config-cache-max-doc-size
 CONFIG proxy.config.cache.max_doc_size INT 0
 CONFIG proxy.config.cache.min_average_object_size INT 8000
-
 ##############################################################################
 # Logging Config. Docs:
 #    https://docs.trafficserver.apache.org/records.config#logging-configuration
 #    https://docs.trafficserver.apache.org/en/latest/reference/configuration/logs_xml.config.en.html
 ##############################################################################
 CONFIG proxy.config.log.logging_enabled INT 3
-CONFIG proxy.config.log.max_space_mb_for_logs INT 25000
+CONFIG proxy.config.log.max_space_mb_for_logs INT 2500000
 CONFIG proxy.config.log.max_space_mb_headroom INT 1000
 CONFIG proxy.config.log.rolling_enabled INT 1
-CONFIG proxy.config.log.rolling_interval_sec INT 86400
-CONFIG proxy.config.log.rolling_size_mb INT 10
+CONFIG proxy.config.log.rolling_interval_sec INT 3600
+CONFIG proxy.config.log.rolling_size_mb INT 500
 CONFIG proxy.config.log.auto_delete_rolled_files INT 1
 CONFIG proxy.config.log.periodic_tasks_interval INT 5
-
+#CONFIG proxy.config.log.logfile_dir STRING /cdnlog/ats
 ##############################################################################
 # These settings control remapping, and if the proxy allows (open) forward proxy or not. Docs:
 #    https://docs.trafficserver.apache.org/records.config#url-remap-rules
@@ -163,10 +148,9 @@
 ##############################################################################
 CONFIG proxy.config.url_remap.remap_required INT 1
     # https://docs.trafficserver.apache.org/records.config#proxy-config-url-remap-pristine-host-hdr
-CONFIG proxy.config.url_remap.pristine_host_hdr INT 0
+CONFIG proxy.config.url_remap.pristine_host_hdr INT 1
     # https://docs.trafficserver.apache.org/records.config#reverse-proxy
-CONFIG proxy.config.reverse_proxy.enabled INT 1
-
+CONFIG proxy.config.reverse_proxy.enabled INT 0
 ##############################################################################
 # SSL Termination. Docs:
 #    https://docs.trafficserver.apache.org/records.config#client-related-configuration
@@ -175,31 +159,53 @@
 CONFIG proxy.config.ssl.client.verify.server INT 0
 CONFIG proxy.config.ssl.client.CA.cert.filename STRING NULL
 CONFIG proxy.config.ssl.server.cipher_suite STRING ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-DSS-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-DSS-AES256-SHA:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA
-
 ##############################################################################
 # ICP Configuration. Docs:
 #    https://docs.trafficserver.apache.org/records.config#icp-configuration
 #    https://docs.trafficserver.apache.org/en/latest/reference/configuration/icp.config.en.html
 ##############################################################################
 CONFIG proxy.config.icp.enabled INT 0
-
 ##############################################################################
 # Debugging. Docs:
 #    https://docs.trafficserver.apache.org/records.config#diagnostic-logging-configuration
 ##############################################################################
 CONFIG proxy.config.diags.debug.enabled INT 0
-CONFIG proxy.config.diags.debug.tags STRING http.*|dns.*
+#CONFIG proxy.config.diags.debug.tags STRING http.*|conn.*|cluster.*
+CONFIG proxy.config.diags.debug.tags STRING http.*|transform.*|http_trans.*|plugin.*|null-transform.*|cache_range_requests.*|sdk.*|http_cs.*|cdn.*
+#CONFIG proxy.config.diags.debug.tags STRING cluster.*|ccom.*
 # ToDo: Undocumented
 CONFIG proxy.config.dump_mem_info_frequency INT 0
 CONFIG proxy.config.http.slow.log.threshold INT 0
-
 ##############################################################################
 # Cluster Subsystem. Docs:
 #    https://docs.trafficserver.apache.org/records.config#cluster
 ##############################################################################
-LOCAL proxy.local.cluster.type INT 3
-CONFIG proxy.config.cluster.ethernet_interface STRING lo
+LOCAL proxy.local.cluster.type INT 1
+CONFIG proxy.config.cluster.ethernet_interface STRING eth1
 CONFIG proxy.config.cluster.cluster_port INT 8086
 CONFIG proxy.config.cluster.rsport INT 8088
 CONFIG proxy.config.cluster.mcport INT 8089
 CONFIG proxy.config.cluster.mc_group_addr STRING 224.0.1.37
+CONFIG proxy.config.body_factory.template_sets_dir STRING etc/trafficserver/body_factory
+CONFIG proxy.config.url_remap.filename STRING remap.config
+CONFIG proxy.config.cache.ip_allow.filename STRING ip_allow.config
+#######################
+CONFIG proxy.config.http.enable_http_info INT 1
+CONFIG proxy.config.http.enable_http_stats INT 1
+CONFIG proxy.config.http_ui_enabled INT 3
+CONFIG proxy.config.http.cache.ignore_client_no_cache INT 1
+CONFIG proxy.config.http.cache.ignore_server_no_cache INT 1
+CONFIG proxy.config.proxy_name STRING XIPU_BJ_CDN_MGTV
+#LOCAL proxy.local.cluster.type INT 3
+CONFIG proxy.config.cluster.num_of_cluster_connections INT 10
+CONFIG proxy.config.http.response_server_enabled INT 1
+CONFIG proxy.config.http.response_server_str STRING XIPU_CDN_MGTV/1.0
+CONFIG proxy.config.http.response_via_str STRING XIPU_CDN_MGTV
+CONFIG proxy.config.log.custom_logs_enabled INT 1
+CONFIG proxy.config.cluster.cluster_configuration STRING cluster.config
+CONFIG proxy.config.log.xml_config_file STRING logs_xml.config
+CONFIG proxy.config.cache.control.filename STRING cache.config
+CONFIG proxy.config.http.cache.range.write INT 1
+CONFIG proxy.config.http.cache.range.lookup INT 1
+#CONFIG proxy.config.http.parent_proxy.file STRING parent.config
+CONFIG proxy.config.hostdb.serve_stale_for INT 1800
diff -uNr ats_etc_init/records.config_1 ats1_etc_dest/records.config_1
--- ats_etc_init/records.config_1	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/records.config_1	2017-06-28 03:07:04.331572119 +0000
@@ -0,0 +1,211 @@
+##############################################################################
+# *NOTE*: All options covered in this file should be documented in the docs:
+#
+#    https://docs.trafficserver.apache.org/en/latest/reference/configuration/records.config.en.html
+##############################################################################
+##############################################################################
+# Thread configurations. Docs:
+#    https://docs.trafficserver.apache.org/records.config#proxy-config-exec-thread-autoconfig
+##############################################################################
+CONFIG proxy.config.exec_thread.autoconfig INT 1
+CONFIG proxy.config.exec_thread.autoconfig.scale FLOAT 2.000000
+CONFIG proxy.config.exec_thread.limit INT 2
+CONFIG proxy.config.ssl.number.threads INT -1
+CONFIG proxy.config.accept_threads INT 1
+CONFIG proxy.config.task_threads INT 2
+CONFIG proxy.config.cache.threads_per_disk INT 8
+    # https://docs.trafficserver.apache.org/records.config#proxy-config-exec-thread-affinity
+CONFIG proxy.config.exec_thread.affinity INT 1
+##############################################################################
+# Specify server addresses and ports to bind for HTTP and HTTPS. Docs:
+#    https://docs.trafficserver.apache.org/records.config#proxy-config-http-server-ports
+##############################################################################
+CONFIG proxy.config.http.server_ports STRING 8080
+##############################################################################
+# Enable HTTP/2 Support. Docs:
+#    https://docs.trafficserver.apache.org/records.config#http-2-configuration
+##############################################################################
+CONFIG proxy.config.http2.enabled INT 0
+##############################################################################
+# Via: headers. Docs:
+#     https://docs.trafficserver.apache.org/records.config#proxy-config-http-insert-response-via-str
+##############################################################################
+CONFIG proxy.config.http.insert_request_via_str INT 1
+CONFIG proxy.config.http.insert_response_via_str INT 2
+##############################################################################
+# Parent proxy configuration, in addition to these settings also see parent.config. Docs:
+#    https://docs.trafficserver.apache.org/records.config#parent-proxy-configuration
+#    https://docs.trafficserver.apache.org/en/latest/reference/configuration/parent.config.en.html
+##############################################################################
+#CONFIG proxy.config.http.parent_proxy_routing_enable INT 0
+#CONFIG proxy.config.http.parent_proxy.retry_time INT 300
+#CONFIG proxy.config.http.parent_proxy.connect_attempts_timeout INT 60
+#CONFIG proxy.config.http.forward.proxy_auth_to_parent INT 0
+#CONFIG proxy.config.http.uncacheable_requests_bypass_parent INT 1
+##############################################################################
+# HTTP connection timeouts (secs). Docs:
+#    https://docs.trafficserver.apache.org/records.config#http-connection-timeouts
+##############################################################################
+CONFIG proxy.config.http.keep_alive_no_activity_timeout_in INT 30
+CONFIG proxy.config.http.keep_alive_no_activity_timeout_out INT 30
+CONFIG proxy.config.http.transaction_no_activity_timeout_in INT 30
+CONFIG proxy.config.http.transaction_no_activity_timeout_out INT 30
+CONFIG proxy.config.http.transaction_active_timeout_in INT 900
+CONFIG proxy.config.http.transaction_active_timeout_out INT 0
+CONFIG proxy.config.http.accept_no_activity_timeout INT 120
+CONFIG proxy.config.net.default_inactivity_timeout INT 86400
+##############################################################################
+# Origin server connect attempts. Docs:
+#    https://docs.trafficserver.apache.org/records.config#origin-server-connect-attempts
+##############################################################################
+CONFIG proxy.config.http.connect_attempts_max_retries INT 3
+CONFIG proxy.config.http.connect_attempts_max_retries_dead_server INT 1
+CONFIG proxy.config.http.connect_attempts_rr_retries INT 3
+CONFIG proxy.config.http.connect_attempts_timeout INT 30
+CONFIG proxy.config.http.post_connect_attempts_timeout INT 1800
+CONFIG proxy.config.http.down_server.cache_time INT 60
+CONFIG proxy.config.http.down_server.abort_threshold INT 10
+##############################################################################
+# Negative response caching, for redirects and errors. Docs:
+#    https://docs.trafficserver.apache.org/records.config#negative-response-caching
+##############################################################################
+CONFIG proxy.config.http.negative_caching_enabled INT 0
+CONFIG proxy.config.http.negative_caching_lifetime INT 1800
+##############################################################################
+# Proxy users variables. Docs:
+#    https://docs.trafficserver.apache.org/records.config#proxy-user-variables
+##############################################################################
+CONFIG proxy.config.http.anonymize_insert_client_ip INT 1
+CONFIG proxy.config.http.insert_squid_x_forwarded_for INT 1
+##############################################################################
+# Security. Docs:
+#    https://docs.trafficserver.apache.org/records.config#security
+##############################################################################
+CONFIG proxy.config.http.push_method_enabled INT 0
+##############################################################################
+# Enable / disable HTTP caching. Useful for testing, but also as an
+# overridable (per remap) config
+##############################################################################
+CONFIG proxy.config.http.cache.http INT 1
+##############################################################################
+# Cache control. Docs:
+#    https://docs.trafficserver.apache.org/records.config#cache-control
+#    https://docs.trafficserver.apache.org/en/latest/reference/configuration/cache.config.en.html
+##############################################################################
+CONFIG proxy.config.http.cache.ignore_client_cc_max_age INT 1
+CONFIG proxy.config.http.normalize_ae_gzip INT 1
+CONFIG proxy.config.http.cache.cache_responses_to_cookies INT 1
+CONFIG proxy.config.http.cache.cache_urls_that_look_dynamic INT 1
+    # https://docs.trafficserver.apache.org/records.config#proxy-config-http-cache-when-to-revalidate
+CONFIG proxy.config.http.cache.when_to_revalidate INT 0
+    # https://docs.trafficserver.apache.org/records.config#proxy-config-http-cache-required-headers
+CONFIG proxy.config.http.cache.required_headers INT 0
+##############################################################################
+# Heuristic cache expiration. Docs:
+#    https://docs.trafficserver.apache.org/records.config#heuristic-expiration
+##############################################################################
+CONFIG proxy.config.http.cache.heuristic_min_lifetime INT 3600
+CONFIG proxy.config.http.cache.heuristic_max_lifetime INT 86400
+CONFIG proxy.config.http.cache.heuristic_lm_factor FLOAT 0.100000
+##############################################################################
+# Network. Docs:
+#    https://docs.trafficserver.apache.org/records.config#network
+##############################################################################
+CONFIG proxy.config.net.connections_throttle INT 30000
+CONFIG proxy.config.net.max_connections_in INT 30000
+CONFIG proxy.config.net.max_connections_active_in INT 10000
+##############################################################################
+# RAM and disk cache configurations. Docs:
+#    https://docs.trafficserver.apache.org/records.config#ram-cache
+#    https://docs.trafficserver.apache.org/en/latest/reference/configuration/storage.config.en.html
+##############################################################################
+CONFIG proxy.config.cache.ram_cache.size INT -1
+#CONFIG proxy.config.cache.ram_cache_cutoff INT 1048576
+CONFIG proxy.config.cache.ram_cache_cutoff INT 4194304
+    # https://docs.trafficserver.apache.org/records.config#proxy-config-cache-limits-http-max-alts
+CONFIG proxy.config.cache.limits.http.max_alts INT 5
+    # https://docs.trafficserver.apache.org/records.config#proxy-config-cache-max-doc-size
+CONFIG proxy.config.cache.max_doc_size INT 0
+CONFIG proxy.config.cache.min_average_object_size INT 8000
+##############################################################################
+# Logging Config. Docs:
+#    https://docs.trafficserver.apache.org/records.config#logging-configuration
+#    https://docs.trafficserver.apache.org/en/latest/reference/configuration/logs_xml.config.en.html
+##############################################################################
+CONFIG proxy.config.log.logging_enabled INT 3
+CONFIG proxy.config.log.max_space_mb_for_logs INT 2500000
+CONFIG proxy.config.log.max_space_mb_headroom INT 1000
+CONFIG proxy.config.log.rolling_enabled INT 1
+CONFIG proxy.config.log.rolling_interval_sec INT 3600
+CONFIG proxy.config.log.rolling_size_mb INT 500
+CONFIG proxy.config.log.auto_delete_rolled_files INT 1
+CONFIG proxy.config.log.periodic_tasks_interval INT 5
+#CONFIG proxy.config.log.logfile_dir STRING /cdnlog/ats
+##############################################################################
+# These settings control remapping, and if the proxy allows (open) forward proxy or not. Docs:
+#    https://docs.trafficserver.apache.org/records.config#url-remap-rules
+#    https://docs.trafficserver.apache.org/en/latest/reference/configuration/remap.config.en.html
+##############################################################################
+CONFIG proxy.config.url_remap.remap_required INT 1
+    # https://docs.trafficserver.apache.org/records.config#proxy-config-url-remap-pristine-host-hdr
+CONFIG proxy.config.url_remap.pristine_host_hdr INT 1
+    # https://docs.trafficserver.apache.org/records.config#reverse-proxy
+CONFIG proxy.config.reverse_proxy.enabled INT 0
+##############################################################################
+# SSL Termination. Docs:
+#    https://docs.trafficserver.apache.org/records.config#client-related-configuration
+#    https://docs.trafficserver.apache.org/en/latest/reference/configuration/ssl_multicert.config.en.html
+##############################################################################
+CONFIG proxy.config.ssl.client.verify.server INT 0
+CONFIG proxy.config.ssl.client.CA.cert.filename STRING NULL
+CONFIG proxy.config.ssl.server.cipher_suite STRING ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-DSS-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-DSS-AES256-SHA:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA
+##############################################################################
+# ICP Configuration. Docs:
+#    https://docs.trafficserver.apache.org/records.config#icp-configuration
+#    https://docs.trafficserver.apache.org/en/latest/reference/configuration/icp.config.en.html
+##############################################################################
+CONFIG proxy.config.icp.enabled INT 0
+##############################################################################
+# Debugging. Docs:
+#    https://docs.trafficserver.apache.org/records.config#diagnostic-logging-configuration
+##############################################################################
+CONFIG proxy.config.diags.debug.enabled INT 0
+#CONFIG proxy.config.diags.debug.tags STRING http.*|conn.*|cluster.*
+CONFIG proxy.config.diags.debug.tags STRING http.*|transform.*|http_trans.*|plugin.*|null-transform.*|cache_range_requests.*|sdk.*|http_cs.*|cdn.*
+#CONFIG proxy.config.diags.debug.tags STRING cluster.*|ccom.*
+# ToDo: Undocumented
+CONFIG proxy.config.dump_mem_info_frequency INT 0
+CONFIG proxy.config.http.slow.log.threshold INT 0
+##############################################################################
+# Cluster Subsystem. Docs:
+#    https://docs.trafficserver.apache.org/records.config#cluster
+##############################################################################
+LOCAL proxy.local.cluster.type INT 1
+CONFIG proxy.config.cluster.ethernet_interface STRING bond1
+CONFIG proxy.config.cluster.cluster_port INT 8086
+CONFIG proxy.config.cluster.rsport INT 8088
+CONFIG proxy.config.cluster.mcport INT 8089
+CONFIG proxy.config.cluster.mc_group_addr STRING 224.0.1.37
+CONFIG proxy.config.body_factory.template_sets_dir STRING etc/trafficserver/body_factory
+CONFIG proxy.config.url_remap.filename STRING remap.config
+CONFIG proxy.config.cache.ip_allow.filename STRING ip_allow.config
+#######################
+CONFIG proxy.config.http.enable_http_info INT 1
+CONFIG proxy.config.http.enable_http_stats INT 1
+CONFIG proxy.config.http_ui_enabled INT 3
+CONFIG proxy.config.http.cache.ignore_client_no_cache INT 1
+CONFIG proxy.config.http.cache.ignore_server_no_cache INT 1
+CONFIG proxy.config.proxy_name STRING XIPU_BJ_CDN_MGTV
+#LOCAL proxy.local.cluster.type INT 3
+CONFIG proxy.config.cluster.num_of_cluster_connections INT 10
+CONFIG proxy.config.http.response_server_enabled INT 1
+CONFIG proxy.config.http.response_server_str STRING XIPU_CDN_MGTV/1.0
+CONFIG proxy.config.http.response_via_str STRING XIPU_CDN_MGTV
+CONFIG proxy.config.log.custom_logs_enabled INT 1
+CONFIG proxy.config.cluster.cluster_configuration STRING cluster.config
+CONFIG proxy.config.log.xml_config_file STRING logs_xml.config
+CONFIG proxy.config.cache.control.filename STRING cache.config
+CONFIG proxy.config.http.cache.range.write INT 1
+CONFIG proxy.config.http.cache.range.lookup INT 1
+#CONFIG proxy.config.http.parent_proxy.file STRING parent.config
+CONFIG proxy.config.hostdb.serve_stale_for INT 1800
diff -uNr ats_etc_init/records.config.default ats1_etc_dest/records.config.default
--- ats_etc_init/records.config.default	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/records.config.default	2017-06-28 03:07:04.340572350 +0000
@@ -0,0 +1,205 @@
+##############################################################################
+# *NOTE*: All options covered in this file should be documented in the docs:
+#
+#    https://docs.trafficserver.apache.org/en/latest/reference/configuration/records.config.en.html
+##############################################################################
+
+##############################################################################
+# Thread configurations. Docs:
+#    https://docs.trafficserver.apache.org/records.config#proxy-config-exec-thread-autoconfig
+##############################################################################
+CONFIG proxy.config.exec_thread.autoconfig INT 1
+CONFIG proxy.config.exec_thread.autoconfig.scale FLOAT 1.5
+CONFIG proxy.config.exec_thread.limit INT 2
+CONFIG proxy.config.ssl.number.threads INT -1
+CONFIG proxy.config.accept_threads INT 1
+CONFIG proxy.config.task_threads INT 2
+CONFIG proxy.config.cache.threads_per_disk INT 8
+    # https://docs.trafficserver.apache.org/records.config#proxy-config-exec-thread-affinity
+CONFIG proxy.config.exec_thread.affinity INT 1
+
+##############################################################################
+# Specify server addresses and ports to bind for HTTP and HTTPS. Docs:
+#    https://docs.trafficserver.apache.org/records.config#proxy-config-http-server-ports
+##############################################################################
+CONFIG proxy.config.http.server_ports STRING 8080
+
+##############################################################################
+# Enable HTTP/2 Support. Docs:
+#    https://docs.trafficserver.apache.org/records.config#http-2-configuration
+##############################################################################
+CONFIG proxy.config.http2.enabled INT 0
+
+##############################################################################
+# Via: headers. Docs:
+#     https://docs.trafficserver.apache.org/records.config#proxy-config-http-insert-response-via-str
+##############################################################################
+CONFIG proxy.config.http.insert_request_via_str INT 1
+CONFIG proxy.config.http.insert_response_via_str INT 0
+
+##############################################################################
+# Parent proxy configuration, in addition to these settings also see parent.config. Docs:
+#    https://docs.trafficserver.apache.org/records.config#parent-proxy-configuration
+#    https://docs.trafficserver.apache.org/en/latest/reference/configuration/parent.config.en.html
+##############################################################################
+CONFIG proxy.config.http.parent_proxy_routing_enable INT 0
+CONFIG proxy.config.http.parent_proxy.retry_time INT 300
+CONFIG proxy.config.http.parent_proxy.connect_attempts_timeout INT 30
+CONFIG proxy.config.http.forward.proxy_auth_to_parent INT 0
+CONFIG proxy.config.http.uncacheable_requests_bypass_parent INT 1
+
+##############################################################################
+# HTTP connection timeouts (secs). Docs:
+#    https://docs.trafficserver.apache.org/records.config#http-connection-timeouts
+##############################################################################
+CONFIG proxy.config.http.keep_alive_no_activity_timeout_in INT 115
+CONFIG proxy.config.http.keep_alive_no_activity_timeout_out INT 120
+CONFIG proxy.config.http.transaction_no_activity_timeout_in INT 30
+CONFIG proxy.config.http.transaction_no_activity_timeout_out INT 30
+CONFIG proxy.config.http.transaction_active_timeout_in INT 900
+CONFIG proxy.config.http.transaction_active_timeout_out INT 0
+CONFIG proxy.config.http.accept_no_activity_timeout INT 120
+CONFIG proxy.config.net.default_inactivity_timeout INT 86400
+
+##############################################################################
+# Origin server connect attempts. Docs:
+#    https://docs.trafficserver.apache.org/records.config#origin-server-connect-attempts
+##############################################################################
+CONFIG proxy.config.http.connect_attempts_max_retries INT 3
+CONFIG proxy.config.http.connect_attempts_max_retries_dead_server INT 1
+CONFIG proxy.config.http.connect_attempts_rr_retries INT 3
+CONFIG proxy.config.http.connect_attempts_timeout INT 30
+CONFIG proxy.config.http.post_connect_attempts_timeout INT 1800
+CONFIG proxy.config.http.down_server.cache_time INT 60
+CONFIG proxy.config.http.down_server.abort_threshold INT 10
+
+##############################################################################
+# Negative response caching, for redirects and errors. Docs:
+#    https://docs.trafficserver.apache.org/records.config#negative-response-caching
+##############################################################################
+CONFIG proxy.config.http.negative_caching_enabled INT 0
+CONFIG proxy.config.http.negative_caching_lifetime INT 1800
+
+##############################################################################
+# Proxy users variables. Docs:
+#    https://docs.trafficserver.apache.org/records.config#proxy-user-variables
+##############################################################################
+CONFIG proxy.config.http.anonymize_insert_client_ip INT 1
+CONFIG proxy.config.http.insert_squid_x_forwarded_for INT 1
+
+##############################################################################
+# Security. Docs:
+#    https://docs.trafficserver.apache.org/records.config#security
+##############################################################################
+CONFIG proxy.config.http.push_method_enabled INT 0
+
+##############################################################################
+# Enable / disable HTTP caching. Useful for testing, but also as an
+# overridable (per remap) config
+##############################################################################
+CONFIG proxy.config.http.cache.http INT 1
+
+##############################################################################
+# Cache control. Docs:
+#    https://docs.trafficserver.apache.org/records.config#cache-control
+#    https://docs.trafficserver.apache.org/en/latest/reference/configuration/cache.config.en.html
+##############################################################################
+CONFIG proxy.config.http.cache.ignore_client_cc_max_age INT 1
+CONFIG proxy.config.http.normalize_ae_gzip INT 1
+CONFIG proxy.config.http.cache.cache_responses_to_cookies INT 1
+CONFIG proxy.config.http.cache.cache_urls_that_look_dynamic INT 1
+    # https://docs.trafficserver.apache.org/records.config#proxy-config-http-cache-when-to-revalidate
+CONFIG proxy.config.http.cache.when_to_revalidate INT 0
+    # https://docs.trafficserver.apache.org/records.config#proxy-config-http-cache-required-headers
+CONFIG proxy.config.http.cache.required_headers INT 2
+
+##############################################################################
+# Heuristic cache expiration. Docs:
+#    https://docs.trafficserver.apache.org/records.config#heuristic-expiration
+##############################################################################
+CONFIG proxy.config.http.cache.heuristic_min_lifetime INT 3600
+CONFIG proxy.config.http.cache.heuristic_max_lifetime INT 86400
+CONFIG proxy.config.http.cache.heuristic_lm_factor FLOAT 0.10
+
+##############################################################################
+# Network. Docs:
+#    https://docs.trafficserver.apache.org/records.config#network
+##############################################################################
+CONFIG proxy.config.net.connections_throttle INT 30000
+CONFIG proxy.config.net.max_connections_in INT 30000
+CONFIG proxy.config.net.max_connections_active_in INT 10000
+
+##############################################################################
+# RAM and disk cache configurations. Docs:
+#    https://docs.trafficserver.apache.org/records.config#ram-cache
+#    https://docs.trafficserver.apache.org/en/latest/reference/configuration/storage.config.en.html
+##############################################################################
+CONFIG proxy.config.cache.ram_cache.size INT -1
+CONFIG proxy.config.cache.ram_cache_cutoff INT 4194304
+    # https://docs.trafficserver.apache.org/records.config#proxy-config-cache-limits-http-max-alts
+CONFIG proxy.config.cache.limits.http.max_alts INT 5
+    # https://docs.trafficserver.apache.org/records.config#proxy-config-cache-max-doc-size
+CONFIG proxy.config.cache.max_doc_size INT 0
+CONFIG proxy.config.cache.min_average_object_size INT 8000
+
+##############################################################################
+# Logging Config. Docs:
+#    https://docs.trafficserver.apache.org/records.config#logging-configuration
+#    https://docs.trafficserver.apache.org/en/latest/reference/configuration/logs_xml.config.en.html
+##############################################################################
+CONFIG proxy.config.log.logging_enabled INT 3
+CONFIG proxy.config.log.max_space_mb_for_logs INT 25000
+CONFIG proxy.config.log.max_space_mb_headroom INT 1000
+CONFIG proxy.config.log.rolling_enabled INT 1
+CONFIG proxy.config.log.rolling_interval_sec INT 86400
+CONFIG proxy.config.log.rolling_size_mb INT 10
+CONFIG proxy.config.log.auto_delete_rolled_files INT 1
+CONFIG proxy.config.log.periodic_tasks_interval INT 5
+
+##############################################################################
+# These settings control remapping, and if the proxy allows (open) forward proxy or not. Docs:
+#    https://docs.trafficserver.apache.org/records.config#url-remap-rules
+#    https://docs.trafficserver.apache.org/en/latest/reference/configuration/remap.config.en.html
+##############################################################################
+CONFIG proxy.config.url_remap.remap_required INT 1
+    # https://docs.trafficserver.apache.org/records.config#proxy-config-url-remap-pristine-host-hdr
+CONFIG proxy.config.url_remap.pristine_host_hdr INT 0
+    # https://docs.trafficserver.apache.org/records.config#reverse-proxy
+CONFIG proxy.config.reverse_proxy.enabled INT 1
+
+##############################################################################
+# SSL Termination. Docs:
+#    https://docs.trafficserver.apache.org/records.config#client-related-configuration
+#    https://docs.trafficserver.apache.org/en/latest/reference/configuration/ssl_multicert.config.en.html
+##############################################################################
+CONFIG proxy.config.ssl.client.verify.server INT 0
+CONFIG proxy.config.ssl.client.CA.cert.filename STRING NULL
+CONFIG proxy.config.ssl.server.cipher_suite STRING ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-DSS-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-DSS-AES256-SHA:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA
+
+##############################################################################
+# ICP Configuration. Docs:
+#    https://docs.trafficserver.apache.org/records.config#icp-configuration
+#    https://docs.trafficserver.apache.org/en/latest/reference/configuration/icp.config.en.html
+##############################################################################
+CONFIG proxy.config.icp.enabled INT 0
+
+##############################################################################
+# Debugging. Docs:
+#    https://docs.trafficserver.apache.org/records.config#diagnostic-logging-configuration
+##############################################################################
+CONFIG proxy.config.diags.debug.enabled INT 0
+CONFIG proxy.config.diags.debug.tags STRING http.*|dns.*
+# ToDo: Undocumented
+CONFIG proxy.config.dump_mem_info_frequency INT 0
+CONFIG proxy.config.http.slow.log.threshold INT 0
+
+##############################################################################
+# Cluster Subsystem. Docs:
+#    https://docs.trafficserver.apache.org/records.config#cluster
+##############################################################################
+LOCAL proxy.local.cluster.type INT 3
+CONFIG proxy.config.cluster.ethernet_interface STRING lo
+CONFIG proxy.config.cluster.cluster_port INT 8086
+CONFIG proxy.config.cluster.rsport INT 8088
+CONFIG proxy.config.cluster.mcport INT 8089
+CONFIG proxy.config.cluster.mc_group_addr STRING 224.0.1.37
diff -uNr ats_etc_init/remap.config ats1_etc_dest/remap.config
--- ats_etc_init/remap.config	2017-06-28 03:07:12.913572959 +0000
+++ ats1_etc_dest/remap.config	2017-06-28 03:07:04.342572391 +0000
@@ -190,3 +190,22 @@
 #     will be the entire input string)
 #  3) The number of substitutions in the expansion string is limited to 10.
 #
+map http://127.0.0.1:8080/cache http://{cache}:8080
+map http://localhost:8080/cache http://{cache}:8080
+map http://192.168.0.136:8080/cache http://{cache}:8080
+#map http://pcvideoyd.titan.mgtv.com http://source.hntvvideo.isurecloud.com @plugin=tslua.so @pparam=/home/ats/etc/script/replace_uri.lua
+#regex_map http://pcvideoyd.titan.mgtv.com.*\.m3u8 http://source.hntvvideo.isurecloud.com @plugin=tslua.so @pparam=/home/ats/etc/script/replace_uri.lua
+#map http://pcdownyd.titan.mgtv.com http://soure.hntvdown.isurecloud.com @plugin=tslua.so @pparam=/home/ats/etc/script/replace_uri.lua
+#regex_map http://pcdownyd.titan.mgtv.com.*\.mp4 http://soure.hntvdown.isurecloud.com @plugin=tslua.so @pparam=/home/ats/etc/script/replace_uri.lua
+#
+#
+map http://pcvideoyd.titan.mgtv.com http://source.hntvvideo.isurecloud.com
+#map http://pcdownyd.titan.mgtv.com http://source.hntvdown.cloudquic.com
+map http://pcdownyd.titan.mgtv.com http://192.168.3.210
+#
+#
+#map http://pcvideoyd.titan.mgtv.com http://pcvideoyd.titan.mgtv.com
+#map http://pcdownyd.titan.mgtv.com http://pcdownyd.titan.mgtv.com
+#@plugin=cachekey.so  @pparam=--static_prefix=/pcdownyd.titan.mgtv.com/80  @pparam=--exclude-params=arange
+#map http://pcdownyd.titan.mgtv.com http://soure.hntvdown.isurecloud.com @plugin=cache_range_requests.so
+#map http://pcdownyd.titan.mgtv.com http://soure.hntvdown.isurecloud.com @plugin=ats_slice_range.so
diff -uNr ats_etc_init/remap.config_1 ats1_etc_dest/remap.config_1
--- ats_etc_init/remap.config_1	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/remap.config_1	2017-06-28 03:07:04.330572092 +0000
@@ -0,0 +1,207 @@
+#
+#  URL Remapping Config File
+#
+# Using remap.config allows you to accomplish two things:
+#
+#  1) Rewrite a URL (from the client) before sending it to the Origin Server.
+#  2) Protect the proxy server, to only allow certain requests.
+#
+#  With the default configurations, at least one remap rule is required. This
+#  can be relaxed with the following configuration in records.config:
+#
+#   CONFIG proxy.config.url_remap.remap_required INT 0
+#
+# Be aware, doing so makes the proxy a generic, open-relay!
+#
+#  The format is:
+#      <map_type> client-URL origin-server-URL <tag_value> <filtering>
+#
+# Where client-URL and origin-server-URL are both of the format
+#    <scheme>://<host>:<port>/<path_prefix>
+#
+#  The <tag_value> directive is optional and can be different for different
+#  types of <map_type>. The <filtering arguments> are optional ACL-like
+#  arguments unique for each remap rule
+#
+#  Six different types of mappings are possible:
+#     map
+#     map_with_referer
+#     map_with_recv_port
+#     reverse_map
+#     redirect
+#     redirect_temporary
+#
+#  Each of these map types can be prefixed with the string 'regex_' to indicate
+#  that the rule will have regular expression strings. See the last part of
+#  this description for more information on regex support.
+#
+#  The 'map' mapping is the most straightforward.  Requests that match the
+#  client-URL are rewritten into the origin-server-URL. The user agent will see
+#  the page on the remapped URL, but will not be notified of the address
+#  change.
+#
+#  The 'map_with_referer' is an extended version of 'map', which can be used to
+#  activate the so-called "deep linking protection" feature available in
+#  Apache Traffic Server.
+#
+#  The 'map_with_recv_port' is exactly like 'map' except that it uses the port
+#  at which the request was received to perform the mapping instead of the port
+#  present in the request. When present, 'map_with_recv_port' mappings are
+#  checked first. If there is a match, then it is chosen without evaluating the
+#  "regular" forward mapping rules.
+#
+#  The 'reverse_map' mapping is used to rewrite location headers sent by the
+#  origin server.  The 'redirect' mapping creates a permanent redirect message
+#  and informs the browser of the URL change.
+#
+#  The 'redirect_temporary' mapping acts in the same way but tells the browser
+#  that this redirect is only temporary.  We need to map the URL in reverse
+#  proxy mode so that user agents know to contact Traffic Server and not
+#  attempt to contact the Origin Server directly.
+#
+#  For example, you can set up a reverse proxy for www.example.com with the
+#  real content situated at server1.example.com with the rules:
+#
+#    map          http://www.example.com/      http://server1.example.com/
+#    reverse_map  http://server1.example.com/  http://www.example.com/
+#
+#  Or you could permanently redirect users trying to access www.oldserver.com
+#  to www.newserver.com with the following rule:
+#
+#    redirect	http://www.oldserver.com/    http://www.newserver.com
+#
+#  If the redirect is only temporary, you want to only temporarily remap the
+#  URL.  You could use the following rule to divert users away from a failed
+#  server:
+#
+#  redirect_temporary http://broken.firm.com http://working.firm.com
+#
+#  In order to use "deep linking protection" Traffic Server's feature, the
+#  'map_with_referer' mapping scheme must be used. In general, the format of is
+#  the following:
+#
+#     map_with_referer client-URL origin-server-URL redirect-URL regex1 [regex2 ...]
+#
+#  'redirect-URL' is a redirection URL specified according to RFC 2616 and can
+#  contain special formatting instructions for run-time modifications of the
+#  resulting redirection URL.  All regexes Perl compatible  regular expressions,
+#  which describes the content of the "Referer" header which must be
+#  verified. In case an actual request does not have "Referer" header or it
+#  does not match with referer regular expression, the HTTP request will be
+#  redirected to 'redirect-URL'.
+#
+#  At least one regular expressions must be specified in order to activate
+#  'deep linking protection'.  There are limitations for the number of referer
+#  regular expression strings - 2048.  In order to enable the 'deep linking
+#  protection' feature in Traffic Server, configure records.config with:
+#
+#    CONFIG proxy.config.http.referer_filter INT 1
+#
+#  In order to enable run-time formatting for redirect0URL, configure
+#
+#    CONFIG proxy.config.http.referer_format_redirect INT 1
+#
+#  When run-time formatting for redirect-URL was enabled the following format
+#  symbols can be used:
+#
+#    %r - to substitute original "Referer" header string
+#    %f - to substitute client-URL from 'map_with_referer' record
+#    %t - to substitute origin-server-URL from 'map_with_referer' record
+#    %o - to substitute request URL to origin server, which was created a
+#         the result of a mapping operation
+#
+#  Note: There is a special referer type "~*" that can be used in order to
+#  specify that the Referer header is optional in the request.  If "~*" referer
+#  was used in map_with_referer mapping, only requests with Referer header will
+#  be verified for validity.  If the "~" symbol was specified before referer
+#  regular expression, it means that the request with a matching referer header
+#  will be redirected to redirectURL. It can be used to create a so-called
+#  negative referer list.  If "*" was used as a referer regular expression -
+#  all referers are allowed.  Various combinations of "*" and "~" in a referer
+#  list can be used to create different filtering rules.
+#
+#  Examples:
+#    map_with_referer http://y.foo.bar.com/x/yy/  http://foo.bar.com/x/yy/ http://games.bar.com/new_games .*\.bar\.com www.bar-friends.com
+#
+#  Explanation: Referer header must be in the request, only ".*\.bar\.com"
+#  and "www.bar-friends.com" are allowed.
+#
+#    map_with_referer http://y.foo.bar.com/x/yy/  http://foo.bar.com/x/yy/ http://games.bar.com/new_games * ~.*\.evil\.com
+#
+#  Explanation: Referer header must be in the request but all referers are
+#  allowed except ".*\.evil\.com".
+#
+#    map_with_referer http://y.foo.bar.com/x/yy/  http://foo.bar.com/x/yy/ http://games.bar.com/error ~* * ~.*\.evil\.com
+#
+#  Explanation: Referer header is optional. However, if Referer header exists,
+#  only request from ".*\.evil\.com" will be redirected to redirect-URL.
+#
+#  There are optional filtering arguments that can be specified at the end of the mapping definition line:
+#
+#    @action=allow|deny
+#    @src_ip=IP-address
+#    @method=HTTP method string (CONNECT|DELETE|GET|HEAD|ICP_QUERY|OPTIONS|POST|PURGE|PUT|TRACE|PUSH)
+#    @plugin=<plugin_path>
+#    @pparam=<plugin_param>
+#
+#  There is no limitation for the number of filtering arguments.
+#
+#  Example:
+#    map http://foo.cow.com/ http://bar.cow.com @src_ip=10.72.118.51-10.72.118.62 @method=GET @method=DELETE @src_ip=192.168.0.1-192.168.0.254 @action=allow @method=PUT
+#
+#  Traffic Server supports WebSockets but it must be enabled via remap. WebSocket upgrades are automatically
+#  detected when there exists a remap rule containing a ws:// scheme.
+#
+#  Example:
+#     map ws://bar.com/ ws://foo.com/
+#
+#  Explaination: When a request comes in with the appropriate upgrade headers, Traffic Server will use this
+#   remap rule in an attempt to establish and maintain a websocket connection.
+#
+#  Named filters can be created and applied to blocks of mappings
+#  using the .definefilter, .activatefilter, and .deactivatefilter
+#  directives. Named filters must be defined using .definefilter
+#  before being used. Once defined, .activatefilter can used to
+#  activate a filter for all mappings that follow until deactivated
+#  with .deactivatefilter.
+#
+#  Example:
+#    .definefilter disable_delete_purge @action=deny @method=delete @method=purge
+#    .definefilter internal_only @action=allow @src_ip=192.168.0.1-192.168.0.254 @src_ip=10.0.0.1-10.0.0.254
+#
+#    .activatefilter disable_delete_purge
+#
+#    map http://foo.example.com/ http://bar.example.com/
+#
+#    .activatefilter internal_only
+#    map http://www.example.com/admin http://internal.example.com/admin
+#    .deactivatefilter internal_only
+#
+#    map http://www.example.com/ http://internal.example.com/
+#
+#
+#  Regex support: Regular expressions can be specified in the rules with the
+#  following limitations:
+#
+#  1) Only the host field can have regexes - the scheme, port and other
+#     fields cannot.
+#  2) The number of capturing sub-patterns is limited to 9;
+#     this means $0 through $9 can be used as substitution place holders ($0
+#     will be the entire input string)
+#  3) The number of substitutions in the expansion string is limited to 10.
+#
+map http://127.0.0.1:8080/cache http://{cache}:8080
+map http://localhost:8080/cache http://{cache}:8080
+map http://192.168.0.136:8080/cache http://{cache}:8080
+#map http://pcvideoyd.titan.mgtv.com http://source.hntvvideo.isurecloud.com @plugin=tslua.so @pparam=/home/ats/etc/script/replace_uri.lua
+#regex_map http://pcvideoyd.titan.mgtv.com.*\.m3u8 http://source.hntvvideo.isurecloud.com @plugin=tslua.so @pparam=/home/ats/etc/script/replace_uri.lua
+#map http://pcdownyd.titan.mgtv.com http://soure.hntvdown.isurecloud.com @plugin=tslua.so @pparam=/home/ats/etc/script/replace_uri.lua
+#regex_map http://pcdownyd.titan.mgtv.com.*\.mp4 http://soure.hntvdown.isurecloud.com @plugin=tslua.so @pparam=/home/ats/etc/script/replace_uri.lua
+map http://pcvideoyd.titan.mgtv.com http://source.hntvvideo.isurecloud.com
+#map http://pcdownyd.titan.mgtv.com http://soure.hntvdown.isurecloud.com
+map http://pcdownyd.titan.mgtv.com http://source.hntvdown.cloudquic.com
+#map http://pcvideoyd.titan.mgtv.com http://pcvideoyd.titan.mgtv.com
+#map http://pcdownyd.titan.mgtv.com http://pcdownyd.titan.mgtv.com
+#@plugin=cachekey.so  @pparam=--static_prefix=/pcdownyd.titan.mgtv.com/80  @pparam=--exclude-params=arange
+#map http://pcdownyd.titan.mgtv.com http://soure.hntvdown.isurecloud.com @plugin=cache_range_requests.so
+#map http://pcdownyd.titan.mgtv.com http://soure.hntvdown.isurecloud.com @plugin=ats_slice_range.so
diff -uNr ats_etc_init/remap.config_2 ats1_etc_dest/remap.config_2
--- ats_etc_init/remap.config_2	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/remap.config_2	2017-06-28 03:07:04.247564858 +0000
@@ -0,0 +1,211 @@
+#
+#  URL Remapping Config File
+#
+# Using remap.config allows you to accomplish two things:
+#
+#  1) Rewrite a URL (from the client) before sending it to the Origin Server.
+#  2) Protect the proxy server, to only allow certain requests.
+#
+#  With the default configurations, at least one remap rule is required. This
+#  can be relaxed with the following configuration in records.config:
+#
+#   CONFIG proxy.config.url_remap.remap_required INT 0
+#
+# Be aware, doing so makes the proxy a generic, open-relay!
+#
+#  The format is:
+#      <map_type> client-URL origin-server-URL <tag_value> <filtering>
+#
+# Where client-URL and origin-server-URL are both of the format
+#    <scheme>://<host>:<port>/<path_prefix>
+#
+#  The <tag_value> directive is optional and can be different for different
+#  types of <map_type>. The <filtering arguments> are optional ACL-like
+#  arguments unique for each remap rule
+#
+#  Six different types of mappings are possible:
+#     map
+#     map_with_referer
+#     map_with_recv_port
+#     reverse_map
+#     redirect
+#     redirect_temporary
+#
+#  Each of these map types can be prefixed with the string 'regex_' to indicate
+#  that the rule will have regular expression strings. See the last part of
+#  this description for more information on regex support.
+#
+#  The 'map' mapping is the most straightforward.  Requests that match the
+#  client-URL are rewritten into the origin-server-URL. The user agent will see
+#  the page on the remapped URL, but will not be notified of the address
+#  change.
+#
+#  The 'map_with_referer' is an extended version of 'map', which can be used to
+#  activate the so-called "deep linking protection" feature available in
+#  Apache Traffic Server.
+#
+#  The 'map_with_recv_port' is exactly like 'map' except that it uses the port
+#  at which the request was received to perform the mapping instead of the port
+#  present in the request. When present, 'map_with_recv_port' mappings are
+#  checked first. If there is a match, then it is chosen without evaluating the
+#  "regular" forward mapping rules.
+#
+#  The 'reverse_map' mapping is used to rewrite location headers sent by the
+#  origin server.  The 'redirect' mapping creates a permanent redirect message
+#  and informs the browser of the URL change.
+#
+#  The 'redirect_temporary' mapping acts in the same way but tells the browser
+#  that this redirect is only temporary.  We need to map the URL in reverse
+#  proxy mode so that user agents know to contact Traffic Server and not
+#  attempt to contact the Origin Server directly.
+#
+#  For example, you can set up a reverse proxy for www.example.com with the
+#  real content situated at server1.example.com with the rules:
+#
+#    map          http://www.example.com/      http://server1.example.com/
+#    reverse_map  http://server1.example.com/  http://www.example.com/
+#
+#  Or you could permanently redirect users trying to access www.oldserver.com
+#  to www.newserver.com with the following rule:
+#
+#    redirect	http://www.oldserver.com/    http://www.newserver.com
+#
+#  If the redirect is only temporary, you want to only temporarily remap the
+#  URL.  You could use the following rule to divert users away from a failed
+#  server:
+#
+#  redirect_temporary http://broken.firm.com http://working.firm.com
+#
+#  In order to use "deep linking protection" Traffic Server's feature, the
+#  'map_with_referer' mapping scheme must be used. In general, the format of is
+#  the following:
+#
+#     map_with_referer client-URL origin-server-URL redirect-URL regex1 [regex2 ...]
+#
+#  'redirect-URL' is a redirection URL specified according to RFC 2616 and can
+#  contain special formatting instructions for run-time modifications of the
+#  resulting redirection URL.  All regexes Perl compatible  regular expressions,
+#  which describes the content of the "Referer" header which must be
+#  verified. In case an actual request does not have "Referer" header or it
+#  does not match with referer regular expression, the HTTP request will be
+#  redirected to 'redirect-URL'.
+#
+#  At least one regular expressions must be specified in order to activate
+#  'deep linking protection'.  There are limitations for the number of referer
+#  regular expression strings - 2048.  In order to enable the 'deep linking
+#  protection' feature in Traffic Server, configure records.config with:
+#
+#    CONFIG proxy.config.http.referer_filter INT 1
+#
+#  In order to enable run-time formatting for redirect0URL, configure
+#
+#    CONFIG proxy.config.http.referer_format_redirect INT 1
+#
+#  When run-time formatting for redirect-URL was enabled the following format
+#  symbols can be used:
+#
+#    %r - to substitute original "Referer" header string
+#    %f - to substitute client-URL from 'map_with_referer' record
+#    %t - to substitute origin-server-URL from 'map_with_referer' record
+#    %o - to substitute request URL to origin server, which was created a
+#         the result of a mapping operation
+#
+#  Note: There is a special referer type "~*" that can be used in order to
+#  specify that the Referer header is optional in the request.  If "~*" referer
+#  was used in map_with_referer mapping, only requests with Referer header will
+#  be verified for validity.  If the "~" symbol was specified before referer
+#  regular expression, it means that the request with a matching referer header
+#  will be redirected to redirectURL. It can be used to create a so-called
+#  negative referer list.  If "*" was used as a referer regular expression -
+#  all referers are allowed.  Various combinations of "*" and "~" in a referer
+#  list can be used to create different filtering rules.
+#
+#  Examples:
+#    map_with_referer http://y.foo.bar.com/x/yy/  http://foo.bar.com/x/yy/ http://games.bar.com/new_games .*\.bar\.com www.bar-friends.com
+#
+#  Explanation: Referer header must be in the request, only ".*\.bar\.com"
+#  and "www.bar-friends.com" are allowed.
+#
+#    map_with_referer http://y.foo.bar.com/x/yy/  http://foo.bar.com/x/yy/ http://games.bar.com/new_games * ~.*\.evil\.com
+#
+#  Explanation: Referer header must be in the request but all referers are
+#  allowed except ".*\.evil\.com".
+#
+#    map_with_referer http://y.foo.bar.com/x/yy/  http://foo.bar.com/x/yy/ http://games.bar.com/error ~* * ~.*\.evil\.com
+#
+#  Explanation: Referer header is optional. However, if Referer header exists,
+#  only request from ".*\.evil\.com" will be redirected to redirect-URL.
+#
+#  There are optional filtering arguments that can be specified at the end of the mapping definition line:
+#
+#    @action=allow|deny
+#    @src_ip=IP-address
+#    @method=HTTP method string (CONNECT|DELETE|GET|HEAD|ICP_QUERY|OPTIONS|POST|PURGE|PUT|TRACE|PUSH)
+#    @plugin=<plugin_path>
+#    @pparam=<plugin_param>
+#
+#  There is no limitation for the number of filtering arguments.
+#
+#  Example:
+#    map http://foo.cow.com/ http://bar.cow.com @src_ip=10.72.118.51-10.72.118.62 @method=GET @method=DELETE @src_ip=192.168.0.1-192.168.0.254 @action=allow @method=PUT
+#
+#  Traffic Server supports WebSockets but it must be enabled via remap. WebSocket upgrades are automatically
+#  detected when there exists a remap rule containing a ws:// scheme.
+#
+#  Example:
+#     map ws://bar.com/ ws://foo.com/
+#
+#  Explaination: When a request comes in with the appropriate upgrade headers, Traffic Server will use this
+#   remap rule in an attempt to establish and maintain a websocket connection.
+#
+#  Named filters can be created and applied to blocks of mappings
+#  using the .definefilter, .activatefilter, and .deactivatefilter
+#  directives. Named filters must be defined using .definefilter
+#  before being used. Once defined, .activatefilter can used to
+#  activate a filter for all mappings that follow until deactivated
+#  with .deactivatefilter.
+#
+#  Example:
+#    .definefilter disable_delete_purge @action=deny @method=delete @method=purge
+#    .definefilter internal_only @action=allow @src_ip=192.168.0.1-192.168.0.254 @src_ip=10.0.0.1-10.0.0.254
+#
+#    .activatefilter disable_delete_purge
+#
+#    map http://foo.example.com/ http://bar.example.com/
+#
+#    .activatefilter internal_only
+#    map http://www.example.com/admin http://internal.example.com/admin
+#    .deactivatefilter internal_only
+#
+#    map http://www.example.com/ http://internal.example.com/
+#
+#
+#  Regex support: Regular expressions can be specified in the rules with the
+#  following limitations:
+#
+#  1) Only the host field can have regexes - the scheme, port and other
+#     fields cannot.
+#  2) The number of capturing sub-patterns is limited to 9;
+#     this means $0 through $9 can be used as substitution place holders ($0
+#     will be the entire input string)
+#  3) The number of substitutions in the expansion string is limited to 10.
+#
+map http://127.0.0.1:8080/cache http://{cache}:8080
+map http://localhost:8080/cache http://{cache}:8080
+map http://192.168.0.136:8080/cache http://{cache}:8080
+#map http://pcvideoyd.titan.mgtv.com http://source.hntvvideo.isurecloud.com @plugin=tslua.so @pparam=/home/ats/etc/script/replace_uri.lua
+#regex_map http://pcvideoyd.titan.mgtv.com.*\.m3u8 http://source.hntvvideo.isurecloud.com @plugin=tslua.so @pparam=/home/ats/etc/script/replace_uri.lua
+#map http://pcdownyd.titan.mgtv.com http://soure.hntvdown.isurecloud.com @plugin=tslua.so @pparam=/home/ats/etc/script/replace_uri.lua
+#regex_map http://pcdownyd.titan.mgtv.com.*\.mp4 http://soure.hntvdown.isurecloud.com @plugin=tslua.so @pparam=/home/ats/etc/script/replace_uri.lua
+#
+#
+map http://pcvideoyd.titan.mgtv.com http://source.hntvvideo.isurecloud.com
+#map http://pcdownyd.titan.mgtv.com http://source.hntvdown.cloudquic.com
+map http://pcdownyd.titan.mgtv.com http://192.168.3.210
+#
+#
+#map http://pcvideoyd.titan.mgtv.com http://pcvideoyd.titan.mgtv.com
+#map http://pcdownyd.titan.mgtv.com http://pcdownyd.titan.mgtv.com
+#@plugin=cachekey.so  @pparam=--static_prefix=/pcdownyd.titan.mgtv.com/80  @pparam=--exclude-params=arange
+#map http://pcdownyd.titan.mgtv.com http://soure.hntvdown.isurecloud.com @plugin=cache_range_requests.so
+#map http://pcdownyd.titan.mgtv.com http://soure.hntvdown.isurecloud.com @plugin=ats_slice_range.so
diff -uNr ats_etc_init/remap.config.default ats1_etc_dest/remap.config.default
--- ats_etc_init/remap.config.default	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/remap.config.default	2017-06-28 03:07:04.336572223 +0000
@@ -0,0 +1,192 @@
+#
+#  URL Remapping Config File
+#
+# Using remap.config allows you to accomplish two things:
+#
+#  1) Rewrite a URL (from the client) before sending it to the Origin Server.
+#  2) Protect the proxy server, to only allow certain requests.
+#
+#  With the default configurations, at least one remap rule is required. This
+#  can be relaxed with the following configuration in records.config:
+#
+#   CONFIG proxy.config.url_remap.remap_required INT 0
+#
+# Be aware, doing so makes the proxy a generic, open-relay!
+#
+#  The format is:
+#      <map_type> client-URL origin-server-URL <tag_value> <filtering>
+#
+# Where client-URL and origin-server-URL are both of the format
+#    <scheme>://<host>:<port>/<path_prefix>
+#
+#  The <tag_value> directive is optional and can be different for different
+#  types of <map_type>. The <filtering arguments> are optional ACL-like
+#  arguments unique for each remap rule
+#
+#  Six different types of mappings are possible:
+#     map
+#     map_with_referer
+#     map_with_recv_port
+#     reverse_map
+#     redirect
+#     redirect_temporary
+#
+#  Each of these map types can be prefixed with the string 'regex_' to indicate
+#  that the rule will have regular expression strings. See the last part of
+#  this description for more information on regex support.
+#
+#  The 'map' mapping is the most straightforward.  Requests that match the
+#  client-URL are rewritten into the origin-server-URL. The user agent will see
+#  the page on the remapped URL, but will not be notified of the address
+#  change.
+#
+#  The 'map_with_referer' is an extended version of 'map', which can be used to
+#  activate the so-called "deep linking protection" feature available in
+#  Apache Traffic Server.
+#
+#  The 'map_with_recv_port' is exactly like 'map' except that it uses the port
+#  at which the request was received to perform the mapping instead of the port
+#  present in the request. When present, 'map_with_recv_port' mappings are
+#  checked first. If there is a match, then it is chosen without evaluating the
+#  "regular" forward mapping rules.
+#
+#  The 'reverse_map' mapping is used to rewrite location headers sent by the
+#  origin server.  The 'redirect' mapping creates a permanent redirect message
+#  and informs the browser of the URL change.
+#
+#  The 'redirect_temporary' mapping acts in the same way but tells the browser
+#  that this redirect is only temporary.  We need to map the URL in reverse
+#  proxy mode so that user agents know to contact Traffic Server and not
+#  attempt to contact the Origin Server directly.
+#
+#  For example, you can set up a reverse proxy for www.example.com with the
+#  real content situated at server1.example.com with the rules:
+#
+#    map          http://www.example.com/      http://server1.example.com/
+#    reverse_map  http://server1.example.com/  http://www.example.com/
+#
+#  Or you could permanently redirect users trying to access www.oldserver.com
+#  to www.newserver.com with the following rule:
+#
+#    redirect	http://www.oldserver.com/    http://www.newserver.com
+#
+#  If the redirect is only temporary, you want to only temporarily remap the
+#  URL.  You could use the following rule to divert users away from a failed
+#  server:
+#
+#  redirect_temporary http://broken.firm.com http://working.firm.com
+#
+#  In order to use "deep linking protection" Traffic Server's feature, the
+#  'map_with_referer' mapping scheme must be used. In general, the format of is
+#  the following:
+#
+#     map_with_referer client-URL origin-server-URL redirect-URL regex1 [regex2 ...]
+#
+#  'redirect-URL' is a redirection URL specified according to RFC 2616 and can
+#  contain special formatting instructions for run-time modifications of the
+#  resulting redirection URL.  All regexes Perl compatible  regular expressions,
+#  which describes the content of the "Referer" header which must be
+#  verified. In case an actual request does not have "Referer" header or it
+#  does not match with referer regular expression, the HTTP request will be
+#  redirected to 'redirect-URL'.
+#
+#  At least one regular expressions must be specified in order to activate
+#  'deep linking protection'.  There are limitations for the number of referer
+#  regular expression strings - 2048.  In order to enable the 'deep linking
+#  protection' feature in Traffic Server, configure records.config with:
+#
+#    CONFIG proxy.config.http.referer_filter INT 1
+#
+#  In order to enable run-time formatting for redirect0URL, configure
+#
+#    CONFIG proxy.config.http.referer_format_redirect INT 1
+#
+#  When run-time formatting for redirect-URL was enabled the following format
+#  symbols can be used:
+#
+#    %r - to substitute original "Referer" header string
+#    %f - to substitute client-URL from 'map_with_referer' record
+#    %t - to substitute origin-server-URL from 'map_with_referer' record
+#    %o - to substitute request URL to origin server, which was created a
+#         the result of a mapping operation
+#
+#  Note: There is a special referer type "~*" that can be used in order to
+#  specify that the Referer header is optional in the request.  If "~*" referer
+#  was used in map_with_referer mapping, only requests with Referer header will
+#  be verified for validity.  If the "~" symbol was specified before referer
+#  regular expression, it means that the request with a matching referer header
+#  will be redirected to redirectURL. It can be used to create a so-called
+#  negative referer list.  If "*" was used as a referer regular expression -
+#  all referers are allowed.  Various combinations of "*" and "~" in a referer
+#  list can be used to create different filtering rules.
+#
+#  Examples:
+#    map_with_referer http://y.foo.bar.com/x/yy/  http://foo.bar.com/x/yy/ http://games.bar.com/new_games .*\.bar\.com www.bar-friends.com
+#
+#  Explanation: Referer header must be in the request, only ".*\.bar\.com"
+#  and "www.bar-friends.com" are allowed.
+#
+#    map_with_referer http://y.foo.bar.com/x/yy/  http://foo.bar.com/x/yy/ http://games.bar.com/new_games * ~.*\.evil\.com
+#
+#  Explanation: Referer header must be in the request but all referers are
+#  allowed except ".*\.evil\.com".
+#
+#    map_with_referer http://y.foo.bar.com/x/yy/  http://foo.bar.com/x/yy/ http://games.bar.com/error ~* * ~.*\.evil\.com
+#
+#  Explanation: Referer header is optional. However, if Referer header exists,
+#  only request from ".*\.evil\.com" will be redirected to redirect-URL.
+#
+#  There are optional filtering arguments that can be specified at the end of the mapping definition line:
+#
+#    @action=allow|deny
+#    @src_ip=IP-address
+#    @method=HTTP method string (CONNECT|DELETE|GET|HEAD|ICP_QUERY|OPTIONS|POST|PURGE|PUT|TRACE|PUSH)
+#    @plugin=<plugin_path>
+#    @pparam=<plugin_param>
+#
+#  There is no limitation for the number of filtering arguments.
+#
+#  Example:
+#    map http://foo.cow.com/ http://bar.cow.com @src_ip=10.72.118.51-10.72.118.62 @method=GET @method=DELETE @src_ip=192.168.0.1-192.168.0.254 @action=allow @method=PUT
+#
+#  Traffic Server supports WebSockets but it must be enabled via remap. WebSocket upgrades are automatically
+#  detected when there exists a remap rule containing a ws:// scheme.
+#
+#  Example:
+#     map ws://bar.com/ ws://foo.com/
+#
+#  Explaination: When a request comes in with the appropriate upgrade headers, Traffic Server will use this
+#   remap rule in an attempt to establish and maintain a websocket connection.
+#
+#  Named filters can be created and applied to blocks of mappings
+#  using the .definefilter, .activatefilter, and .deactivatefilter
+#  directives. Named filters must be defined using .definefilter
+#  before being used. Once defined, .activatefilter can used to
+#  activate a filter for all mappings that follow until deactivated
+#  with .deactivatefilter.
+#
+#  Example:
+#    .definefilter disable_delete_purge @action=deny @method=delete @method=purge
+#    .definefilter internal_only @action=allow @src_ip=192.168.0.1-192.168.0.254 @src_ip=10.0.0.1-10.0.0.254
+#
+#    .activatefilter disable_delete_purge
+#
+#    map http://foo.example.com/ http://bar.example.com/
+#
+#    .activatefilter internal_only
+#    map http://www.example.com/admin http://internal.example.com/admin
+#    .deactivatefilter internal_only
+#
+#    map http://www.example.com/ http://internal.example.com/
+#
+#
+#  Regex support: Regular expressions can be specified in the rules with the
+#  following limitations:
+#
+#  1) Only the host field can have regexes - the scheme, port and other
+#     fields cannot.
+#  2) The number of capturing sub-patterns is limited to 9;
+#     this means $0 through $9 can be used as substitution place holders ($0
+#     will be the entire input string)
+#  3) The number of substitutions in the expansion string is limited to 10.
+#
diff -uNr ats_etc_init/socks.config_1 ats1_etc_dest/socks.config_1
--- ats_etc_init/socks.config_1	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/socks.config_1	2017-06-28 03:07:04.327571991 +0000
@@ -0,0 +1,49 @@
+#
+#
+# socks.config format:
+# File consists of several lines. Each line can be a maximum of 400
+# chars.
+#
+# We will not use SOCKS for addresses specified using no_socks.
+# Any line whose first string is "no_socks" must be of the following
+# format:
+# no_socks <comma separated list of IPADDRESS and/or IPADDRESS_RANGE>
+# IPADDRESS is x1.x2.x3.x4
+# IPADDRESS_RANGE is x1.x2.x3.x4 - y1.y2.y3.y4
+#
+
+no_socks   123.14.15.1 - 123.14.17.4, 113.14.18.2
+no_socks   123.14.30.1 - 123.14.63.4, 122.43.15.2
+no_socks   123.14.84.1 - 123.14.89.4, 109.32.15.2
+
+#
+# Authentication for SOCKS 5
+# We currently support Username/Password authentication
+# Format for username/password used by traffic_server when it connects to
+# the SOCKS server:
+#   auth u <user_name> <pasword>
+# The letter u says it is of type username/password. 
+# e.g:
+#   auth u traffic_server inktomi
+#
+# specifying multiple parents based on ip addresses
+#
+# specification is same as for parents (see parent.config and documentation
+# for parent.config).
+# The main differences:
+# 	This supports only "dest_ip" as the primary specifier
+#       This supports only "parent" and "round_robin" as the secondary specifiers
+#
+# examples:
+#
+# The following rule uses internal.exaple.com:1080 as the socks server all
+# destination addresses between 10.0.0.0 and 10.255.255.255
+#
+# dest_ip=10.0.0.0-10.255.255.255 parent="internal.example.com:1080"
+#
+# The following uses socks1 (at port 4080) and socks2 (at port 1080) alternately
+# (round-robin).
+#
+# dest_ip=216.32.0.0-216.32.255.255 parent="socks1:4080; socks2:1080" round_robin=strict
+#
+########################################################################################
diff -uNr ats_etc_init/socks.config.default ats1_etc_dest/socks.config.default
--- ats_etc_init/socks.config.default	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/socks.config.default	2017-06-28 03:07:04.340572351 +0000
@@ -0,0 +1,49 @@
+#
+#
+# socks.config format:
+# File consists of several lines. Each line can be a maximum of 400
+# chars.
+#
+# We will not use SOCKS for addresses specified using no_socks.
+# Any line whose first string is "no_socks" must be of the following
+# format:
+# no_socks <comma separated list of IPADDRESS and/or IPADDRESS_RANGE>
+# IPADDRESS is x1.x2.x3.x4
+# IPADDRESS_RANGE is x1.x2.x3.x4 - y1.y2.y3.y4
+#
+
+no_socks   123.14.15.1 - 123.14.17.4, 113.14.18.2
+no_socks   123.14.30.1 - 123.14.63.4, 122.43.15.2
+no_socks   123.14.84.1 - 123.14.89.4, 109.32.15.2
+
+#
+# Authentication for SOCKS 5
+# We currently support Username/Password authentication
+# Format for username/password used by traffic_server when it connects to
+# the SOCKS server:
+#   auth u <user_name> <pasword>
+# The letter u says it is of type username/password. 
+# e.g:
+#   auth u traffic_server inktomi
+#
+# specifying multiple parents based on ip addresses
+#
+# specification is same as for parents (see parent.config and documentation
+# for parent.config).
+# The main differences:
+# 	This supports only "dest_ip" as the primary specifier
+#       This supports only "parent" and "round_robin" as the secondary specifiers
+#
+# examples:
+#
+# The following rule uses internal.exaple.com:1080 as the socks server all
+# destination addresses between 10.0.0.0 and 10.255.255.255
+#
+# dest_ip=10.0.0.0-10.255.255.255 parent="internal.example.com:1080"
+#
+# The following uses socks1 (at port 4080) and socks2 (at port 1080) alternately
+# (round-robin).
+#
+# dest_ip=216.32.0.0-216.32.255.255 parent="socks1:4080; socks2:1080" round_robin=strict
+#
+########################################################################################
diff -uNr ats_etc_init/splitdns.config_1 ats1_etc_dest/splitdns.config_1
--- ats_etc_init/splitdns.config_1	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/splitdns.config_1	2017-06-28 03:07:04.255565780 +0000
@@ -0,0 +1,58 @@
+#
+# splitdns.config
+#
+#
+# The purpose of this file is to specify the dns server for
+#   specific objects or sets of objects.
+#
+# Each line consists of a set of tag value pairs.  The pairs
+#   are in the format  <tag>=<value>. Please note that there
+#   should not be any spaces in the specifiers.
+# 
+# Each line must include exactly one primary specifier
+#
+#   Primary destination specifiers are
+#     dest_domain=
+#     dest_host=
+#     url_regex=
+#
+#
+# Available server directives are:
+# Required:
+#     named=       ( required; a DNS server; port may be included,
+#                    separated by ':'. If none provided, the default
+#                    port used is 53. Multiple DNS server may be 
+#                    specified, separated by spaces or ';'. The
+#                    DNS servers are required to be in ip address 
+#                    format )
+#
+# Optional:          
+#     def_domain=  ( optional;  when provided, only one default
+#                    may be listed on the line )
+#
+#     search_list= ( optional; however, if provided, requires at 
+#                    least one search domain. If an organization
+#                    has multiple zones, they may be specified, 
+#                    separated by spaces or ';'.  )
+# 
+# Each line must include at least a named= directive with an IP address
+# in the "dot" format. "def_domain=" and "search_list=" are optional.
+#
+# Additional notes:
+#
+# For improved performance, the system has a 'fast path', which is activated
+# when all the primary destination specifiers are of the type 
+# 'dest_domain' or 'dest_host'. It also requires that the number of rules
+# not exceed four (4). One of the side effect of this is, the first match
+# will terminate the search.
+#
+# If a host name is not fully qualified, i.e. does not have the domain 
+# specifier (ex. 'internal' instead of internal.example.com'), then
+# there is no rule using the primary destination specifier 'url_regex'. 
+#
+#    
+# Example:
+#
+#dest_domain=int.ik.com named="255.257..." def_domain="int.ik.com" search_list="int.ik.com mkt.ik.com"
+#dest_domain=!int.ik.com named="255.25..." def_domain="ik.com"
+
diff -uNr ats_etc_init/splitdns.config.default ats1_etc_dest/splitdns.config.default
--- ats_etc_init/splitdns.config.default	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/splitdns.config.default	2017-06-28 03:07:04.335572215 +0000
@@ -0,0 +1,58 @@
+#
+# splitdns.config
+#
+#
+# The purpose of this file is to specify the dns server for
+#   specific objects or sets of objects.
+#
+# Each line consists of a set of tag value pairs.  The pairs
+#   are in the format  <tag>=<value>. Please note that there
+#   should not be any spaces in the specifiers.
+# 
+# Each line must include exactly one primary specifier
+#
+#   Primary destination specifiers are
+#     dest_domain=
+#     dest_host=
+#     url_regex=
+#
+#
+# Available server directives are:
+# Required:
+#     named=       ( required; a DNS server; port may be included,
+#                    separated by ':'. If none provided, the default
+#                    port used is 53. Multiple DNS server may be 
+#                    specified, separated by spaces or ';'. The
+#                    DNS servers are required to be in ip address 
+#                    format )
+#
+# Optional:          
+#     def_domain=  ( optional;  when provided, only one default
+#                    may be listed on the line )
+#
+#     search_list= ( optional; however, if provided, requires at 
+#                    least one search domain. If an organization
+#                    has multiple zones, they may be specified, 
+#                    separated by spaces or ';'.  )
+# 
+# Each line must include at least a named= directive with an IP address
+# in the "dot" format. "def_domain=" and "search_list=" are optional.
+#
+# Additional notes:
+#
+# For improved performance, the system has a 'fast path', which is activated
+# when all the primary destination specifiers are of the type 
+# 'dest_domain' or 'dest_host'. It also requires that the number of rules
+# not exceed four (4). One of the side effect of this is, the first match
+# will terminate the search.
+#
+# If a host name is not fully qualified, i.e. does not have the domain 
+# specifier (ex. 'internal' instead of internal.example.com'), then
+# there is no rule using the primary destination specifier 'url_regex'. 
+#
+#    
+# Example:
+#
+#dest_domain=int.ik.com named="255.257..." def_domain="int.ik.com" search_list="int.ik.com mkt.ik.com"
+#dest_domain=!int.ik.com named="255.25..." def_domain="ik.com"
+
diff -uNr ats_etc_init/ssl_multicert.config_1 ats1_etc_dest/ssl_multicert.config_1
--- ats_etc_init/ssl_multicert.config_1	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/ssl_multicert.config_1	2017-06-28 03:07:04.340572350 +0000
@@ -0,0 +1,63 @@
+#
+# ssl_multicert.config
+#
+# Allows a TLS certificate and private key to be tied to a specific
+# hostname or IP address. At load time, the certificate is parsed to
+# extract the subject CN and all the DNS subjectAltNames.  The
+# certificate will be presented for connections requesting any of the
+# hostnames found in the certificate. Wildcard names in the certificates
+# are supported, but only of the form '*.domain.com', ie. where '*' 
+# is the leftmost domain component.
+#
+# The certificate file path, CA path and key path specified in
+# records.config will be used for all certificates, CAs and keys
+# specified here.
+#
+# Fields:
+#
+# dest_ip=ADDRESS
+#   The IP (v4 or v6) address that the certificate should be presented
+#   on. This is now only used as a fallback in the case that the TLS
+#   SubjectNameIndication extension is not supported. If ADDRESS is
+#   '*', the certificate will be used as the default fallback if no
+#   other match can be made.
+#
+#   The address specified here can contain a port specifier, in which
+#   case the corresponding certificate will only match for connections
+#   accepted on the specified port. IPv6 addresses must be enclosed by
+#   square brackets if they have a port, eg, [::1]:80.
+#
+# ssl_key_name=FILENAME
+#   The name of the file containing the private key for this certificate.
+#   If the key is contained in the certificate file, this field can be
+#   omitted.
+#
+# ssl_ca_name=FILENAME
+#   If your certificates have different Certificate Authorities, you
+#   can optionally specify the corresponding file here.
+#
+# ssl_cert_name=FILENAME
+#   The name of the file containing the TLS certificate. This is the
+#   only field that is required to be present.
+#
+# ssl_key_dialog=[builtin|exec:/path/to/program]
+#   Method used to provide a pass phrase for encrypted private keys.
+#   Two options are supported: builtin and exec
+#     builtin - Requests passphrase via stdin/stdout. Useful for debugging.
+#     exec: - Executes a program and uses the stdout output for the pass
+#       phrase.
+#
+# action=[tunnel]
+#   If the tunnel matches this line, traffic server will not participate
+#   in the handshake.  But rather it will blind tunnel the SSL connection.
+#   If the connection is identified by server name, an openSSL patch must
+#   be applied to enable this functionality.  See TS-3006 for details.
+#
+# Examples:
+#   ssl_cert_name=foo.pem
+#   dest_ip=*	ssl_cert_name=bar.pem ssl_key_name=barKey.pem
+#   dest_ip=209.131.48.79	ssl_cert_name=server.pem ssl_key_name=serverKey.pem
+#   dest_ip=10.0.0.1:99 ssl_cert_name=port99.pem
+#   ssl_cert_name=foo.pem ssl_key_dialog="exec:/usr/bin/mypass foo 'ba r'"
+#   ssl_cert_name=foo.pem action=tunnel
+#   ssl_cert_name=wildcardcert.pem ssl_key_name=privkey.pem
diff -uNr ats_etc_init/ssl_multicert.config.default ats1_etc_dest/ssl_multicert.config.default
--- ats_etc_init/ssl_multicert.config.default	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/ssl_multicert.config.default	2017-06-28 03:07:04.253565560 +0000
@@ -0,0 +1,63 @@
+#
+# ssl_multicert.config
+#
+# Allows a TLS certificate and private key to be tied to a specific
+# hostname or IP address. At load time, the certificate is parsed to
+# extract the subject CN and all the DNS subjectAltNames.  The
+# certificate will be presented for connections requesting any of the
+# hostnames found in the certificate. Wildcard names in the certificates
+# are supported, but only of the form '*.domain.com', ie. where '*' 
+# is the leftmost domain component.
+#
+# The certificate file path, CA path and key path specified in
+# records.config will be used for all certificates, CAs and keys
+# specified here.
+#
+# Fields:
+#
+# dest_ip=ADDRESS
+#   The IP (v4 or v6) address that the certificate should be presented
+#   on. This is now only used as a fallback in the case that the TLS
+#   SubjectNameIndication extension is not supported. If ADDRESS is
+#   '*', the certificate will be used as the default fallback if no
+#   other match can be made.
+#
+#   The address specified here can contain a port specifier, in which
+#   case the corresponding certificate will only match for connections
+#   accepted on the specified port. IPv6 addresses must be enclosed by
+#   square brackets if they have a port, eg, [::1]:80.
+#
+# ssl_key_name=FILENAME
+#   The name of the file containing the private key for this certificate.
+#   If the key is contained in the certificate file, this field can be
+#   omitted.
+#
+# ssl_ca_name=FILENAME
+#   If your certificates have different Certificate Authorities, you
+#   can optionally specify the corresponding file here.
+#
+# ssl_cert_name=FILENAME
+#   The name of the file containing the TLS certificate. This is the
+#   only field that is required to be present.
+#
+# ssl_key_dialog=[builtin|exec:/path/to/program]
+#   Method used to provide a pass phrase for encrypted private keys.
+#   Two options are supported: builtin and exec
+#     builtin - Requests passphrase via stdin/stdout. Useful for debugging.
+#     exec: - Executes a program and uses the stdout output for the pass
+#       phrase.
+#
+# action=[tunnel]
+#   If the tunnel matches this line, traffic server will not participate
+#   in the handshake.  But rather it will blind tunnel the SSL connection.
+#   If the connection is identified by server name, an openSSL patch must
+#   be applied to enable this functionality.  See TS-3006 for details.
+#
+# Examples:
+#   ssl_cert_name=foo.pem
+#   dest_ip=*	ssl_cert_name=bar.pem ssl_key_name=barKey.pem
+#   dest_ip=209.131.48.79	ssl_cert_name=server.pem ssl_key_name=serverKey.pem
+#   dest_ip=10.0.0.1:99 ssl_cert_name=port99.pem
+#   ssl_cert_name=foo.pem ssl_key_dialog="exec:/usr/bin/mypass foo 'ba r'"
+#   ssl_cert_name=foo.pem action=tunnel
+#   ssl_cert_name=wildcardcert.pem ssl_key_name=privkey.pem
diff -uNr ats_etc_init/stats.config.xml_1 ats1_etc_dest/stats.config.xml_1
--- ats_etc_init/stats.config.xml_1	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/stats.config.xml_1	2017-06-28 03:07:04.237563512 +0000
@@ -0,0 +1,1959 @@
+<?xml version="1.0" standalone="no"?>
+ 
+<!DOCTYPE ink:statistics SYSTEM "stats.config.dtd">
+
+<!-- Traffic Server's namespace: ink -->
+<ink:statistics xmlns:ink='http://trafficserver.apache.com/'>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.http.user_agents_total_documents_served</destination>
+        <destination scope="cluster">proxy.cluster.http.user_agents_total_documents_served</destination>
+        <expression>
+            proxy.process.http.incoming_requests
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.http.user_agents_total_transactions_count</destination>
+        <destination scope="cluster">proxy.cluster.http.user_agents_total_transactions_count</destination>
+        <expression>
+            proxy.process.http.incoming_requests
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.http.origin_server_total_transactions_count</destination>
+        <destination scope="cluster">proxy.cluster.http.origin_server_total_transactions_count</destination>
+        <expression>
+            proxy.process.http.outgoing_requests
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.http.cache_current_connections_count</destination>
+        <destination scope="cluster">proxy.cluster.http.cache_current_connections_count</destination>
+        <expression>
+            proxy.process.http.current_cache_connections
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.http.user_agent_current_connections_count</destination>
+        <destination scope="cluster">proxy.cluster.http.user_agent_current_connections_count</destination>
+        <expression>
+            proxy.process.http.current_client_connections
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.http.origin_server_current_connections_count</destination>
+        <destination scope="cluster">proxy.cluster.http.origin_server_current_connections_count</destination>
+        <expression>
+            proxy.process.http.current_server_connections
+        </expression>
+    </statistics>
+
+    <!-- Cache -->
+    <statistics
+	minimum="0">
+        <destination>proxy.node.cache.bytes_total</destination>
+        <expression>
+            proxy.process.cache.bytes_total
+        </expression>
+    </statistics>
+
+
+    <!-- DNS -->
+    <statistics
+	minimum="0">
+        <destination>proxy.node.dns.total_dns_lookups</destination>
+        <destination scope="cluster">proxy.cluster.dns.total_dns_lookups</destination> 
+        <expression>
+            proxy.process.dns.total_dns_lookups
+        </expression>
+    </statistics>
+
+
+    <!-- HostDB -->
+    <statistics
+	minimum="0">
+        <destination>proxy.node.hostdb.total_lookups</destination>
+        <expression>
+            proxy.process.hostdb.total_lookups
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.hostdb.total_hits</destination>
+        <expression>
+            proxy.process.hostdb.total_hits
+        </expression>
+    </statistics>
+
+
+    <!-- Cluster -->
+    <statistics
+	minimum="0">
+        <destination>proxy.node.cluster.nodes</destination>
+        <expression>
+            proxy.process.cluster.nodes
+        </expression>
+    </statistics>
+
+
+	<!-- ########################################################################### -->
+    <!-- StatAggregation::Ag_XactsPerSecond() -->
+    <statistics
+        interval="10"
+	minimum="0">
+        <destination>proxy.node.http.user_agent_xacts_per_second</destination>
+        <destination scope="cluster">proxy.cluster.http.user_agent_xacts_per_second</destination>
+        <expression>
+            #proxy.process.http.incoming_requests *
+            $HRTIME_SECOND                  /
+            _DIFFTIME
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.user_agent_xacts_per_second</destination>
+        <destination scope="cluster">proxy.cluster.user_agent_xacts_per_second</destination>
+        <expression>
+            proxy.node.http.user_agent_xacts_per_second 
+        </expression>
+    </statistics>
+
+  
+	<!-- ########################################################################### -->
+    <!-- StatAggregation::Ag_TotalDocumentsServed() -->
+    <statistics
+	minimum="0">
+        <destination>proxy.node.user_agents_total_documents_served</destination>
+        <expression>
+            proxy.node.http.user_agents_total_documents_served
+        </expression>
+    </statistics>
+
+
+	<!-- ########################################################################### -->
+    <!-- StatAggregation::Ag_DnsLookupsPerSecond() -->
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.dns.lookups_per_second</destination>
+        <destination scope="cluster">proxy.cluster.dns.lookups_per_second</destination>
+        <expression>
+            #proxy.process.dns.total_dns_lookups *
+            $HRTIME_SECOND  /
+            _DIFFTIME
+        </expression>
+    </statistics>
+
+
+	<!-- ########################################################################### -->
+    <!-- StatAggregation::Ag_HostdbHitRate() -->
+    <statistics
+        minimum="0"
+        interval="10">
+        <destination>proxy.node.hostdb.total_lookups_avg_10s</destination>
+        <destination scope="cluster" operation="re-calculate">proxy.cluster.hostdb.total_lookups_avg_10s</destination>
+        <expression>
+            #proxy.process.hostdb.total_lookups
+        </expression>
+    </statistics>
+
+
+    <statistics
+        minimum="0"
+        interval="10">
+        <destination>proxy.node.hostdb.total_hits_avg_10s</destination>
+        <destination scope="cluster" operation="re-calculate">proxy.cluster.hostdb.total_hits_avg_10s</destination>
+        <expression>
+            #proxy.process.hostdb.total_hits
+        </expression>
+    </statistics>
+
+
+    <statistics
+        minimum="0"
+        maximum="100"
+        interval="10">
+       <destination>proxy.node.hostdb.hit_ratio_avg_10s</destination>
+        <destination scope="cluster" operation="re-calculate">proxy.cluster.hostdb.hit_ratio_avg_10s</destination>
+        <expression>
+            proxy.node.hostdb.total_hits_avg_10s    /
+            proxy.node.hostdb.total_lookups_avg_10s
+        </expression>
+    </statistics>
+
+
+    <statistics
+        minimum="0"
+        maximum="100">
+        <destination>proxy.node.hostdb.hit_ratio</destination>
+        <expression>
+            proxy.process.hostdb.total_hits    /
+            proxy.process.hostdb.total_lookups
+        </expression>
+    </statistics>
+
+
+	<!-- ########################################################################### -->
+    <!-- StatAggregation::Ag_Bytes() -->
+    <statistics>
+        <destination>proxy.node.http.user_agent_total_request_bytes</destination>
+        <destination scope="cluster">proxy.cluster.http.user_agent_total_request_bytes</destination>
+       <expression>
+            proxy.process.http.user_agent_request_document_total_size +
+            proxy.process.http.user_agent_request_header_total_size
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.http.user_agent_total_response_bytes</destination>
+        <destination scope="cluster">proxy.cluster.http.user_agent_total_response_bytes</destination>
+       <expression>
+            proxy.process.http.user_agent_response_document_total_size +
+            proxy.process.http.user_agent_response_header_total_size
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.http.origin_server_total_request_bytes</destination>
+        <destination scope="cluster">proxy.cluster.http.origin_server_total_request_bytes</destination>
+        <expression>
+            proxy.process.http.origin_server_request_document_total_size +
+            proxy.process.http.origin_server_request_header_total_size
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.http.origin_server_total_response_bytes</destination>
+        <destination scope="cluster">proxy.cluster.http.origin_server_total_response_bytes</destination>
+         <expression>
+            proxy.process.http.origin_server_response_document_total_size +
+            proxy.process.http.origin_server_response_header_total_size
+        </expression>
+    </statistics>
+
+
+        <!-- add up the downstream (client<=>proxy) traffic volume -->
+    <statistics
+	minimum="0">
+        <destination>proxy.node.user_agent_total_bytes</destination>
+        <expression>
+            proxy.node.http.user_agent_total_request_bytes  +
+            proxy.node.http.user_agent_total_response_bytes
+        </expression>
+    </statistics>
+
+
+        <!-- add up the upstream (client<=>proxy) traffic volume -->
+    <statistics
+	minimum="0">
+        <destination>proxy.node.origin_server_total_bytes</destination>
+        <expression>
+            proxy.node.http.origin_server_total_request_bytes  +
+            proxy.node.http.origin_server_total_response_bytes +
+            proxy.node.http.parent_proxy_total_request_bytes   +
+            proxy.node.http.parent_proxy_total_response_bytes
+        </expression>
+    </statistics>
+
+
+        <!-- PP_bytes is missing!! -->
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.bandwidth_hit_ratio</destination>
+        <destination scope="cluster" operation="re-calculate">proxy.cluster.bandwidth_hit_ratio</destination>
+        <expression>
+            (
+            proxy.node.user_agent_total_bytes    -
+            proxy.node.origin_server_total_bytes
+            )                                    /
+            proxy.node.user_agent_total_bytes
+        </expression>
+    </statistics>
+
+
+    <statistics
+        interval="10"
+	minimum="0">
+        <destination>proxy.node.user_agent_total_bytes_avg_10s</destination>
+        <destination scope="cluster">proxy.cluster.user_agent_total_bytes_avg_10s</destination>
+        <expression>
+            #proxy.node.user_agent_total_bytes
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.origin_server_total_bytes_avg_10s</destination>
+        <destination scope="cluster">proxy.cluster.origin_server_total_bytes_avg_10s</destination>
+        <expression>
+            #proxy.node.origin_server_total_bytes
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.bandwidth_hit_ratio_avg_10s</destination>
+        <destination scope="cluster" operation="re-calculate">proxy.cluster.bandwidth_hit_ratio_avg_10s</destination>
+        <expression>
+            (
+            proxy.node.user_agent_total_bytes_avg_10s    -
+            proxy.node.origin_server_total_bytes_avg_10s
+            )                                            /
+            proxy.node.user_agent_total_bytes_avg_10s
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100"
+        interval="10">
+        <destination>proxy.node.bandwidth_hit_ratio_avg_10s_int_pct</destination>
+        <expression>
+            proxy.node.bandwidth_hit_ratio_avg_10s *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+	<!-- ########################################################################### -->
+    <!-- StatAggregation::Ag_Throughput() -->
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.throughput</destination>
+        <destination scope="cluster">proxy.cluster.http.throughput</destination> 
+        <expression>
+            (
+            #proxy.node.http.user_agent_total_response_bytes
+            )                                                *
+            $HRTIME_SECOND                                   /
+            _DIFFTIME
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.client_throughput_out</destination>
+        <destination scope="cluster">proxy.cluster.client_throughput_out</destination>
+        <expression>
+            proxy.node.http.throughput *
+            $BYTES_TO_MBIT_SCALE
+        </expression>
+    </statistics>
+
+
+	<!-- ########################################################################### -->
+    <!-- StatAggregation::Ag_cacheHits() -->
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.cache_hit_fresh_avg_10s</destination>
+        <expression>
+            #proxy.process.http.cache_hit_fresh
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.cache_hit_mem_fresh_avg_10s</destination>
+        <expression>
+            #proxy.process.http.cache_hit_mem_fresh
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.cache_hit_revalidated_avg_10s</destination>
+        <expression>
+            #proxy.process.http.cache_hit_revalidated
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.cache_hit_ims_avg_10s</destination>
+        <expression>
+            #proxy.process.http.cache_hit_ims
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.cache_hit_stale_served_avg_10s</destination>
+        <expression>
+            #proxy.process.http.cache_hit_stale_served
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.cache_miss_cold_avg_10s</destination>
+        <expression>
+            #proxy.process.http.cache_miss_cold
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.cache_miss_changed_avg_10s</destination>
+        <expression>
+            #proxy.process.http.cache_miss_changed
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.cache_miss_not_cacheable_avg_10s</destination>
+        <expression>
+            #proxy.process.http.cache_miss_not_cacheable
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.cache_miss_client_no_cache_avg_10s</destination>
+        <expression>
+            #proxy.process.http.cache_miss_client_no_cache
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.cache_miss_ims_avg_10s</destination>
+        <expression>
+            #proxy.process.http.cache_miss_ims
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.cache_read_error_avg_10s</destination>
+        <expression>
+            #proxy.process.http.cache_read_error
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.cache_total_hits_avg_10s</destination>
+        <destination scope="cluster">proxy.cluster.cache_total_hits_avg_10s</destination>
+        <expression>
+            proxy.node.http.cache_hit_fresh_avg_10s        +
+            proxy.node.http.cache_hit_revalidated_avg_10s  +
+            proxy.node.http.cache_hit_ims_avg_10s          +
+            proxy.node.http.cache_hit_stale_served_avg_10s
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.cache_total_hits_mem_avg_10s</destination>
+        <destination scope="cluster">proxy.cluster.cache_total_hits_mem_avg_10s</destination>
+        <expression>
+            proxy.node.http.cache_hit_mem_fresh_avg_10s
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.cache_total_misses_avg_10s</destination>
+        <destination scope="cluster">proxy.cluster.cache_total_misses_avg_10s</destination>
+        <expression>
+            proxy.node.http.cache_miss_cold_avg_10s            +
+            proxy.node.http.cache_miss_changed_avg_10s         +
+            proxy.node.http.cache_miss_not_cacheable_avg_10s   +
+            proxy.node.http.cache_miss_client_no_cache_avg_10s +
+            proxy.node.http.cache_miss_ims_avg_10s             +
+            proxy.node.http.cache_read_error_avg_10s
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.cache_hit_ratio_avg_10s</destination>
+        <destination scope="cluster" operation="re-calculate">proxy.cluster.cache_hit_ratio_avg_10s</destination>
+        <expression>
+            proxy.node.cache_total_hits_avg_10s   /
+            (
+            proxy.node.cache_total_hits_avg_10s   +
+            proxy.node.cache_total_misses_avg_10s
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.cache_hit_mem_ratio_avg_10s</destination>
+        <destination scope="cluster" operation="re-calculate">proxy.cluster.cache_hit_mem_ratio_avg_10s</destination>
+        <expression>
+            proxy.node.cache_total_hits_mem_avg_10s   /
+            (
+            proxy.node.cache_total_hits_avg_10s   +
+            proxy.node.cache_total_misses_avg_10s
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100"
+        interval="10">
+        <destination>proxy.node.cache_hit_ratio_avg_10s_int_pct</destination>
+        <expression>
+	    proxy.node.cache_hit_ratio_avg_10s *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100"
+        interval="10">
+        <destination>proxy.node.cache_hit_mem_ratio_avg_10s_int_pct</destination>
+        <expression>
+	    proxy.node.cache_hit_mem_ratio_avg_10s *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.cache_total_hits</destination>
+        <destination scope="cluster">proxy.cluster.cache_total_hits</destination>
+        <expression>
+            proxy.process.http.cache_hit_fresh        +
+            proxy.process.http.cache_hit_revalidated  +
+            proxy.process.http.cache_hit_ims          +
+            proxy.process.http.cache_hit_stale_served
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.cache_total_hits_mem</destination>
+        <destination scope="cluster">proxy.cluster.cache_total_hits_mem</destination>
+        <expression>
+            proxy.process.http.cache_hit_mem_fresh
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.cache_total_misses</destination>
+        <destination scope="cluster">proxy.cluster.cache_total_misses</destination>
+        <expression>
+            proxy.process.http.cache_miss_cold            +
+            proxy.process.http.cache_miss_changed         +
+            proxy.process.http.cache_miss_not_cacheable   +
+            proxy.process.http.cache_miss_client_no_cache +
+            proxy.process.http.cache_miss_ims             +
+            proxy.process.http.cache_read_error
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.cache_hit_ratio</destination>
+        <destination scope="cluster" operation="re-calculate">proxy.cluster.cache_hit_ratio</destination>
+        <expression>
+            proxy.node.cache_total_hits   /
+            (
+            proxy.node.cache_total_hits   +
+            proxy.node.cache_total_misses
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.cache_hit_mem_ratio</destination>
+        <destination scope="cluster" operation="re-calculate">proxy.cluster.cache_hit_mem_ratio</destination>
+        <expression>
+            proxy.node.cache_total_hits_mem   /
+            (
+            proxy.node.cache_total_hits   +
+            proxy.node.cache_total_misses
+            )
+        </expression>
+    </statistics>
+
+	<!-- ########################################################################### -->
+    <!-- StatAggregation::Ag_cachePercent() -->
+    <statistics
+	minimum="0">
+        <destination>proxy.node.cache.bytes_free</destination>
+        <expression>
+            proxy.process.cache.bytes_total -
+            proxy.process.cache.bytes_used
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.cache.percent_free</destination>
+        <destination scope="cluster">proxy.cluster.cache.percent_free</destination>
+        <expression>
+            proxy.node.cache.bytes_free /
+            proxy.process.cache.bytes_total
+        </expression>
+    </statistics>
+
+
+	<!-- ########################################################################### -->
+    <!-- StatAggregation::Ag_TransactionPercentsAndMeanTimes() -->
+        <!-- counts_names -->
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.hit_fresh</destination>                            
+        <expression>
+            #proxy.process.http.transaction_counts.hit_fresh
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.hit_revalidated</destination>                      
+        <expression>
+            #proxy.process.http.transaction_counts.hit_revalidated
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.miss_cold</destination>                            
+        <expression>
+            #proxy.process.http.transaction_counts.miss_cold
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.miss_changed</destination>                         
+        <expression>
+            #proxy.process.http.transaction_counts.miss_changed
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache</destination>                 
+        <expression>
+            #proxy.process.http.transaction_counts.miss_client_no_cache
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable</destination>                   
+        <expression>
+            #proxy.process.http.transaction_counts.miss_not_cacheable
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.errors.connect_failed</destination>                
+        <expression>
+            #proxy.process.http.transaction_counts.errors.connect_failed
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.errors.aborts</destination>                        
+        <expression>
+            #proxy.process.http.transaction_counts.errors.aborts
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts</destination>               
+        <expression>
+            #proxy.process.http.transaction_counts.errors.possible_aborts
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups</destination>
+        <expression>
+            #proxy.process.http.transaction_counts.errors.pre_accept_hangups
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.errors.early_hangups</destination>                 
+        <expression>
+            #proxy.process.http.transaction_counts.errors.early_hangups
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups</destination>                 
+        <expression>
+            #proxy.process.http.transaction_counts.errors.empty_hangups
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.errors.other</destination>                         
+        <expression>
+            #proxy.process.http.transaction_counts.errors.other
+        </expression>
+    </statistics>
+
+
+        <!-- StatAggregation.cc::frac_names() -->
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.hit_fresh</destination>                            
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.hit_revalidated</destination>                      
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.miss_cold</destination>                            
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.miss_cold /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.miss_changed</destination>
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.miss_changed /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.miss_client_no_cache</destination>                 
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.miss_not_cacheable</destination>
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.connect_failed</destination>                
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.aborts</destination>                        
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.possible_aborts</destination>               
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.pre_accept_hangups</destination>
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.early_hangups</destination>                 
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.empty_hangups</destination>                 
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.other</destination>
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.errors.other /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+        <!-- frac_int_names -->
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.hit_fresh_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.hit_fresh *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.hit_revalidated_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.hit_revalidated *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.miss_cold_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.miss_cold *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.miss_changed_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.miss_changed *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.miss_client_no_cache_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.miss_client_no_cache *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.miss_not_cacheable_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.miss_not_cacheable *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.connect_failed_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.errors.connect_failed *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.aborts_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.errors.aborts *
+            $PCT_TO_INTPCT_SCALE
+       </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.possible_aborts_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.errors.possible_aborts *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.pre_accept_hangups_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.errors.pre_accept_hangups *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.early_hangups_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.errors.early_hangups *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.empty_hangups_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.errors.empty_hangups *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.other_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.errors.other *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+        <!-- avgtime_names -->
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.hit_fresh</destination>
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE                  *
+            #proxy.process.http.transaction_totaltime.hit_fresh /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.hit_revalidated</destination>                      
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE         *
+            #proxy.process.http.transaction_totaltime.hit_revalidated /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.miss_cold</destination>                            
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE   *
+            #proxy.process.http.transaction_totaltime.miss_cold /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.miss_changed</destination>                         
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE      *
+            #proxy.process.http.transaction_totaltime.miss_changed /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.miss_client_no_cache</destination>                 
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE              *
+            #proxy.process.http.transaction_totaltime.miss_client_no_cache /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.miss_not_cacheable</destination>                   
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE            *
+            #proxy.process.http.transaction_totaltime.miss_not_cacheable /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.errors.connect_failed</destination>                
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE               *
+            #proxy.process.http.transaction_totaltime.errors.connect_failed /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.errors.aborts</destination>                        
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE       *
+            #proxy.process.http.transaction_totaltime.errors.aborts /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.errors.possible_aborts</destination>               
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE                *
+            #proxy.process.http.transaction_totaltime.errors.possible_aborts /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.errors.pre_accept_hangups</destination>
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE                   *
+            #proxy.process.http.transaction_totaltime.errors.pre_accept_hangups /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.errors.early_hangups</destination>                 
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE              *
+            #proxy.process.http.transaction_totaltime.errors.early_hangups /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.errors.empty_hangups</destination>                 
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE              *
+            #proxy.process.http.transaction_totaltime.errors.empty_hangups /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.errors.other</destination>                         
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE      *
+            #proxy.process.http.transaction_totaltime.errors.other /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+	<!-- ########################################################################### -->
+    <!-- StatAggregation::Ag_Connections() -->
+    <statistics
+	minimum="0">
+        <destination>proxy.node.current_client_connections</destination>
+        <destination scope="cluster">proxy.cluster.current_client_connections</destination>
+        <expression>
+            proxy.node.http.user_agent_current_connections_count
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.current_server_connections</destination>
+        <destination scope="cluster">proxy.cluster.current_server_connections</destination>
+        <expression>
+            proxy.node.http.origin_server_current_connections_count +
+            proxy.node.http.current_parent_proxy_connections
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.current_cache_connections</destination>
+        <destination scope="cluster">proxy.cluster.current_cache_connections</destination>
+        <expression>
+            proxy.node.http.cache_current_connections_count
+        </expression>
+    </statistics>
+
+
+    <!-- Others -->
+    <statistics
+	minimum="0">
+        <destination>proxy.node.client_throughput_out_kbit</destination>
+        <destination scope="cluster">proxy.cluster.client_throughput_out_kbit</destination>
+        <expression>
+            proxy.node.client_throughput_out *
+            $MBIT_TO_KBIT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.cache_hit_ratio_int_pct</destination>
+        <destination scope="cluster">proxy.cluster.cache_hit_ratio_int_pct</destination>
+        <expression>
+            proxy.node.cache_hit_ratio *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.cache_hit_mem_ratio_int_pct</destination>
+        <destination scope="cluster">proxy.cluster.cache_hit_mem_ratio_int_pct</destination>
+        <expression>
+            proxy.node.cache_hit_mem_ratio *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.bandwidth_hit_ratio_int_pct</destination>
+        <destination scope="cluster">proxy.cluster.bandwidth_hit_ratio_int_pct</destination>
+        <expression>
+            proxy.node.bandwidth_hit_ratio *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.cache.percent_free_int_pct</destination>
+        <destination scope="cluster">proxy.cluster.cache.percent_free_int_pct</destination>
+        <expression>
+            proxy.node.cache.percent_free *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.hostdb.hit_ratio_int_pct</destination>
+        <destination scope="cluster">proxy.cluster.hostdb.hit_ratio_int_pct</destination>
+        <expression>
+            proxy.node.hostdb.hit_ratio *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.cache.bytes_total_mb</destination>
+        <expression>
+            proxy.process.cache.bytes_total *
+            $BYTES_TO_MB_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.cache.bytes_free_mb</destination>
+        <expression>
+            proxy.node.cache.bytes_free *
+            $BYTES_TO_MB_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.cluster.cache.bytes_free_mb</destination>
+        <expression>
+            proxy.cluster.cache.bytes_free *
+            $BYTES_TO_MB_SCALE
+        </expression>
+    </statistics>
+
+
+<!-- -->
+
+    <statistics
+	minimum="0">
+        <destination scope="cluster">proxy.cluster.http.current_parent_proxy_connections</destination>
+        <expression>
+            proxy.node.http.current_parent_proxy_connections
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination scope="cluster">proxy.cluster.http.parent_proxy_total_request_bytes</destination>
+        <expression>
+        proxy.node.http.parent_proxy_total_request_bytes
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination scope="cluster">proxy.cluster.http.parent_proxy_total_response_bytes</destination>
+        <expression>
+             proxy.node.http.parent_proxy_total_response_bytes
+        </expression>
+    </statistics>
+
+    <!-- Logging -->
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.event_log_access_ok</destination>
+	<destination scope="cluster">proxy.cluster.log.event_log_access_ok</destination>
+        <expression>
+	    proxy.process.log.event_log_access_ok
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.event_log_access_skip</destination>
+	<destination scope="cluster">proxy.cluster.log.event_log_access_skip</destination>
+        <expression>
+	    proxy.process.log.event_log_access_skip
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.event_log_access_aggr</destination>
+	<destination scope="cluster">proxy.cluster.log.event_log_access_aggr</destination>
+        <expression>
+	    proxy.process.log.event_log_access_aggr
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.event_log_access_full</destination>
+	<destination scope="cluster">proxy.cluster.log.event_log_access_full</destination>
+        <expression>
+            proxy.process.log.event_log_access_full
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.event_log_access_fail</destination>
+	<destination scope="cluster">proxy.cluster.log.event_log_access_fail</destination>
+        <expression>
+            proxy.process.log.event_log_access_fail
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.num_lost_before_sent_to_network</destination>
+	<destination scope="cluster">proxy.cluster.log.num_lost_before_sent_to_network</destination>
+        <expression>
+            proxy.process.log.num_lost_before_sent_to_network
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.num_sent_to_network</destination>
+	<destination scope="cluster">proxy.cluster.log.num_sent_to_network</destination>
+        <expression>
+            proxy.process.log.num_sent_to_network
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.bytes_lost_before_sent_to_network</destination>
+	<destination scope="cluster">proxy.cluster.log.bytes_lost_before_sent_to_network</destination>
+        <expression>
+            proxy.process.log.bytes_lost_before_sent_to_network
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.bytes_sent_to_network</destination>
+	<destination scope="cluster">proxy.cluster.log.bytes_sent_to_network</destination>
+        <expression>
+            proxy.process.log.bytes_sent_to_network
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.num_received_from_network</destination>
+	<destination scope="cluster">proxy.cluster.log.num_received_from_network</destination>
+        <expression>
+            proxy.process.log.num_received_from_network
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.bytes_received_from_network</destination>
+	<destination scope="cluster">proxy.cluster.log.bytes_received_from_network</destination>
+        <expression>
+            proxy.process.log.bytes_received_from_network
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.bytes_lost_before_preproc</destination>
+	<destination scope="cluster">proxy.cluster.log.bytes_lost_before_preproc</destination>
+        <expression>
+            proxy.process.log.bytes_lost_before_preproc
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.num_lost_before_flush_to_disk</destination>
+	<destination scope="cluster">proxy.cluster.log.num_lost_before_flush_to_disk</destination>
+        <expression>
+            proxy.process.log.num_lost_before_flush_to_disk
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.bytes_lost_before_flush_to_disk</destination>
+	<destination scope="cluster">proxy.cluster.log.bytes_lost_before_flush_to_disk</destination>
+        <expression>
+            proxy.process.log.bytes_lost_before_flush_to_disk
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.bytes_lost_before_written_to_disk</destination>
+	<destination scope="cluster">proxy.cluster.log.bytes_lost_before_written_to_disk</destination>
+        <expression>
+            proxy.process.log.bytes_lost_before_written_to_disk
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.log.bytes_sent_to_network_avg_10s</destination>
+        <destination scope="cluster">proxy.cluster.log.bytes_sent_to_network_avg_10s</destination>
+        <expression>
+            #proxy.process.log.bytes_sent_to_network
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.log.bytes_received_from_network_avg_10s</destination>
+        <destination scope="cluster">proxy.cluster.log.bytes_received_from_network_avg_10s</destination>
+        <expression>
+            #proxy.process.log.bytes_received_from_network
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.process.ssl.total_success_handshake_count_in</destination>
+        <expression>
+            proxy.process.ssl.total_success_handshake_count
+        </expression>
+    </statistics>
+
+</ink:statistics>
+
+
diff -uNr ats_etc_init/stats.config.xml.default ats1_etc_dest/stats.config.xml.default
--- ats_etc_init/stats.config.xml.default	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/stats.config.xml.default	2017-06-28 03:07:04.246564734 +0000
@@ -0,0 +1,1959 @@
+<?xml version="1.0" standalone="no"?>
+ 
+<!DOCTYPE ink:statistics SYSTEM "stats.config.dtd">
+
+<!-- Traffic Server's namespace: ink -->
+<ink:statistics xmlns:ink='http://trafficserver.apache.com/'>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.http.user_agents_total_documents_served</destination>
+        <destination scope="cluster">proxy.cluster.http.user_agents_total_documents_served</destination>
+        <expression>
+            proxy.process.http.incoming_requests
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.http.user_agents_total_transactions_count</destination>
+        <destination scope="cluster">proxy.cluster.http.user_agents_total_transactions_count</destination>
+        <expression>
+            proxy.process.http.incoming_requests
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.http.origin_server_total_transactions_count</destination>
+        <destination scope="cluster">proxy.cluster.http.origin_server_total_transactions_count</destination>
+        <expression>
+            proxy.process.http.outgoing_requests
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.http.cache_current_connections_count</destination>
+        <destination scope="cluster">proxy.cluster.http.cache_current_connections_count</destination>
+        <expression>
+            proxy.process.http.current_cache_connections
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.http.user_agent_current_connections_count</destination>
+        <destination scope="cluster">proxy.cluster.http.user_agent_current_connections_count</destination>
+        <expression>
+            proxy.process.http.current_client_connections
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.http.origin_server_current_connections_count</destination>
+        <destination scope="cluster">proxy.cluster.http.origin_server_current_connections_count</destination>
+        <expression>
+            proxy.process.http.current_server_connections
+        </expression>
+    </statistics>
+
+    <!-- Cache -->
+    <statistics
+	minimum="0">
+        <destination>proxy.node.cache.bytes_total</destination>
+        <expression>
+            proxy.process.cache.bytes_total
+        </expression>
+    </statistics>
+
+
+    <!-- DNS -->
+    <statistics
+	minimum="0">
+        <destination>proxy.node.dns.total_dns_lookups</destination>
+        <destination scope="cluster">proxy.cluster.dns.total_dns_lookups</destination> 
+        <expression>
+            proxy.process.dns.total_dns_lookups
+        </expression>
+    </statistics>
+
+
+    <!-- HostDB -->
+    <statistics
+	minimum="0">
+        <destination>proxy.node.hostdb.total_lookups</destination>
+        <expression>
+            proxy.process.hostdb.total_lookups
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.hostdb.total_hits</destination>
+        <expression>
+            proxy.process.hostdb.total_hits
+        </expression>
+    </statistics>
+
+
+    <!-- Cluster -->
+    <statistics
+	minimum="0">
+        <destination>proxy.node.cluster.nodes</destination>
+        <expression>
+            proxy.process.cluster.nodes
+        </expression>
+    </statistics>
+
+
+	<!-- ########################################################################### -->
+    <!-- StatAggregation::Ag_XactsPerSecond() -->
+    <statistics
+        interval="10"
+	minimum="0">
+        <destination>proxy.node.http.user_agent_xacts_per_second</destination>
+        <destination scope="cluster">proxy.cluster.http.user_agent_xacts_per_second</destination>
+        <expression>
+            #proxy.process.http.incoming_requests *
+            $HRTIME_SECOND                  /
+            _DIFFTIME
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.user_agent_xacts_per_second</destination>
+        <destination scope="cluster">proxy.cluster.user_agent_xacts_per_second</destination>
+        <expression>
+            proxy.node.http.user_agent_xacts_per_second 
+        </expression>
+    </statistics>
+
+  
+	<!-- ########################################################################### -->
+    <!-- StatAggregation::Ag_TotalDocumentsServed() -->
+    <statistics
+	minimum="0">
+        <destination>proxy.node.user_agents_total_documents_served</destination>
+        <expression>
+            proxy.node.http.user_agents_total_documents_served
+        </expression>
+    </statistics>
+
+
+	<!-- ########################################################################### -->
+    <!-- StatAggregation::Ag_DnsLookupsPerSecond() -->
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.dns.lookups_per_second</destination>
+        <destination scope="cluster">proxy.cluster.dns.lookups_per_second</destination>
+        <expression>
+            #proxy.process.dns.total_dns_lookups *
+            $HRTIME_SECOND  /
+            _DIFFTIME
+        </expression>
+    </statistics>
+
+
+	<!-- ########################################################################### -->
+    <!-- StatAggregation::Ag_HostdbHitRate() -->
+    <statistics
+        minimum="0"
+        interval="10">
+        <destination>proxy.node.hostdb.total_lookups_avg_10s</destination>
+        <destination scope="cluster" operation="re-calculate">proxy.cluster.hostdb.total_lookups_avg_10s</destination>
+        <expression>
+            #proxy.process.hostdb.total_lookups
+        </expression>
+    </statistics>
+
+
+    <statistics
+        minimum="0"
+        interval="10">
+        <destination>proxy.node.hostdb.total_hits_avg_10s</destination>
+        <destination scope="cluster" operation="re-calculate">proxy.cluster.hostdb.total_hits_avg_10s</destination>
+        <expression>
+            #proxy.process.hostdb.total_hits
+        </expression>
+    </statistics>
+
+
+    <statistics
+        minimum="0"
+        maximum="100"
+        interval="10">
+       <destination>proxy.node.hostdb.hit_ratio_avg_10s</destination>
+        <destination scope="cluster" operation="re-calculate">proxy.cluster.hostdb.hit_ratio_avg_10s</destination>
+        <expression>
+            proxy.node.hostdb.total_hits_avg_10s    /
+            proxy.node.hostdb.total_lookups_avg_10s
+        </expression>
+    </statistics>
+
+
+    <statistics
+        minimum="0"
+        maximum="100">
+        <destination>proxy.node.hostdb.hit_ratio</destination>
+        <expression>
+            proxy.process.hostdb.total_hits    /
+            proxy.process.hostdb.total_lookups
+        </expression>
+    </statistics>
+
+
+	<!-- ########################################################################### -->
+    <!-- StatAggregation::Ag_Bytes() -->
+    <statistics>
+        <destination>proxy.node.http.user_agent_total_request_bytes</destination>
+        <destination scope="cluster">proxy.cluster.http.user_agent_total_request_bytes</destination>
+       <expression>
+            proxy.process.http.user_agent_request_document_total_size +
+            proxy.process.http.user_agent_request_header_total_size
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.http.user_agent_total_response_bytes</destination>
+        <destination scope="cluster">proxy.cluster.http.user_agent_total_response_bytes</destination>
+       <expression>
+            proxy.process.http.user_agent_response_document_total_size +
+            proxy.process.http.user_agent_response_header_total_size
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.http.origin_server_total_request_bytes</destination>
+        <destination scope="cluster">proxy.cluster.http.origin_server_total_request_bytes</destination>
+        <expression>
+            proxy.process.http.origin_server_request_document_total_size +
+            proxy.process.http.origin_server_request_header_total_size
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.http.origin_server_total_response_bytes</destination>
+        <destination scope="cluster">proxy.cluster.http.origin_server_total_response_bytes</destination>
+         <expression>
+            proxy.process.http.origin_server_response_document_total_size +
+            proxy.process.http.origin_server_response_header_total_size
+        </expression>
+    </statistics>
+
+
+        <!-- add up the downstream (client<=>proxy) traffic volume -->
+    <statistics
+	minimum="0">
+        <destination>proxy.node.user_agent_total_bytes</destination>
+        <expression>
+            proxy.node.http.user_agent_total_request_bytes  +
+            proxy.node.http.user_agent_total_response_bytes
+        </expression>
+    </statistics>
+
+
+        <!-- add up the upstream (client<=>proxy) traffic volume -->
+    <statistics
+	minimum="0">
+        <destination>proxy.node.origin_server_total_bytes</destination>
+        <expression>
+            proxy.node.http.origin_server_total_request_bytes  +
+            proxy.node.http.origin_server_total_response_bytes +
+            proxy.node.http.parent_proxy_total_request_bytes   +
+            proxy.node.http.parent_proxy_total_response_bytes
+        </expression>
+    </statistics>
+
+
+        <!-- PP_bytes is missing!! -->
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.bandwidth_hit_ratio</destination>
+        <destination scope="cluster" operation="re-calculate">proxy.cluster.bandwidth_hit_ratio</destination>
+        <expression>
+            (
+            proxy.node.user_agent_total_bytes    -
+            proxy.node.origin_server_total_bytes
+            )                                    /
+            proxy.node.user_agent_total_bytes
+        </expression>
+    </statistics>
+
+
+    <statistics
+        interval="10"
+	minimum="0">
+        <destination>proxy.node.user_agent_total_bytes_avg_10s</destination>
+        <destination scope="cluster">proxy.cluster.user_agent_total_bytes_avg_10s</destination>
+        <expression>
+            #proxy.node.user_agent_total_bytes
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.origin_server_total_bytes_avg_10s</destination>
+        <destination scope="cluster">proxy.cluster.origin_server_total_bytes_avg_10s</destination>
+        <expression>
+            #proxy.node.origin_server_total_bytes
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.bandwidth_hit_ratio_avg_10s</destination>
+        <destination scope="cluster" operation="re-calculate">proxy.cluster.bandwidth_hit_ratio_avg_10s</destination>
+        <expression>
+            (
+            proxy.node.user_agent_total_bytes_avg_10s    -
+            proxy.node.origin_server_total_bytes_avg_10s
+            )                                            /
+            proxy.node.user_agent_total_bytes_avg_10s
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100"
+        interval="10">
+        <destination>proxy.node.bandwidth_hit_ratio_avg_10s_int_pct</destination>
+        <expression>
+            proxy.node.bandwidth_hit_ratio_avg_10s *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+	<!-- ########################################################################### -->
+    <!-- StatAggregation::Ag_Throughput() -->
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.throughput</destination>
+        <destination scope="cluster">proxy.cluster.http.throughput</destination> 
+        <expression>
+            (
+            #proxy.node.http.user_agent_total_response_bytes
+            )                                                *
+            $HRTIME_SECOND                                   /
+            _DIFFTIME
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.client_throughput_out</destination>
+        <destination scope="cluster">proxy.cluster.client_throughput_out</destination>
+        <expression>
+            proxy.node.http.throughput *
+            $BYTES_TO_MBIT_SCALE
+        </expression>
+    </statistics>
+
+
+	<!-- ########################################################################### -->
+    <!-- StatAggregation::Ag_cacheHits() -->
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.cache_hit_fresh_avg_10s</destination>
+        <expression>
+            #proxy.process.http.cache_hit_fresh
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.cache_hit_mem_fresh_avg_10s</destination>
+        <expression>
+            #proxy.process.http.cache_hit_mem_fresh
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.cache_hit_revalidated_avg_10s</destination>
+        <expression>
+            #proxy.process.http.cache_hit_revalidated
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.cache_hit_ims_avg_10s</destination>
+        <expression>
+            #proxy.process.http.cache_hit_ims
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.cache_hit_stale_served_avg_10s</destination>
+        <expression>
+            #proxy.process.http.cache_hit_stale_served
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.cache_miss_cold_avg_10s</destination>
+        <expression>
+            #proxy.process.http.cache_miss_cold
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.cache_miss_changed_avg_10s</destination>
+        <expression>
+            #proxy.process.http.cache_miss_changed
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.cache_miss_not_cacheable_avg_10s</destination>
+        <expression>
+            #proxy.process.http.cache_miss_not_cacheable
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.cache_miss_client_no_cache_avg_10s</destination>
+        <expression>
+            #proxy.process.http.cache_miss_client_no_cache
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.cache_miss_ims_avg_10s</destination>
+        <expression>
+            #proxy.process.http.cache_miss_ims
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.cache_read_error_avg_10s</destination>
+        <expression>
+            #proxy.process.http.cache_read_error
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.cache_total_hits_avg_10s</destination>
+        <destination scope="cluster">proxy.cluster.cache_total_hits_avg_10s</destination>
+        <expression>
+            proxy.node.http.cache_hit_fresh_avg_10s        +
+            proxy.node.http.cache_hit_revalidated_avg_10s  +
+            proxy.node.http.cache_hit_ims_avg_10s          +
+            proxy.node.http.cache_hit_stale_served_avg_10s
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.cache_total_hits_mem_avg_10s</destination>
+        <destination scope="cluster">proxy.cluster.cache_total_hits_mem_avg_10s</destination>
+        <expression>
+            proxy.node.http.cache_hit_mem_fresh_avg_10s
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.cache_total_misses_avg_10s</destination>
+        <destination scope="cluster">proxy.cluster.cache_total_misses_avg_10s</destination>
+        <expression>
+            proxy.node.http.cache_miss_cold_avg_10s            +
+            proxy.node.http.cache_miss_changed_avg_10s         +
+            proxy.node.http.cache_miss_not_cacheable_avg_10s   +
+            proxy.node.http.cache_miss_client_no_cache_avg_10s +
+            proxy.node.http.cache_miss_ims_avg_10s             +
+            proxy.node.http.cache_read_error_avg_10s
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.cache_hit_ratio_avg_10s</destination>
+        <destination scope="cluster" operation="re-calculate">proxy.cluster.cache_hit_ratio_avg_10s</destination>
+        <expression>
+            proxy.node.cache_total_hits_avg_10s   /
+            (
+            proxy.node.cache_total_hits_avg_10s   +
+            proxy.node.cache_total_misses_avg_10s
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.cache_hit_mem_ratio_avg_10s</destination>
+        <destination scope="cluster" operation="re-calculate">proxy.cluster.cache_hit_mem_ratio_avg_10s</destination>
+        <expression>
+            proxy.node.cache_total_hits_mem_avg_10s   /
+            (
+            proxy.node.cache_total_hits_avg_10s   +
+            proxy.node.cache_total_misses_avg_10s
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100"
+        interval="10">
+        <destination>proxy.node.cache_hit_ratio_avg_10s_int_pct</destination>
+        <expression>
+	    proxy.node.cache_hit_ratio_avg_10s *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100"
+        interval="10">
+        <destination>proxy.node.cache_hit_mem_ratio_avg_10s_int_pct</destination>
+        <expression>
+	    proxy.node.cache_hit_mem_ratio_avg_10s *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.cache_total_hits</destination>
+        <destination scope="cluster">proxy.cluster.cache_total_hits</destination>
+        <expression>
+            proxy.process.http.cache_hit_fresh        +
+            proxy.process.http.cache_hit_revalidated  +
+            proxy.process.http.cache_hit_ims          +
+            proxy.process.http.cache_hit_stale_served
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.cache_total_hits_mem</destination>
+        <destination scope="cluster">proxy.cluster.cache_total_hits_mem</destination>
+        <expression>
+            proxy.process.http.cache_hit_mem_fresh
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.cache_total_misses</destination>
+        <destination scope="cluster">proxy.cluster.cache_total_misses</destination>
+        <expression>
+            proxy.process.http.cache_miss_cold            +
+            proxy.process.http.cache_miss_changed         +
+            proxy.process.http.cache_miss_not_cacheable   +
+            proxy.process.http.cache_miss_client_no_cache +
+            proxy.process.http.cache_miss_ims             +
+            proxy.process.http.cache_read_error
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.cache_hit_ratio</destination>
+        <destination scope="cluster" operation="re-calculate">proxy.cluster.cache_hit_ratio</destination>
+        <expression>
+            proxy.node.cache_total_hits   /
+            (
+            proxy.node.cache_total_hits   +
+            proxy.node.cache_total_misses
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.cache_hit_mem_ratio</destination>
+        <destination scope="cluster" operation="re-calculate">proxy.cluster.cache_hit_mem_ratio</destination>
+        <expression>
+            proxy.node.cache_total_hits_mem   /
+            (
+            proxy.node.cache_total_hits   +
+            proxy.node.cache_total_misses
+            )
+        </expression>
+    </statistics>
+
+	<!-- ########################################################################### -->
+    <!-- StatAggregation::Ag_cachePercent() -->
+    <statistics
+	minimum="0">
+        <destination>proxy.node.cache.bytes_free</destination>
+        <expression>
+            proxy.process.cache.bytes_total -
+            proxy.process.cache.bytes_used
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.cache.percent_free</destination>
+        <destination scope="cluster">proxy.cluster.cache.percent_free</destination>
+        <expression>
+            proxy.node.cache.bytes_free /
+            proxy.process.cache.bytes_total
+        </expression>
+    </statistics>
+
+
+	<!-- ########################################################################### -->
+    <!-- StatAggregation::Ag_TransactionPercentsAndMeanTimes() -->
+        <!-- counts_names -->
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.hit_fresh</destination>                            
+        <expression>
+            #proxy.process.http.transaction_counts.hit_fresh
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.hit_revalidated</destination>                      
+        <expression>
+            #proxy.process.http.transaction_counts.hit_revalidated
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.miss_cold</destination>                            
+        <expression>
+            #proxy.process.http.transaction_counts.miss_cold
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.miss_changed</destination>                         
+        <expression>
+            #proxy.process.http.transaction_counts.miss_changed
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache</destination>                 
+        <expression>
+            #proxy.process.http.transaction_counts.miss_client_no_cache
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable</destination>                   
+        <expression>
+            #proxy.process.http.transaction_counts.miss_not_cacheable
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.errors.connect_failed</destination>                
+        <expression>
+            #proxy.process.http.transaction_counts.errors.connect_failed
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.errors.aborts</destination>                        
+        <expression>
+            #proxy.process.http.transaction_counts.errors.aborts
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts</destination>               
+        <expression>
+            #proxy.process.http.transaction_counts.errors.possible_aborts
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups</destination>
+        <expression>
+            #proxy.process.http.transaction_counts.errors.pre_accept_hangups
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.errors.early_hangups</destination>                 
+        <expression>
+            #proxy.process.http.transaction_counts.errors.early_hangups
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups</destination>                 
+        <expression>
+            #proxy.process.http.transaction_counts.errors.empty_hangups
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_counts_avg_10s.errors.other</destination>                         
+        <expression>
+            #proxy.process.http.transaction_counts.errors.other
+        </expression>
+    </statistics>
+
+
+        <!-- StatAggregation.cc::frac_names() -->
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.hit_fresh</destination>                            
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.hit_revalidated</destination>                      
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.miss_cold</destination>                            
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.miss_cold /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.miss_changed</destination>
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.miss_changed /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.miss_client_no_cache</destination>                 
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.miss_not_cacheable</destination>
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.connect_failed</destination>                
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.aborts</destination>                        
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.possible_aborts</destination>               
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.pre_accept_hangups</destination>
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.early_hangups</destination>                 
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.empty_hangups</destination>                 
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="1"
+        interval="10">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.other</destination>
+        <expression>
+            proxy.node.http.transaction_counts_avg_10s.errors.other /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+        <!-- frac_int_names -->
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.hit_fresh_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.hit_fresh *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.hit_revalidated_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.hit_revalidated *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.miss_cold_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.miss_cold *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.miss_changed_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.miss_changed *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.miss_client_no_cache_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.miss_client_no_cache *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.miss_not_cacheable_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.miss_not_cacheable *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.connect_failed_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.errors.connect_failed *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.aborts_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.errors.aborts *
+            $PCT_TO_INTPCT_SCALE
+       </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.possible_aborts_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.errors.possible_aborts *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.pre_accept_hangups_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.errors.pre_accept_hangups *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.early_hangups_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.errors.early_hangups *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.empty_hangups_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.errors.empty_hangups *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+	maximum="100">
+        <destination>proxy.node.http.transaction_frac_avg_10s.errors.other_int_pct</destination>
+        <expression>
+            proxy.node.http.transaction_frac_avg_10s.errors.other *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+        <!-- avgtime_names -->
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.hit_fresh</destination>
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE                  *
+            #proxy.process.http.transaction_totaltime.hit_fresh /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.hit_revalidated</destination>                      
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE         *
+            #proxy.process.http.transaction_totaltime.hit_revalidated /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.miss_cold</destination>                            
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE   *
+            #proxy.process.http.transaction_totaltime.miss_cold /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.miss_changed</destination>                         
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE      *
+            #proxy.process.http.transaction_totaltime.miss_changed /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.miss_client_no_cache</destination>                 
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE              *
+            #proxy.process.http.transaction_totaltime.miss_client_no_cache /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.miss_not_cacheable</destination>                   
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE            *
+            #proxy.process.http.transaction_totaltime.miss_not_cacheable /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.errors.connect_failed</destination>                
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE               *
+            #proxy.process.http.transaction_totaltime.errors.connect_failed /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.errors.aborts</destination>                        
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE       *
+            #proxy.process.http.transaction_totaltime.errors.aborts /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.errors.possible_aborts</destination>               
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE                *
+            #proxy.process.http.transaction_totaltime.errors.possible_aborts /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.errors.pre_accept_hangups</destination>
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE                   *
+            #proxy.process.http.transaction_totaltime.errors.pre_accept_hangups /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.errors.early_hangups</destination>                 
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE              *
+            #proxy.process.http.transaction_totaltime.errors.early_hangups /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.errors.empty_hangups</destination>                 
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE              *
+            #proxy.process.http.transaction_totaltime.errors.empty_hangups /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.http.transaction_msec_avg_10s.errors.other</destination>                         
+        <expression>
+            $SECOND_TO_MILLISECOND_SCALE      *
+            #proxy.process.http.transaction_totaltime.errors.other /
+            (
+            proxy.node.http.transaction_counts_avg_10s.hit_fresh                 +
+            proxy.node.http.transaction_counts_avg_10s.hit_revalidated           +
+            proxy.node.http.transaction_counts_avg_10s.miss_cold                 +
+            proxy.node.http.transaction_counts_avg_10s.miss_changed              +
+            proxy.node.http.transaction_counts_avg_10s.miss_client_no_cache      +
+            proxy.node.http.transaction_counts_avg_10s.miss_not_cacheable        +
+            proxy.node.http.transaction_counts_avg_10s.errors.connect_failed     +
+            proxy.node.http.transaction_counts_avg_10s.errors.aborts             +
+            proxy.node.http.transaction_counts_avg_10s.errors.possible_aborts    +
+            proxy.node.http.transaction_counts_avg_10s.errors.pre_accept_hangups +
+            proxy.node.http.transaction_counts_avg_10s.errors.early_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.empty_hangups      +
+            proxy.node.http.transaction_counts_avg_10s.errors.other
+            )
+        </expression>
+    </statistics>
+
+
+	<!-- ########################################################################### -->
+    <!-- StatAggregation::Ag_Connections() -->
+    <statistics
+	minimum="0">
+        <destination>proxy.node.current_client_connections</destination>
+        <destination scope="cluster">proxy.cluster.current_client_connections</destination>
+        <expression>
+            proxy.node.http.user_agent_current_connections_count
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.current_server_connections</destination>
+        <destination scope="cluster">proxy.cluster.current_server_connections</destination>
+        <expression>
+            proxy.node.http.origin_server_current_connections_count +
+            proxy.node.http.current_parent_proxy_connections
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.current_cache_connections</destination>
+        <destination scope="cluster">proxy.cluster.current_cache_connections</destination>
+        <expression>
+            proxy.node.http.cache_current_connections_count
+        </expression>
+    </statistics>
+
+
+    <!-- Others -->
+    <statistics
+	minimum="0">
+        <destination>proxy.node.client_throughput_out_kbit</destination>
+        <destination scope="cluster">proxy.cluster.client_throughput_out_kbit</destination>
+        <expression>
+            proxy.node.client_throughput_out *
+            $MBIT_TO_KBIT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.cache_hit_ratio_int_pct</destination>
+        <destination scope="cluster">proxy.cluster.cache_hit_ratio_int_pct</destination>
+        <expression>
+            proxy.node.cache_hit_ratio *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.cache_hit_mem_ratio_int_pct</destination>
+        <destination scope="cluster">proxy.cluster.cache_hit_mem_ratio_int_pct</destination>
+        <expression>
+            proxy.node.cache_hit_mem_ratio *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.bandwidth_hit_ratio_int_pct</destination>
+        <destination scope="cluster">proxy.cluster.bandwidth_hit_ratio_int_pct</destination>
+        <expression>
+            proxy.node.bandwidth_hit_ratio *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.cache.percent_free_int_pct</destination>
+        <destination scope="cluster">proxy.cluster.cache.percent_free_int_pct</destination>
+        <expression>
+            proxy.node.cache.percent_free *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.hostdb.hit_ratio_int_pct</destination>
+        <destination scope="cluster">proxy.cluster.hostdb.hit_ratio_int_pct</destination>
+        <expression>
+            proxy.node.hostdb.hit_ratio *
+            $PCT_TO_INTPCT_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.cache.bytes_total_mb</destination>
+        <expression>
+            proxy.process.cache.bytes_total *
+            $BYTES_TO_MB_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.cache.bytes_free_mb</destination>
+        <expression>
+            proxy.node.cache.bytes_free *
+            $BYTES_TO_MB_SCALE
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination>proxy.cluster.cache.bytes_free_mb</destination>
+        <expression>
+            proxy.cluster.cache.bytes_free *
+            $BYTES_TO_MB_SCALE
+        </expression>
+    </statistics>
+
+
+<!-- -->
+
+    <statistics
+	minimum="0">
+        <destination scope="cluster">proxy.cluster.http.current_parent_proxy_connections</destination>
+        <expression>
+            proxy.node.http.current_parent_proxy_connections
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination scope="cluster">proxy.cluster.http.parent_proxy_total_request_bytes</destination>
+        <expression>
+        proxy.node.http.parent_proxy_total_request_bytes
+        </expression>
+    </statistics>
+
+
+    <statistics
+	minimum="0">
+        <destination scope="cluster">proxy.cluster.http.parent_proxy_total_response_bytes</destination>
+        <expression>
+             proxy.node.http.parent_proxy_total_response_bytes
+        </expression>
+    </statistics>
+
+    <!-- Logging -->
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.event_log_access_ok</destination>
+	<destination scope="cluster">proxy.cluster.log.event_log_access_ok</destination>
+        <expression>
+	    proxy.process.log.event_log_access_ok
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.event_log_access_skip</destination>
+	<destination scope="cluster">proxy.cluster.log.event_log_access_skip</destination>
+        <expression>
+	    proxy.process.log.event_log_access_skip
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.event_log_access_aggr</destination>
+	<destination scope="cluster">proxy.cluster.log.event_log_access_aggr</destination>
+        <expression>
+	    proxy.process.log.event_log_access_aggr
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.event_log_access_full</destination>
+	<destination scope="cluster">proxy.cluster.log.event_log_access_full</destination>
+        <expression>
+            proxy.process.log.event_log_access_full
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.event_log_access_fail</destination>
+	<destination scope="cluster">proxy.cluster.log.event_log_access_fail</destination>
+        <expression>
+            proxy.process.log.event_log_access_fail
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.num_lost_before_sent_to_network</destination>
+	<destination scope="cluster">proxy.cluster.log.num_lost_before_sent_to_network</destination>
+        <expression>
+            proxy.process.log.num_lost_before_sent_to_network
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.num_sent_to_network</destination>
+	<destination scope="cluster">proxy.cluster.log.num_sent_to_network</destination>
+        <expression>
+            proxy.process.log.num_sent_to_network
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.bytes_lost_before_sent_to_network</destination>
+	<destination scope="cluster">proxy.cluster.log.bytes_lost_before_sent_to_network</destination>
+        <expression>
+            proxy.process.log.bytes_lost_before_sent_to_network
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.bytes_sent_to_network</destination>
+	<destination scope="cluster">proxy.cluster.log.bytes_sent_to_network</destination>
+        <expression>
+            proxy.process.log.bytes_sent_to_network
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.num_received_from_network</destination>
+	<destination scope="cluster">proxy.cluster.log.num_received_from_network</destination>
+        <expression>
+            proxy.process.log.num_received_from_network
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.bytes_received_from_network</destination>
+	<destination scope="cluster">proxy.cluster.log.bytes_received_from_network</destination>
+        <expression>
+            proxy.process.log.bytes_received_from_network
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.bytes_lost_before_preproc</destination>
+	<destination scope="cluster">proxy.cluster.log.bytes_lost_before_preproc</destination>
+        <expression>
+            proxy.process.log.bytes_lost_before_preproc
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.num_lost_before_flush_to_disk</destination>
+	<destination scope="cluster">proxy.cluster.log.num_lost_before_flush_to_disk</destination>
+        <expression>
+            proxy.process.log.num_lost_before_flush_to_disk
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.bytes_lost_before_flush_to_disk</destination>
+	<destination scope="cluster">proxy.cluster.log.bytes_lost_before_flush_to_disk</destination>
+        <expression>
+            proxy.process.log.bytes_lost_before_flush_to_disk
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.node.log.bytes_lost_before_written_to_disk</destination>
+	<destination scope="cluster">proxy.cluster.log.bytes_lost_before_written_to_disk</destination>
+        <expression>
+            proxy.process.log.bytes_lost_before_written_to_disk
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.log.bytes_sent_to_network_avg_10s</destination>
+        <destination scope="cluster">proxy.cluster.log.bytes_sent_to_network_avg_10s</destination>
+        <expression>
+            #proxy.process.log.bytes_sent_to_network
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0"
+        interval="10">
+        <destination>proxy.node.log.bytes_received_from_network_avg_10s</destination>
+        <destination scope="cluster">proxy.cluster.log.bytes_received_from_network_avg_10s</destination>
+        <expression>
+            #proxy.process.log.bytes_received_from_network
+        </expression>
+    </statistics>
+
+    <statistics
+	minimum="0">
+        <destination>proxy.process.ssl.total_success_handshake_count_in</destination>
+        <expression>
+            proxy.process.ssl.total_success_handshake_count
+        </expression>
+    </statistics>
+
+</ink:statistics>
+
+
diff -uNr ats_etc_init/storage.config ats1_etc_dest/storage.config
--- ats_etc_init/storage.config	2017-06-28 03:07:12.913572959 +0000
+++ ats1_etc_dest/storage.config	2017-06-28 03:07:04.337572258 +0000
@@ -14,15 +14,15 @@
 # Where 'pathname' is full path to the directory where you want
 # the cache-file to live and 'size' is size in bytes
 #
-# Example: 128MB cache file(/home/ats/var/trafficserver/cache.db)
-#      /home/ats/var/trafficserver 128M
+# Example: 128MB cache file(/home/ats//var/trafficserver/cache.db)
+#      /home/ats//var/trafficserver 128M
 #
-# Example: 144MB cache file(/home/ats/var/trafficserver/cache.db)
-#          assuming prefix of '/home/ats'
+# Example: 144MB cache file(/home/ats//var/trafficserver/cache.db)
+#          assuming prefix of '/home/ats/'
 #      var/trafficserver 150994944
 #
-# Example: 512MB cache file(/home/ats/var/trafficserver/cache.db)
-#          assuming prefix of '/home/ats'
+# Example: 512MB cache file(/home/ats//var/trafficserver/cache.db)
+#          assuming prefix of '/home/ats/'
 #      var/trafficserver 512M
 #
 #
@@ -51,4 +51,12 @@
 # A small default cache (256MB). This is set to allow for the regression test to succeed
 # most likely you'll want to use a larger cache. And, we definitely recommend the use
 # of raw devices for production caches.
-var/trafficserver 256M
+var/trafficserver 48G
+#/data1/trafficserver 2048G
+#/data2/trafficserver 2048G
+#/data3/trafficserver 2048G
+#/data4/trafficserver 2048G
+#/data5/trafficserver 2048G
+#/data6/trafficserver 2048G
+#/data7/trafficserver 2048G
+#/data8/trafficserver 2048G
diff -uNr ats_etc_init/storage.config_1 ats1_etc_dest/storage.config_1
--- ats_etc_init/storage.config_1	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/storage.config_1	2017-06-28 03:07:04.338572293 +0000
@@ -0,0 +1,62 @@
+#
+# Storage Configuration file
+#
+#
+# The storage configuration is a list of all the storage to
+# be used by the cache.
+#
+#
+#############################################################
+# Using a file for the cache storage
+#
+# <pathname> <size>
+#
+# Where 'pathname' is full path to the directory where you want
+# the cache-file to live and 'size' is size in bytes
+#
+# Example: 128MB cache file(/home/ats//var/trafficserver/cache.db)
+#      /home/ats//var/trafficserver 128M
+#
+# Example: 144MB cache file(/home/ats//var/trafficserver/cache.db)
+#          assuming prefix of '/home/ats/'
+#      var/trafficserver 150994944
+#
+# Example: 512MB cache file(/home/ats//var/trafficserver/cache.db)
+#          assuming prefix of '/home/ats/'
+#      var/trafficserver 512M
+#
+#
+#############################################################
+##              O_DIRECT Specific Configuration            ##
+#############################################################
+#
+# Examples: Using O_DIRECT on disks (Linux kernel >= 2.6.3,
+# FreeBSD > 5.3)
+#
+#      /dev/disc/by-id/[Insert_ID_Here_12345]         		# Linux
+#      /dev/disc/by-path/[Insert-Path-Here:12:34:56-1.0.0.0]	# Linux
+#
+#      /dev/ada1            					# FreeBSD
+#
+# Note that disks are identified by id or path. This is to prevent changes
+# by the kernel (which could occur if a disk was simply described as /dev/sda, sdb, etc.).
+#
+# Also note that when using these raw devices in O_DIRECT mode, you
+# do not need to specify the partition size. It's automatically
+# detected. For more examples and a complete documentation see
+#
+#  https://docs.trafficserver.apache.org/en/latest/reference/configuration/storage.config.en.html
+#
+#
+# A small default cache (256MB). This is set to allow for the regression test to succeed
+# most likely you'll want to use a larger cache. And, we definitely recommend the use
+# of raw devices for production caches.
+var/trafficserver 48G
+#/data1/trafficserver 2048G
+#/data2/trafficserver 2048G
+#/data3/trafficserver 2048G
+#/data4/trafficserver 2048G
+#/data5/trafficserver 2048G
+#/data6/trafficserver 2048G
+#/data7/trafficserver 2048G
+#/data8/trafficserver 2048G
diff -uNr ats_etc_init/storage.config.default ats1_etc_dest/storage.config.default
--- ats_etc_init/storage.config.default	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/storage.config.default	2017-06-28 03:07:04.251565334 +0000
@@ -0,0 +1,54 @@
+#
+# Storage Configuration file
+#
+#
+# The storage configuration is a list of all the storage to
+# be used by the cache.
+#
+#
+#############################################################
+# Using a file for the cache storage
+#
+# <pathname> <size>
+#
+# Where 'pathname' is full path to the directory where you want
+# the cache-file to live and 'size' is size in bytes
+#
+# Example: 128MB cache file(/home/ats/var/trafficserver/cache.db)
+#      /home/ats/var/trafficserver 128M
+#
+# Example: 144MB cache file(/home/ats/var/trafficserver/cache.db)
+#          assuming prefix of '/home/ats'
+#      var/trafficserver 150994944
+#
+# Example: 512MB cache file(/home/ats/var/trafficserver/cache.db)
+#          assuming prefix of '/home/ats'
+#      var/trafficserver 512M
+#
+#
+#############################################################
+##              O_DIRECT Specific Configuration            ##
+#############################################################
+#
+# Examples: Using O_DIRECT on disks (Linux kernel >= 2.6.3,
+# FreeBSD > 5.3)
+#
+#      /dev/disc/by-id/[Insert_ID_Here_12345]         		# Linux
+#      /dev/disc/by-path/[Insert-Path-Here:12:34:56-1.0.0.0]	# Linux
+#
+#      /dev/ada1            					# FreeBSD
+#
+# Note that disks are identified by id or path. This is to prevent changes
+# by the kernel (which could occur if a disk was simply described as /dev/sda, sdb, etc.).
+#
+# Also note that when using these raw devices in O_DIRECT mode, you
+# do not need to specify the partition size. It's automatically
+# detected. For more examples and a complete documentation see
+#
+#  https://docs.trafficserver.apache.org/en/latest/reference/configuration/storage.config.en.html
+#
+#
+# A small default cache (256MB). This is set to allow for the regression test to succeed
+# most likely you'll want to use a larger cache. And, we definitely recommend the use
+# of raw devices for production caches.
+var/trafficserver 256M
diff -uNr ats_etc_init/vaddrs.config_1 ats1_etc_dest/vaddrs.config_1
--- ats_etc_init/vaddrs.config_1	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/vaddrs.config_1	2017-06-28 03:07:04.334572193 +0000
@@ -0,0 +1,22 @@
+# Virtual IP Address Configuration
+#
+# The purpose of this file is to specify virtual IP addresses
+# for Traffic Server. This DOES NOT actually bind to these
+# addresses; ATS either listens to all or the address specified
+# through proxy.local.incoming_ip_to_bind.
+#
+# The vips specified here will be verified and broadcast across
+# the cluster. Any conflicts will be logged as errors.
+#
+# In order to enable these checks you must also set:
+#     CONFIG proxy.config.vmap.enabled INT 1
+# In records.conf
+#
+# UNIX
+#   Format:
+#     <virtual IP address> <interface> <sub-interface>
+#
+#   Example:
+#     209.1.33.10 hme0 10
+#     209.1.33.11 hme0 11
+#
diff -uNr ats_etc_init/vaddrs.config.default ats1_etc_dest/vaddrs.config.default
--- ats_etc_init/vaddrs.config.default	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/vaddrs.config.default	2017-06-28 03:07:04.336572223 +0000
@@ -0,0 +1,22 @@
+# Virtual IP Address Configuration
+#
+# The purpose of this file is to specify virtual IP addresses
+# for Traffic Server. This DOES NOT actually bind to these
+# addresses; ATS either listens to all or the address specified
+# through proxy.local.incoming_ip_to_bind.
+#
+# The vips specified here will be verified and broadcast across
+# the cluster. Any conflicts will be logged as errors.
+#
+# In order to enable these checks you must also set:
+#     CONFIG proxy.config.vmap.enabled INT 1
+# In records.conf
+#
+# UNIX
+#   Format:
+#     <virtual IP address> <interface> <sub-interface>
+#
+#   Example:
+#     209.1.33.10 hme0 10
+#     209.1.33.11 hme0 11
+#
diff -uNr ats_etc_init/volume.config_1 ats1_etc_dest/volume.config_1
--- ats_etc_init/volume.config_1	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/volume.config_1	2017-06-28 03:07:04.249565100 +0000
@@ -0,0 +1,30 @@
+#
+# 
+# This file specifies the various volumes, their sizes and the 
+# protocol they belong to. Use this file in conjunction with the 
+# hosting.config file.
+#
+#  Each line consists of a tag value pair.
+#    volume=<volume_number> scheme=<protocol_type> size=<volume_size>
+#
+#  volume_number can be any value between 1 and 255. 
+#  This limits the maximum number of volumes to 255. 
+#  Volume number 0 is reserved for the special free volume. 
+#  Each line MUST have a distinct volume number.
+#
+#  The only scheme currently supported is 'http.
+#
+#  volume_size can either be specified in percentage of the total
+#  cache space or absolute value. It must be a multiple of 128 Megabytes,
+#  with 128 Megabytes being the smallest size possible. If specified in 
+#  percentage, the size is rounded down to the closest multiple of 
+#  128 Megabytes. A volume can be as big as the whole cache. 
+#  Each volume is striped across several disks to 
+#  achieve parallel I/O. For example, if there are 4 disks, 
+#  a 1 Gigabyte volume will have 256 Megabytes on each
+#  disk (assuming each disk has enough free space available).
+#
+# To create one volume of size 10% of the total cache space and 
+# another 1 Gig  volume, 
+#  volume=1 scheme=http size=10%
+#  volume=2 scheme=http size=1024
diff -uNr ats_etc_init/volume.config.default ats1_etc_dest/volume.config.default
--- ats_etc_init/volume.config.default	1970-01-01 00:00:00.000000000 +0000
+++ ats1_etc_dest/volume.config.default	2017-06-28 03:07:04.332572146 +0000
@@ -0,0 +1,30 @@
+#
+# 
+# This file specifies the various volumes, their sizes and the 
+# protocol they belong to. Use this file in conjunction with the 
+# hosting.config file.
+#
+#  Each line consists of a tag value pair.
+#    volume=<volume_number> scheme=<protocol_type> size=<volume_size>
+#
+#  volume_number can be any value between 1 and 255. 
+#  This limits the maximum number of volumes to 255. 
+#  Volume number 0 is reserved for the special free volume. 
+#  Each line MUST have a distinct volume number.
+#
+#  The only scheme currently supported is 'http.
+#
+#  volume_size can either be specified in percentage of the total
+#  cache space or absolute value. It must be a multiple of 128 Megabytes,
+#  with 128 Megabytes being the smallest size possible. If specified in 
+#  percentage, the size is rounded down to the closest multiple of 
+#  128 Megabytes. A volume can be as big as the whole cache. 
+#  Each volume is striped across several disks to 
+#  achieve parallel I/O. For example, if there are 4 disks, 
+#  a 1 Gigabyte volume will have 256 Megabytes on each
+#  disk (assuming each disk has enough free space available).
+#
+# To create one volume of size 10% of the total cache space and 
+# another 1 Gig  volume, 
+#  volume=1 scheme=http size=10%
+#  volume=2 scheme=http size=1024
