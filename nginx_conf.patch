diff -uNr /home/nginx/conf/conf.d/default_server.conf ./conf/conf.d/default_server.conf
--- /home/nginx/conf/conf.d/default_server.conf	1970-01-01 00:00:00.000000000 +0000
+++ ./conf/conf.d/default_server.conf	2017-06-23 09:13:44.544316954 +0000
@@ -0,0 +1,15 @@
+#
+#default server returns 403
+server {
+	set $request_time_msc "-";
+        listen 80 default_server;
+        server_name _;
+	if ($request_method = CONNECT)
+	{
+		return 403;
+	}
+        #server_name _ 1.82.228.136 1.82.228.252;
+        location / {
+        	return 403;
+	}
+}
diff -uNr /home/nginx/conf/conf.d/es.conf.bak ./conf/conf.d/es.conf.bak
--- /home/nginx/conf/conf.d/es.conf.bak	1970-01-01 00:00:00.000000000 +0000
+++ ./conf/conf.d/es.conf.bak	2017-06-23 09:13:44.544316954 +0000
@@ -0,0 +1,17 @@
+upstream elasticsearch {
+	ip_hash;
+	server 192.168.0.131; 
+	server 192.168.0.134; 
+}
+
+server {
+    listen       19200;
+    #listen       somename:8080;
+    #server_name  somename  alias  another.alias;
+
+    location / {
+         root   html;
+         index  index.html index.htm;
+	 proxy_pass http://elasticsearch;
+    }
+}
diff -uNr /home/nginx/conf/conf.d/mgtv_download.conf ./conf/conf.d/mgtv_download.conf
--- /home/nginx/conf/conf.d/mgtv_download.conf	1970-01-01 00:00:00.000000000 +0000
+++ ./conf/conf.d/mgtv_download.conf	2017-06-23 09:13:44.545316954 +0000
@@ -0,0 +1,107 @@
+#
+upstream download_ats {
+	keepalive 1024;
+	server 127.0.0.1:8080;
+}
+
+server
+{
+	listen 80;
+	server_name pcdownyd.titan.mgtv.com;
+	set $hit "";
+	set $request_time_msc "-";
+	set $decrypt_download_uri "";
+        client_header_buffer_size    128k;
+        large_client_header_buffers  4  128k;
+
+	log_by_lua '
+		ngx.var.request_time_msc = (tonumber(ngx.var.request_time) or 0) * 1000;
+		if not ngx.var.request_time_msc then
+			ngx.log(ngx.ERR, "ngx.var.request_time_msc is nil")
+		else
+			ngx.log(ngx.DEBUG, "request_time_msc:" .. ngx.var.request_time_msc);
+		end
+	';
+
+	location ~ \.mp4$ {
+		#set_by_lua_file $decrypt_download_uri lua/module/set_decrypt_variable.lua;
+
+		set_by_lua $decrypt_download_uri '
+			local ngx = require("ngx");
+			local ngx = require("ngx");
+			local g_cfg = require("global_conf");
+			local hntv_crypt = require("hntv_crypt_lib");
+			local args = ngx.req.get_uri_args();
+
+			ngx.log(ngx.INFO , "******origin request_uri:[" .. ngx.var.request_uri .. "]");
+			
+			if args["pm"] then
+				local ok, pm = hntv_crypt.decrypt(args["pm"], g_cfg["PNO"]["decrypt_key"]);
+				if not ok then
+					ngx.log(ngx.ERR, "decrypt URL:[" .. pm .. "] failed.");
+					return ngx.var.request_uri;
+				end
+				local kv_tab = {};
+				args["pm"] = nil;
+				for k, v in pairs(args) do
+					table.insert(kv_tab, string.format("%s=%s", k, v));
+				end
+				local t = table.concat(kv_tab, "&");
+				ngx.log(ngx.INFO, "+++++++++++ concat table: pm--->" .. pm .. ", tab--->" .. t);
+				local s = "";
+				if #kv_tab > 0 then
+					s = pm .. "&" .. t;
+				else
+					s = pm;
+				end
+				
+				ngx.log(ngx.INFO, "********* un-encode-url:" .. s);
+				ngx.var["decrypt_download_uri"] = ngx.var.uri .. "?" .. s;
+				
+			else
+				ngx.var["decrypt_download_uri"] = ngx.var.request_uri;
+			end	
+			ngx.log(ngx.INFO, "###------### before decrypt_download_uri:[" .. ngx.var["decrypt_download_uri"] .. "]");
+			return ngx.var["decrypt_download_uri"];
+		';
+
+		slice 16m;
+		proxy_set_header Range $slice_range;
+		#limit rate: 3MB/s
+		limit_rate_after 3m;
+		header_filter_by_lua_file lua/module/cache_lookup.lua;
+		access_by_lua_file lua/module/mp4_download.lua;
+		proxy_pass http://download_ats$decrypt_download_uri;
+		proxy_set_header Host $host;
+		#proxy_set_header User-Agent "XIPU-test-01";
+		proxy_set_header X-Real-IP $remote_addr;
+		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
+		proxy_set_header X-Is-EDU 0;
+		proxy_set_header CDN "XIPU";
+		#client_max_body_size 50m;
+		#client_body_buffer_size 256k;
+		proxy_connect_timeout 15;
+		proxy_send_timeout 300;
+		proxy_read_timeout 300;
+		proxy_ignore_client_abort on;
+                proxy_http_version 1.1;
+                proxy_set_header Connection "";
+		proxy_buffer_size 32k;
+		proxy_buffers 4 16k;
+		proxy_busy_buffers_size 32k;
+		proxy_temp_file_write_size 32k;
+	}
+
+	error_page 500 502 503 504  /50x.html;
+
+	location = /favicon.ico {
+		return 403;
+	}
+
+	location = /50x.html {
+		root   html;
+	}	
+	#error_log   logs/error.log   error;
+	error_log   logs/error.log   debug;
+}
+
diff -uNr /home/nginx/conf/conf.d/mgtv_video.conf ./conf/conf.d/mgtv_video.conf
--- /home/nginx/conf/conf.d/mgtv_video.conf	1970-01-01 00:00:00.000000000 +0000
+++ ./conf/conf.d/mgtv_video.conf	2017-06-23 09:13:44.545316954 +0000
@@ -0,0 +1,253 @@
+#
+
+upstream ats_hls {
+	keepalive 1024;
+	server 127.0.0.1:8080;
+}
+
+server
+{
+	listen 80;
+	server_name "pcvideoyd.titan.mgtv.com";
+	set $hit "";
+	set $request_time_msc "-";
+	set $sub_reqs_uri "";
+	set $ts_reqs_uri "";
+	set $mp4_reqs_uri "";
+
+        log_by_lua '
+                ngx.var.request_time_msc = (tonumber(ngx.var.request_time) or 0) * 1000;
+                if not ngx.var.request_time_msc then
+                     ngx.log(ngx.ERR, "ngx.var.request_time_msc is nil")
+                else
+                   ngx.log(ngx.DEBUG, "request_time_msc:" .. ngx.var.request_time_msc);
+                end
+        ';
+
+	location /cap_sub {
+		set_by_lua $sub_reqs_uri '
+			local ngx = require("ngx");
+			local ngx = require("ngx");
+			local g_cfg = require("global_conf");
+			local hntv_crypt = require("hntv_crypt_lib");
+			local args = ngx.req.get_uri_args();
+
+			ngx.log(ngx.INFO , "******origin request_uri:[" .. ngx.var.request_uri .. "]");
+			
+			if args["pm"] then
+				local ok, pm = hntv_crypt.decrypt(args["pm"], g_cfg["PNO"]["decrypt_key"]);
+				if not ok then
+					ngx.log(ngx.ERR, "decrypt URL:[" .. pm .. "] failed.");
+					return ngx.var.request_uri;
+				end
+				local kv_tab = {};
+				args["pm"] = nil;
+				for k, v in pairs(args) do
+					table.insert(kv_tab, string.format("%s=%s", k, v));
+				end
+				local t = table.concat(kv_tab, "&");
+				local s = "";
+				if #kv_tab > 0 then
+					s = pm .. "&" .. t;
+				else
+					s = pm;
+				end
+				
+				ngx.log(ngx.INFO, "********* un-encode-url:" .. s);
+				ngx.var["sub_reqs_uri"] = ngx.var.uri .. "?" .. s;
+				
+			else
+				ngx.var["sub_reqs_uri"] = ngx.var.request_uri;
+			end	
+			ngx.log(ngx.INFO, "###------### before sub_reqs_uri:[" .. ngx.var["sub_reqs_uri"] .. "]");
+			return ngx.var["sub_reqs_uri"];
+		';
+
+		proxy_pass http://ats_hls$sub_reqs_uri;
+		#proxy_pass http://ats_hls$request_uri;
+		proxy_set_header Host $host;
+		proxy_set_header X-Real-IP $remote_addr;
+		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
+                proxy_set_header CDN "XIPU";
+		client_body_buffer_size 256k;
+		proxy_connect_timeout 60;
+		proxy_send_timeout 300;
+		proxy_read_timeout 300;
+		proxy_buffer_size 512k;
+		proxy_buffers 8 128k;
+		proxy_busy_buffers_size 512k;
+		proxy_temp_file_write_size 8m;
+		proxy_ignore_client_abort on;
+                proxy_http_version 1.1;
+                proxy_set_header Connection "";
+
+		header_filter_by_lua '
+			ngx.header.content_length=nil;
+		';
+		#append parameters after ts lines in m3u8 file
+		body_filter_by_lua '
+			local ngx = require("ngx");
+			local chunk = ngx.arg[1];
+			ngx.log(ngx.WARN, "++++++ capture request:" .. ngx.var.request_uri)
+			ngx.log(ngx.WARN, "===== chunk:" .. chunk)
+			local func = function(m)
+				local uri = ngx.var.request_uri or "";
+				local st, ed = string.find(uri, "?");
+				local para = string.sub(uri, st, -1) or "";
+				return m[0] .. para;
+			end
+
+			local regex = [[\.ts]];
+			local newstr, n, err = ngx.re.gsub(chunk, regex, func, "i");
+			ngx.log(ngx.INFO, "newstr-->" .. newstr .. ", n=" .. tostring(n));
+			ngx.log(ngx.INFO, "error info:" .. tostring(err));
+			ngx.arg[1] = newstr;
+		';
+	}
+
+	location ~ \.m3u8$ {
+		limit_rate_after 3m;
+		access_by_lua_file lua/module/hls_m3u8_request.lua;
+		header_filter_by_lua_file lua/module/cache_lookup.lua;
+		content_by_lua_file lua/module/hls_m3u8_capture.lua;
+		lua_need_request_body on;
+	}
+	
+	location ~ \.ts$ {
+		limit_rate_after 3m;
+		#set_by_lua_file $ts_reqs_uri lua/module/set_decrypt_variable.lua;
+                set_by_lua $ts_reqs_uri '
+                        local ngx = require("ngx");
+                        local g_cfg = require("global_conf");
+                        local hntv_crypt = require("hntv_crypt_lib");
+                        local args = ngx.req.get_uri_args();
+
+                        ngx.log(ngx.INFO , "******origin request_uri:[" .. ngx.var.request_uri .. "]");
+
+                        if args["pm"] then
+                                local ok, pm = hntv_crypt.decrypt(args["pm"], g_cfg["PNO"]["decrypt_key"]);
+                                if not ok then
+                                        ngx.log(ngx.ERR, "decrypt URL:[" .. pm .. "] failed.");
+                                        return ngx.var.request_uri;
+                                end
+                                local kv_tab = {};
+                                args["pm"] = nil;
+                                for k, v in pairs(args) do
+                                        table.insert(kv_tab, string.format("%s=%s", k, v));
+                                end
+                                local t = table.concat(kv_tab, "&");
+                                local s = "";
+                                if #kv_tab > 0 then
+                                        s = pm .. "&" .. t;
+                                else
+                                        s = pm;
+                                end
+
+                                ngx.log(ngx.INFO, "********* un-encode-url:" .. s);
+                                ngx.var["ts_reqs_uri"] = ngx.var.uri .. "?" .. s;
+
+                        else
+                                ngx.var["ts_reqs_uri"] = ngx.var.request_uri;
+                        end
+                        ngx.log(ngx.INFO, "###------### before sub_reqs_uri:[" .. ngx.var["ts_reqs_uri"] .. "]");
+                        return ngx.var["ts_reqs_uri"];
+                ';
+		access_by_lua_file lua/module/hls_ts_request.lua;
+		header_filter_by_lua_file lua/module/cache_lookup.lua;
+		proxy_pass http://ats_hls$ts_reqs_uri;
+		#proxy_pass http://ats_hls$request_uri;
+		proxy_set_header Host $host;
+		proxy_set_header X-Real-IP $remote_addr;
+		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
+                proxy_set_header CDN "XIPU";
+		client_body_buffer_size 256k;
+		proxy_connect_timeout 60;
+		proxy_send_timeout 300;
+		proxy_read_timeout 300;
+                proxy_http_version 1.1;
+                proxy_set_header Connection "";
+		#proxy_buffer_size 512k;
+		#proxy_buffers 8 128k;
+		#proxy_busy_buffers_size 512k;
+		#proxy_temp_file_write_size 8m;
+		proxy_ignore_client_abort on;
+	}
+
+	location ~ \.mp4$ {
+		#set $limit_rate_after 3145728;
+		limit_rate_after 3m;
+		set_by_lua $mp4_reqs_uri '
+			local ngx = require("ngx");
+			local ngx = require("ngx");
+			local g_cfg = require("global_conf");
+			local hntv_crypt = require("hntv_crypt_lib");
+			local args = ngx.req.get_uri_args();
+
+			ngx.log(ngx.INFO , "******origin request_uri:[" .. ngx.var.request_uri .. "]");
+			
+			if args["pm"] then
+				local ok, pm = hntv_crypt.decrypt(args["pm"], g_cfg["PNO"]["decrypt_key"]);
+				if not ok then
+					ngx.log(ngx.ERR, "decrypt URL:[" .. pm .. "] failed.");
+					return ngx.var.request_uri;
+				end
+				local kv_tab = {};
+				args["pm"] = nil;
+				for k, v in pairs(args) do
+					table.insert(kv_tab, string.format("%s=%s", k, v));
+				end
+				local t = table.concat(kv_tab, "&");
+				local s = "";
+				if #kv_tab > 0 then
+					s = pm .. "&" .. t;
+				else
+					s = pm;
+				end
+				
+				ngx.log(ngx.INFO, "********* un-encode-url:" .. s);
+				ngx.var["mp4_reqs_uri"] = ngx.var.uri .. "?" .. s;
+				
+			else
+				ngx.var["mp4_reqs_uri"] = ngx.var.request_uri;
+			end	
+			ngx.log(ngx.INFO, "###------### before sub_reqs_uri:[" .. ngx.var["mp4_reqs_uri"] .. "]");
+			return ngx.var["mp4_reqs_uri"];
+		';
+
+		header_filter_by_lua_file lua/module/cache_lookup.lua;
+		#content_by_lua_file lua/module/mp4_vod.lua;
+		access_by_lua_file lua/module/mp4_vod.lua;
+
+		slice 16m;
+		proxy_set_header Range $slice_range;
+		proxy_pass http://ats_hls$mp4_reqs_uri;
+		proxy_set_header Host $host;
+		proxy_set_header X-Real-IP $remote_addr;
+		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
+		client_body_buffer_size 256k;
+		proxy_connect_timeout 60;
+		proxy_send_timeout 300;
+		proxy_read_timeout 300;
+                proxy_http_version 1.1;
+                proxy_set_header Connection "";
+		#proxy_buffer_size 512k;
+		#proxy_buffers 8 128k;
+		#proxy_busy_buffers_size 512k;
+		#proxy_temp_file_write_size 8m;
+		proxy_ignore_client_abort on;
+	}
+
+        location /crossdomain.xml {
+               proxy_pass http://ats_hls;
+               proxy_set_header Host $host;
+               proxy_set_header X-Real-IP $remote_addr;
+               proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
+                proxy_connect_timeout 60;
+                proxy_send_timeout 300;
+                proxy_read_timeout 300;
+                proxy_http_version 1.1;
+                proxy_set_header Connection "";
+                proxy_ignore_client_abort on;
+        }
+	error_log   logs/error.log   error;
+}
diff -uNr /home/nginx/conf/conf.d/ngx_metric.conf.bk ./conf/conf.d/ngx_metric.conf.bk
--- /home/nginx/conf/conf.d/ngx_metric.conf.bk	1970-01-01 00:00:00.000000000 +0000
+++ ./conf/conf.d/ngx_metric.conf.bk	2017-06-23 09:13:44.545316954 +0000
@@ -0,0 +1,26 @@
+
+#lua_package_path "lua/module/?.lua;;";
+lua_shared_dict result_dict 128M;
+log_by_lua_file lua/module/ngx_metric.lua;
+
+server {
+
+    listen          127.0.0.1:9091;
+    server_name     127.0.0.1;
+    set $request_time_msc "-";
+
+    location /monitor/basic_status {
+        content_by_lua_file lua/module/ngx_metric_output.lua;
+        access_log off;
+        allow 127.0.0.1;
+        deny all;
+    }
+
+    location /monitor/nginx_status {
+        stub_status on;
+        access_log off ;
+        allow 127.0.0.1;
+        deny all;
+    }
+
+}
diff -uNr /home/nginx/conf/fastcgi.conf ./conf/fastcgi.conf
--- /home/nginx/conf/fastcgi.conf	2017-06-23 11:06:58.239316958 +0000
+++ ./conf/fastcgi.conf	2017-06-23 09:13:44.545316954 +0000
@@ -10,6 +10,7 @@
 fastcgi_param  DOCUMENT_URI       $document_uri;
 fastcgi_param  DOCUMENT_ROOT      $document_root;
 fastcgi_param  SERVER_PROTOCOL    $server_protocol;
+fastcgi_param  REQUEST_SCHEME     $scheme;
 fastcgi_param  HTTPS              $https if_not_empty;
 
 fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
diff -uNr /home/nginx/conf/fastcgi.conf.default ./conf/fastcgi.conf.default
--- /home/nginx/conf/fastcgi.conf.default	2017-06-23 11:06:58.245316958 +0000
+++ ./conf/fastcgi.conf.default	2017-06-23 09:13:44.545316954 +0000
@@ -10,6 +10,7 @@
 fastcgi_param  DOCUMENT_URI       $document_uri;
 fastcgi_param  DOCUMENT_ROOT      $document_root;
 fastcgi_param  SERVER_PROTOCOL    $server_protocol;
+fastcgi_param  REQUEST_SCHEME     $scheme;
 fastcgi_param  HTTPS              $https if_not_empty;
 
 fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
diff -uNr /home/nginx/conf/fastcgi_params ./conf/fastcgi_params
--- /home/nginx/conf/fastcgi_params	2017-06-23 11:06:58.224316958 +0000
+++ ./conf/fastcgi_params	2017-06-23 09:13:44.545316954 +0000
@@ -9,6 +9,7 @@
 fastcgi_param  DOCUMENT_URI       $document_uri;
 fastcgi_param  DOCUMENT_ROOT      $document_root;
 fastcgi_param  SERVER_PROTOCOL    $server_protocol;
+fastcgi_param  REQUEST_SCHEME     $scheme;
 fastcgi_param  HTTPS              $https if_not_empty;
 
 fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
diff -uNr /home/nginx/conf/fastcgi_params.default ./conf/fastcgi_params.default
--- /home/nginx/conf/fastcgi_params.default	2017-06-23 11:06:58.231316957 +0000
+++ ./conf/fastcgi_params.default	2017-06-23 09:13:44.545316954 +0000
@@ -9,6 +9,7 @@
 fastcgi_param  DOCUMENT_URI       $document_uri;
 fastcgi_param  DOCUMENT_ROOT      $document_root;
 fastcgi_param  SERVER_PROTOCOL    $server_protocol;
+fastcgi_param  REQUEST_SCHEME     $scheme;
 fastcgi_param  HTTPS              $https if_not_empty;
 
 fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
diff -uNr /home/nginx/conf/nginx.conf ./conf/nginx.conf
--- /home/nginx/conf/nginx.conf	2017-06-23 11:06:58.284316957 +0000
+++ ./conf/nginx.conf	2017-06-23 09:13:44.545316954 +0000
@@ -1,7 +1,9 @@
 
-#user  nobody;
-worker_processes  1;
+##user  nobody;
+worker_processes  16;
+worker_cpu_affinity 0000000000000001 0000000000000010 0000000000000100 0000000000001000 0000000000010000 0000000000100000 0000000001000000 0000000010000000 0000000100000000 0000001000000000 0000010000000000 0000100000000000 0001000000000000 0010000000000000 0100000000000000 1000000000000000;
 
+worker_rlimit_nofile 1000000;
 #error_log  logs/error.log;
 #error_log  logs/error.log  notice;
 #error_log  logs/error.log  info;
@@ -10,7 +12,9 @@
 
 
 events {
-    worker_connections  1024;
+    worker_connections  65535;
+    multi_accept on;
+    use epoll;
 }
 
 
@@ -18,100 +22,31 @@
     include       mime.types;
     default_type  application/octet-stream;
 
-    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
-    #                  '$status $body_bytes_sent "$http_referer" '
-    #                  '"$http_user_agent" "$http_x_forwarded_for"';
+    log_format  main  '$remote_addr - $remote_user [$time_local] "$request_method $scheme://$host$request_uri $server_protocol" '
+    '$status $request_time_msc $upstream_header_time $body_bytes_sent $bytes_sent "$http_referer" "$http_range" '
+    '"$http_user_agent" "$http_x_forwarded_for" "$connection" "$hit" "$server_addr" "$host" "$bytes_array"';
 
-    #access_log  logs/access.log  main;
+    access_log  logs/access.log  main;
 
     sendfile        on;
     #tcp_nopush     on;
+    tcp_nodelay	    on;
 
     #keepalive_timeout  0;
     keepalive_timeout  65;
 
     #gzip  on;
 
-    server {
-        listen       80;
-        server_name  localhost;
-
-        #charset koi8-r;
-
-        #access_log  logs/host.access.log  main;
-
-        location / {
-            root   html;
-            index  index.html index.htm;
-        }
-
-        #error_page  404              /404.html;
-
-        # redirect server error pages to the static page /50x.html
-        #
-        error_page   500 502 503 504  /50x.html;
-        location = /50x.html {
-            root   html;
-        }
-
-        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
-        #
-        #location ~ \.php$ {
-        #    proxy_pass   http://127.0.0.1;
-        #}
-
-        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
-        #
-        #location ~ \.php$ {
-        #    root           html;
-        #    fastcgi_pass   127.0.0.1:9000;
-        #    fastcgi_index  index.php;
-        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
-        #    include        fastcgi_params;
-        #}
-
-        # deny access to .htaccess files, if Apache's document root
-        # concurs with nginx's one
-        #
-        #location ~ /\.ht {
-        #    deny  all;
-        #}
-    }
-
-
-    # another virtual host using mix of IP-, name-, and port-based configuration
-    #
-    #server {
-    #    listen       8000;
-    #    listen       somename:8080;
-    #    server_name  somename  alias  another.alias;
-
-    #    location / {
-    #        root   html;
-    #        index  index.html index.htm;
-    #    }
-    #}
-
-
-    # HTTPS server
-    #
-    #server {
-    #    listen       443 ssl;
-    #    server_name  localhost;
-
-    #    ssl_certificate      cert.pem;
-    #    ssl_certificate_key  cert.key;
-
-    #    ssl_session_cache    shared:SSL:1m;
-    #    ssl_session_timeout  5m;
-
-    #    ssl_ciphers  HIGH:!aNULL:!MD5;
-    #    ssl_prefer_server_ciphers  on;
-
-    #    location / {
-    #        root   html;
-    #        index  index.html index.htm;
-    #    }
-    #}
+    server_tokens off;
 
+    lua_package_path '/home/nginx/lua/config/?.lua;/home/nginx/lua/lib/lualib/?.lua;/home/nginx/lua/lib/devel/?.lua;/home/nginx/lua/module/?.lua;;';
+    lua_package_cpath '/home/nginx/lua/lib/clib/?.so;;';
+    lua_shared_dict storehouse 16m;
+    lua_shared_dict cache 16m;
+
+    #proxy_cache_path /ssd1/ngx/nginx_cache/ levels=1:2 keys_zone=cache0:2048m max_size=512g;
+    #proxy_temp_path  /ssd1/ngx/nginx_cache_tmp/;
+
+    ###################
+    include /home/nginx/conf/conf.d/*.conf;
 }
diff -uNr /home/nginx/conf/scgi_params ./conf/scgi_params
--- /home/nginx/conf/scgi_params	2017-06-23 11:06:58.267316957 +0000
+++ ./conf/scgi_params	2017-06-23 09:13:44.545316954 +0000
@@ -8,6 +8,7 @@
 scgi_param  DOCUMENT_ROOT      $document_root;
 scgi_param  SCGI               1;
 scgi_param  SERVER_PROTOCOL    $server_protocol;
+scgi_param  REQUEST_SCHEME     $scheme;
 scgi_param  HTTPS              $https if_not_empty;
 
 scgi_param  REMOTE_ADDR        $remote_addr;
diff -uNr /home/nginx/conf/scgi_params.default ./conf/scgi_params.default
--- /home/nginx/conf/scgi_params.default	2017-06-23 11:06:58.271316958 +0000
+++ ./conf/scgi_params.default	2017-06-23 09:13:44.545316954 +0000
@@ -8,6 +8,7 @@
 scgi_param  DOCUMENT_ROOT      $document_root;
 scgi_param  SCGI               1;
 scgi_param  SERVER_PROTOCOL    $server_protocol;
+scgi_param  REQUEST_SCHEME     $scheme;
 scgi_param  HTTPS              $https if_not_empty;
 
 scgi_param  REMOTE_ADDR        $remote_addr;
diff -uNr /home/nginx/conf/uwsgi_params ./conf/uwsgi_params
--- /home/nginx/conf/uwsgi_params	2017-06-23 11:06:58.252316958 +0000
+++ ./conf/uwsgi_params	2017-06-23 09:13:44.545316954 +0000
@@ -8,6 +8,7 @@
 uwsgi_param  PATH_INFO          $document_uri;
 uwsgi_param  DOCUMENT_ROOT      $document_root;
 uwsgi_param  SERVER_PROTOCOL    $server_protocol;
+uwsgi_param  REQUEST_SCHEME     $scheme;
 uwsgi_param  HTTPS              $https if_not_empty;
 
 uwsgi_param  REMOTE_ADDR        $remote_addr;
diff -uNr /home/nginx/conf/uwsgi_params.default ./conf/uwsgi_params.default
--- /home/nginx/conf/uwsgi_params.default	2017-06-23 11:06:58.257316958 +0000
+++ ./conf/uwsgi_params.default	2017-06-23 09:13:44.545316954 +0000
@@ -8,6 +8,7 @@
 uwsgi_param  PATH_INFO          $document_uri;
 uwsgi_param  DOCUMENT_ROOT      $document_root;
 uwsgi_param  SERVER_PROTOCOL    $server_protocol;
+uwsgi_param  REQUEST_SCHEME     $scheme;
 uwsgi_param  HTTPS              $https if_not_empty;
 
 uwsgi_param  REMOTE_ADDR        $remote_addr;
